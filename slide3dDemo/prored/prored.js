!function t(e, n, r) {
    function i(o, s) {
        if (!n[o]) {
            if (!e[o]) {
                var l = "function" == typeof require && require;
                if (!s && l)
                    return l(o, !0);
                if (a)
                    return a(o, !0);
                var c = new Error("Cannot find module '" + o + "'");
                throw c.code = "MODULE_NOT_FOUND",
                c
            }
            var u = n[o] = {
                exports: {}
            };
            e[o][0].call(u.exports, function(t) {
                var n = e[o][1][t];
                return i(n || t)
            }, u, u.exports, t, e, n, r)
        }
        return n[o].exports
    }
    for (var a = "function" == typeof require && require, o = 0; o < r.length; o++)
        i(r[o]);
    return i
}({
    1: [function(t, e, n) {
        !function(t, r) {
            if ("object" == typeof n && "object" == typeof e)
                e.exports = r();
            else if ("function" == typeof define && define.amd)
                define([], r);
            else {
                var i = r();
                for (var a in i)
                    ("object" == typeof n ? n : t)[a] = i[a]
            }
        }(this, function() {
            return function(t) {
                function e(r) {
                    if (n[r])
                        return n[r].exports;
                    var i = n[r] = {
                        i: r,
                        l: !1,
                        exports: {}
                    };
                    return t[r].call(i.exports, i, i.exports, e),
                    i.l = !0,
                    i.exports
                }
                var n = {};
                return e.m = t,
                e.c = n,
                e.d = function(t, n, r) {
                    e.o(t, n) || Object.defineProperty(t, n, {
                        configurable: !1,
                        enumerable: !0,
                        get: r
                    })
                }
                ,
                e.n = function(t) {
                    var n = t && t.__esModule ? function() {
                        return t.default
                    }
                    : function() {
                        return t
                    }
                    ;
                    return e.d(n, "a", n),
                    n
                }
                ,
                e.o = function(t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e)
                }
                ,
                e.p = "",
                e(e.s = 4)
            }([function(t, e, n) {
                "use strict";
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.setMatrixArrayType = function(t) {
                    e.ARRAY_TYPE = i = t
                }
                ,
                e.toRadian = function(t) {
                    return t * a
                }
                ,
                e.equals = function(t, e) {
                    return Math.abs(t - e) <= r * Math.max(1, Math.abs(t), Math.abs(e))
                }
                ;
                var r = e.EPSILON = 1e-6
                  , i = e.ARRAY_TYPE = "undefined" != typeof Float32Array ? Float32Array : Array
                  , a = (e.RANDOM = Math.random,
                Math.PI / 180)
            }
            , function(t, e, n) {
                "use strict";
                function r(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = e[4]
                      , l = e[5]
                      , c = e[6]
                      , u = e[7]
                      , h = e[8]
                      , d = n[0]
                      , p = n[1]
                      , f = n[2]
                      , m = n[3]
                      , v = n[4]
                      , g = n[5]
                      , y = n[6]
                      , x = n[7]
                      , b = n[8];
                    return t[0] = d * r + p * o + f * c,
                    t[1] = d * i + p * s + f * u,
                    t[2] = d * a + p * l + f * h,
                    t[3] = m * r + v * o + g * c,
                    t[4] = m * i + v * s + g * u,
                    t[5] = m * a + v * l + g * h,
                    t[6] = y * r + x * o + b * c,
                    t[7] = y * i + x * s + b * u,
                    t[8] = y * a + x * l + b * h,
                    t
                }
                function i(t, e, n) {
                    return t[0] = e[0] - n[0],
                    t[1] = e[1] - n[1],
                    t[2] = e[2] - n[2],
                    t[3] = e[3] - n[3],
                    t[4] = e[4] - n[4],
                    t[5] = e[5] - n[5],
                    t[6] = e[6] - n[6],
                    t[7] = e[7] - n[7],
                    t[8] = e[8] - n[8],
                    t
                }
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.sub = e.mul = void 0,
                e.create = function() {
                    var t = new a.ARRAY_TYPE(9);
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 1,
                    t[5] = 0,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = 1,
                    t
                }
                ,
                e.fromMat4 = function(t, e) {
                    return t[0] = e[0],
                    t[1] = e[1],
                    t[2] = e[2],
                    t[3] = e[4],
                    t[4] = e[5],
                    t[5] = e[6],
                    t[6] = e[8],
                    t[7] = e[9],
                    t[8] = e[10],
                    t
                }
                ,
                e.clone = function(t) {
                    var e = new a.ARRAY_TYPE(9);
                    return e[0] = t[0],
                    e[1] = t[1],
                    e[2] = t[2],
                    e[3] = t[3],
                    e[4] = t[4],
                    e[5] = t[5],
                    e[6] = t[6],
                    e[7] = t[7],
                    e[8] = t[8],
                    e
                }
                ,
                e.copy = function(t, e) {
                    return t[0] = e[0],
                    t[1] = e[1],
                    t[2] = e[2],
                    t[3] = e[3],
                    t[4] = e[4],
                    t[5] = e[5],
                    t[6] = e[6],
                    t[7] = e[7],
                    t[8] = e[8],
                    t
                }
                ,
                e.fromValues = function(t, e, n, r, i, o, s, l, c) {
                    var u = new a.ARRAY_TYPE(9);
                    return u[0] = t,
                    u[1] = e,
                    u[2] = n,
                    u[3] = r,
                    u[4] = i,
                    u[5] = o,
                    u[6] = s,
                    u[7] = l,
                    u[8] = c,
                    u
                }
                ,
                e.set = function(t, e, n, r, i, a, o, s, l, c) {
                    return t[0] = e,
                    t[1] = n,
                    t[2] = r,
                    t[3] = i,
                    t[4] = a,
                    t[5] = o,
                    t[6] = s,
                    t[7] = l,
                    t[8] = c,
                    t
                }
                ,
                e.identity = function(t) {
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 1,
                    t[5] = 0,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = 1,
                    t
                }
                ,
                e.transpose = function(t, e) {
                    if (t === e) {
                        var n = e[1]
                          , r = e[2]
                          , i = e[5];
                        t[1] = e[3],
                        t[2] = e[6],
                        t[3] = n,
                        t[5] = e[7],
                        t[6] = r,
                        t[7] = i
                    } else
                        t[0] = e[0],
                        t[1] = e[3],
                        t[2] = e[6],
                        t[3] = e[1],
                        t[4] = e[4],
                        t[5] = e[7],
                        t[6] = e[2],
                        t[7] = e[5],
                        t[8] = e[8];
                    return t
                }
                ,
                e.invert = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[3]
                      , o = e[4]
                      , s = e[5]
                      , l = e[6]
                      , c = e[7]
                      , u = e[8]
                      , h = u * o - s * c
                      , d = -u * a + s * l
                      , p = c * a - o * l
                      , f = n * h + r * d + i * p;
                    return f ? (f = 1 / f,
                    t[0] = h * f,
                    t[1] = (-u * r + i * c) * f,
                    t[2] = (s * r - i * o) * f,
                    t[3] = d * f,
                    t[4] = (u * n - i * l) * f,
                    t[5] = (-s * n + i * a) * f,
                    t[6] = p * f,
                    t[7] = (-c * n + r * l) * f,
                    t[8] = (o * n - r * a) * f,
                    t) : null
                }
                ,
                e.adjoint = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[3]
                      , o = e[4]
                      , s = e[5]
                      , l = e[6]
                      , c = e[7]
                      , u = e[8];
                    return t[0] = o * u - s * c,
                    t[1] = i * c - r * u,
                    t[2] = r * s - i * o,
                    t[3] = s * l - a * u,
                    t[4] = n * u - i * l,
                    t[5] = i * a - n * s,
                    t[6] = a * c - o * l,
                    t[7] = r * l - n * c,
                    t[8] = n * o - r * a,
                    t
                }
                ,
                e.determinant = function(t) {
                    var e = t[0]
                      , n = t[1]
                      , r = t[2]
                      , i = t[3]
                      , a = t[4]
                      , o = t[5]
                      , s = t[6]
                      , l = t[7]
                      , c = t[8];
                    return e * (c * a - o * l) + n * (-c * i + o * s) + r * (l * i - a * s)
                }
                ,
                e.multiply = r,
                e.translate = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = e[4]
                      , l = e[5]
                      , c = e[6]
                      , u = e[7]
                      , h = e[8]
                      , d = n[0]
                      , p = n[1];
                    return t[0] = r,
                    t[1] = i,
                    t[2] = a,
                    t[3] = o,
                    t[4] = s,
                    t[5] = l,
                    t[6] = d * r + p * o + c,
                    t[7] = d * i + p * s + u,
                    t[8] = d * a + p * l + h,
                    t
                }
                ,
                e.rotate = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = e[4]
                      , l = e[5]
                      , c = e[6]
                      , u = e[7]
                      , h = e[8]
                      , d = Math.sin(n)
                      , p = Math.cos(n);
                    return t[0] = p * r + d * o,
                    t[1] = p * i + d * s,
                    t[2] = p * a + d * l,
                    t[3] = p * o - d * r,
                    t[4] = p * s - d * i,
                    t[5] = p * l - d * a,
                    t[6] = c,
                    t[7] = u,
                    t[8] = h,
                    t
                }
                ,
                e.scale = function(t, e, n) {
                    var r = n[0]
                      , i = n[1];
                    return t[0] = r * e[0],
                    t[1] = r * e[1],
                    t[2] = r * e[2],
                    t[3] = i * e[3],
                    t[4] = i * e[4],
                    t[5] = i * e[5],
                    t[6] = e[6],
                    t[7] = e[7],
                    t[8] = e[8],
                    t
                }
                ,
                e.fromTranslation = function(t, e) {
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 1,
                    t[5] = 0,
                    t[6] = e[0],
                    t[7] = e[1],
                    t[8] = 1,
                    t
                }
                ,
                e.fromRotation = function(t, e) {
                    var n = Math.sin(e)
                      , r = Math.cos(e);
                    return t[0] = r,
                    t[1] = n,
                    t[2] = 0,
                    t[3] = -n,
                    t[4] = r,
                    t[5] = 0,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = 1,
                    t
                }
                ,
                e.fromScaling = function(t, e) {
                    return t[0] = e[0],
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = e[1],
                    t[5] = 0,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = 1,
                    t
                }
                ,
                e.fromMat2d = function(t, e) {
                    return t[0] = e[0],
                    t[1] = e[1],
                    t[2] = 0,
                    t[3] = e[2],
                    t[4] = e[3],
                    t[5] = 0,
                    t[6] = e[4],
                    t[7] = e[5],
                    t[8] = 1,
                    t
                }
                ,
                e.fromQuat = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[3]
                      , o = n + n
                      , s = r + r
                      , l = i + i
                      , c = n * o
                      , u = r * o
                      , h = r * s
                      , d = i * o
                      , p = i * s
                      , f = i * l
                      , m = a * o
                      , v = a * s
                      , g = a * l;
                    return t[0] = 1 - h - f,
                    t[3] = u - g,
                    t[6] = d + v,
                    t[1] = u + g,
                    t[4] = 1 - c - f,
                    t[7] = p - m,
                    t[2] = d - v,
                    t[5] = p + m,
                    t[8] = 1 - c - h,
                    t
                }
                ,
                e.normalFromMat4 = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[3]
                      , o = e[4]
                      , s = e[5]
                      , l = e[6]
                      , c = e[7]
                      , u = e[8]
                      , h = e[9]
                      , d = e[10]
                      , p = e[11]
                      , f = e[12]
                      , m = e[13]
                      , v = e[14]
                      , g = e[15]
                      , y = n * s - r * o
                      , x = n * l - i * o
                      , b = n * c - a * o
                      , _ = r * l - i * s
                      , w = r * c - a * s
                      , M = i * c - a * l
                      , E = u * m - h * f
                      , T = u * v - d * f
                      , S = u * g - p * f
                      , A = h * v - d * m
                      , L = h * g - p * m
                      , R = d * g - p * v
                      , P = y * R - x * L + b * A + _ * S - w * T + M * E;
                    return P ? (P = 1 / P,
                    t[0] = (s * R - l * L + c * A) * P,
                    t[1] = (l * S - o * R - c * T) * P,
                    t[2] = (o * L - s * S + c * E) * P,
                    t[3] = (i * L - r * R - a * A) * P,
                    t[4] = (n * R - i * S + a * T) * P,
                    t[5] = (r * S - n * L - a * E) * P,
                    t[6] = (m * M - v * w + g * _) * P,
                    t[7] = (v * b - f * M - g * x) * P,
                    t[8] = (f * w - m * b + g * y) * P,
                    t) : null
                }
                ,
                e.projection = function(t, e, n) {
                    return t[0] = 2 / e,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = -2 / n,
                    t[5] = 0,
                    t[6] = -1,
                    t[7] = 1,
                    t[8] = 1,
                    t
                }
                ,
                e.str = function(t) {
                    return "mat3(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ")"
                }
                ,
                e.frob = function(t) {
                    return Math.sqrt(Math.pow(t[0], 2) + Math.pow(t[1], 2) + Math.pow(t[2], 2) + Math.pow(t[3], 2) + Math.pow(t[4], 2) + Math.pow(t[5], 2) + Math.pow(t[6], 2) + Math.pow(t[7], 2) + Math.pow(t[8], 2))
                }
                ,
                e.add = function(t, e, n) {
                    return t[0] = e[0] + n[0],
                    t[1] = e[1] + n[1],
                    t[2] = e[2] + n[2],
                    t[3] = e[3] + n[3],
                    t[4] = e[4] + n[4],
                    t[5] = e[5] + n[5],
                    t[6] = e[6] + n[6],
                    t[7] = e[7] + n[7],
                    t[8] = e[8] + n[8],
                    t
                }
                ,
                e.subtract = i,
                e.multiplyScalar = function(t, e, n) {
                    return t[0] = e[0] * n,
                    t[1] = e[1] * n,
                    t[2] = e[2] * n,
                    t[3] = e[3] * n,
                    t[4] = e[4] * n,
                    t[5] = e[5] * n,
                    t[6] = e[6] * n,
                    t[7] = e[7] * n,
                    t[8] = e[8] * n,
                    t
                }
                ,
                e.multiplyScalarAndAdd = function(t, e, n, r) {
                    return t[0] = e[0] + n[0] * r,
                    t[1] = e[1] + n[1] * r,
                    t[2] = e[2] + n[2] * r,
                    t[3] = e[3] + n[3] * r,
                    t[4] = e[4] + n[4] * r,
                    t[5] = e[5] + n[5] * r,
                    t[6] = e[6] + n[6] * r,
                    t[7] = e[7] + n[7] * r,
                    t[8] = e[8] + n[8] * r,
                    t
                }
                ,
                e.exactEquals = function(t, e) {
                    return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5] && t[6] === e[6] && t[7] === e[7] && t[8] === e[8]
                }
                ,
                e.equals = function(t, e) {
                    var n = t[0]
                      , r = t[1]
                      , i = t[2]
                      , o = t[3]
                      , s = t[4]
                      , l = t[5]
                      , c = t[6]
                      , u = t[7]
                      , h = t[8]
                      , d = e[0]
                      , p = e[1]
                      , f = e[2]
                      , m = e[3]
                      , v = e[4]
                      , g = e[5]
                      , y = e[6]
                      , x = e[7]
                      , b = e[8];
                    return Math.abs(n - d) <= a.EPSILON * Math.max(1, Math.abs(n), Math.abs(d)) && Math.abs(r - p) <= a.EPSILON * Math.max(1, Math.abs(r), Math.abs(p)) && Math.abs(i - f) <= a.EPSILON * Math.max(1, Math.abs(i), Math.abs(f)) && Math.abs(o - m) <= a.EPSILON * Math.max(1, Math.abs(o), Math.abs(m)) && Math.abs(s - v) <= a.EPSILON * Math.max(1, Math.abs(s), Math.abs(v)) && Math.abs(l - g) <= a.EPSILON * Math.max(1, Math.abs(l), Math.abs(g)) && Math.abs(c - y) <= a.EPSILON * Math.max(1, Math.abs(c), Math.abs(y)) && Math.abs(u - x) <= a.EPSILON * Math.max(1, Math.abs(u), Math.abs(x)) && Math.abs(h - b) <= a.EPSILON * Math.max(1, Math.abs(h), Math.abs(b))
                }
                ;
                var a = function(t) {
                    if (t && t.__esModule)
                        return t;
                    var e = {};
                    if (null != t)
                        for (var n in t)
                            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                    return e.default = t,
                    e
                }(n(0));
                e.mul = r,
                e.sub = i
            }
            , function(t, e, n) {
                "use strict";
                function r() {
                    var t = new f.ARRAY_TYPE(3);
                    return t[0] = 0,
                    t[1] = 0,
                    t[2] = 0,
                    t
                }
                function i(t) {
                    var e = t[0]
                      , n = t[1]
                      , r = t[2];
                    return Math.sqrt(e * e + n * n + r * r)
                }
                function a(t, e, n) {
                    var r = new f.ARRAY_TYPE(3);
                    return r[0] = t,
                    r[1] = e,
                    r[2] = n,
                    r
                }
                function o(t, e, n) {
                    return t[0] = e[0] - n[0],
                    t[1] = e[1] - n[1],
                    t[2] = e[2] - n[2],
                    t
                }
                function s(t, e, n) {
                    return t[0] = e[0] * n[0],
                    t[1] = e[1] * n[1],
                    t[2] = e[2] * n[2],
                    t
                }
                function l(t, e, n) {
                    return t[0] = e[0] / n[0],
                    t[1] = e[1] / n[1],
                    t[2] = e[2] / n[2],
                    t
                }
                function c(t, e) {
                    var n = e[0] - t[0]
                      , r = e[1] - t[1]
                      , i = e[2] - t[2];
                    return Math.sqrt(n * n + r * r + i * i)
                }
                function u(t, e) {
                    var n = e[0] - t[0]
                      , r = e[1] - t[1]
                      , i = e[2] - t[2];
                    return n * n + r * r + i * i
                }
                function h(t) {
                    var e = t[0]
                      , n = t[1]
                      , r = t[2];
                    return e * e + n * n + r * r
                }
                function d(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = n * n + r * r + i * i;
                    return a > 0 && (a = 1 / Math.sqrt(a),
                    t[0] = e[0] * a,
                    t[1] = e[1] * a,
                    t[2] = e[2] * a),
                    t
                }
                function p(t, e) {
                    return t[0] * e[0] + t[1] * e[1] + t[2] * e[2]
                }
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.forEach = e.sqrLen = e.len = e.sqrDist = e.dist = e.div = e.mul = e.sub = void 0,
                e.create = r,
                e.clone = function(t) {
                    var e = new f.ARRAY_TYPE(3);
                    return e[0] = t[0],
                    e[1] = t[1],
                    e[2] = t[2],
                    e
                }
                ,
                e.length = i,
                e.fromValues = a,
                e.copy = function(t, e) {
                    return t[0] = e[0],
                    t[1] = e[1],
                    t[2] = e[2],
                    t
                }
                ,
                e.set = function(t, e, n, r) {
                    return t[0] = e,
                    t[1] = n,
                    t[2] = r,
                    t
                }
                ,
                e.add = function(t, e, n) {
                    return t[0] = e[0] + n[0],
                    t[1] = e[1] + n[1],
                    t[2] = e[2] + n[2],
                    t
                }
                ,
                e.subtract = o,
                e.multiply = s,
                e.divide = l,
                e.ceil = function(t, e) {
                    return t[0] = Math.ceil(e[0]),
                    t[1] = Math.ceil(e[1]),
                    t[2] = Math.ceil(e[2]),
                    t
                }
                ,
                e.floor = function(t, e) {
                    return t[0] = Math.floor(e[0]),
                    t[1] = Math.floor(e[1]),
                    t[2] = Math.floor(e[2]),
                    t
                }
                ,
                e.min = function(t, e, n) {
                    return t[0] = Math.min(e[0], n[0]),
                    t[1] = Math.min(e[1], n[1]),
                    t[2] = Math.min(e[2], n[2]),
                    t
                }
                ,
                e.max = function(t, e, n) {
                    return t[0] = Math.max(e[0], n[0]),
                    t[1] = Math.max(e[1], n[1]),
                    t[2] = Math.max(e[2], n[2]),
                    t
                }
                ,
                e.round = function(t, e) {
                    return t[0] = Math.round(e[0]),
                    t[1] = Math.round(e[1]),
                    t[2] = Math.round(e[2]),
                    t
                }
                ,
                e.scale = function(t, e, n) {
                    return t[0] = e[0] * n,
                    t[1] = e[1] * n,
                    t[2] = e[2] * n,
                    t
                }
                ,
                e.scaleAndAdd = function(t, e, n, r) {
                    return t[0] = e[0] + n[0] * r,
                    t[1] = e[1] + n[1] * r,
                    t[2] = e[2] + n[2] * r,
                    t
                }
                ,
                e.distance = c,
                e.squaredDistance = u,
                e.squaredLength = h,
                e.negate = function(t, e) {
                    return t[0] = -e[0],
                    t[1] = -e[1],
                    t[2] = -e[2],
                    t
                }
                ,
                e.inverse = function(t, e) {
                    return t[0] = 1 / e[0],
                    t[1] = 1 / e[1],
                    t[2] = 1 / e[2],
                    t
                }
                ,
                e.normalize = d,
                e.dot = p,
                e.cross = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = n[0]
                      , s = n[1]
                      , l = n[2];
                    return t[0] = i * l - a * s,
                    t[1] = a * o - r * l,
                    t[2] = r * s - i * o,
                    t
                }
                ,
                e.lerp = function(t, e, n, r) {
                    var i = e[0]
                      , a = e[1]
                      , o = e[2];
                    return t[0] = i + r * (n[0] - i),
                    t[1] = a + r * (n[1] - a),
                    t[2] = o + r * (n[2] - o),
                    t
                }
                ,
                e.hermite = function(t, e, n, r, i, a) {
                    var o = a * a
                      , s = o * (2 * a - 3) + 1
                      , l = o * (a - 2) + a
                      , c = o * (a - 1)
                      , u = o * (3 - 2 * a);
                    return t[0] = e[0] * s + n[0] * l + r[0] * c + i[0] * u,
                    t[1] = e[1] * s + n[1] * l + r[1] * c + i[1] * u,
                    t[2] = e[2] * s + n[2] * l + r[2] * c + i[2] * u,
                    t
                }
                ,
                e.bezier = function(t, e, n, r, i, a) {
                    var o = 1 - a
                      , s = o * o
                      , l = a * a
                      , c = s * o
                      , u = 3 * a * s
                      , h = 3 * l * o
                      , d = l * a;
                    return t[0] = e[0] * c + n[0] * u + r[0] * h + i[0] * d,
                    t[1] = e[1] * c + n[1] * u + r[1] * h + i[1] * d,
                    t[2] = e[2] * c + n[2] * u + r[2] * h + i[2] * d,
                    t
                }
                ,
                e.random = function(t, e) {
                    e = e || 1;
                    var n = 2 * f.RANDOM() * Math.PI
                      , r = 2 * f.RANDOM() - 1
                      , i = Math.sqrt(1 - r * r) * e;
                    return t[0] = Math.cos(n) * i,
                    t[1] = Math.sin(n) * i,
                    t[2] = r * e,
                    t
                }
                ,
                e.transformMat4 = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = n[3] * r + n[7] * i + n[11] * a + n[15];
                    return o = o || 1,
                    t[0] = (n[0] * r + n[4] * i + n[8] * a + n[12]) / o,
                    t[1] = (n[1] * r + n[5] * i + n[9] * a + n[13]) / o,
                    t[2] = (n[2] * r + n[6] * i + n[10] * a + n[14]) / o,
                    t
                }
                ,
                e.transformMat3 = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2];
                    return t[0] = r * n[0] + i * n[3] + a * n[6],
                    t[1] = r * n[1] + i * n[4] + a * n[7],
                    t[2] = r * n[2] + i * n[5] + a * n[8],
                    t
                }
                ,
                e.transformQuat = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = n[0]
                      , s = n[1]
                      , l = n[2]
                      , c = n[3]
                      , u = c * r + s * a - l * i
                      , h = c * i + l * r - o * a
                      , d = c * a + o * i - s * r
                      , p = -o * r - s * i - l * a;
                    return t[0] = u * c + p * -o + h * -l - d * -s,
                    t[1] = h * c + p * -s + d * -o - u * -l,
                    t[2] = d * c + p * -l + u * -s - h * -o,
                    t
                }
                ,
                e.rotateX = function(t, e, n, r) {
                    var i = []
                      , a = [];
                    return i[0] = e[0] - n[0],
                    i[1] = e[1] - n[1],
                    i[2] = e[2] - n[2],
                    a[0] = i[0],
                    a[1] = i[1] * Math.cos(r) - i[2] * Math.sin(r),
                    a[2] = i[1] * Math.sin(r) + i[2] * Math.cos(r),
                    t[0] = a[0] + n[0],
                    t[1] = a[1] + n[1],
                    t[2] = a[2] + n[2],
                    t
                }
                ,
                e.rotateY = function(t, e, n, r) {
                    var i = []
                      , a = [];
                    return i[0] = e[0] - n[0],
                    i[1] = e[1] - n[1],
                    i[2] = e[2] - n[2],
                    a[0] = i[2] * Math.sin(r) + i[0] * Math.cos(r),
                    a[1] = i[1],
                    a[2] = i[2] * Math.cos(r) - i[0] * Math.sin(r),
                    t[0] = a[0] + n[0],
                    t[1] = a[1] + n[1],
                    t[2] = a[2] + n[2],
                    t
                }
                ,
                e.rotateZ = function(t, e, n, r) {
                    var i = []
                      , a = [];
                    return i[0] = e[0] - n[0],
                    i[1] = e[1] - n[1],
                    i[2] = e[2] - n[2],
                    a[0] = i[0] * Math.cos(r) - i[1] * Math.sin(r),
                    a[1] = i[0] * Math.sin(r) + i[1] * Math.cos(r),
                    a[2] = i[2],
                    t[0] = a[0] + n[0],
                    t[1] = a[1] + n[1],
                    t[2] = a[2] + n[2],
                    t
                }
                ,
                e.angle = function(t, e) {
                    var n = a(t[0], t[1], t[2])
                      , r = a(e[0], e[1], e[2]);
                    d(n, n),
                    d(r, r);
                    var i = p(n, r);
                    return i > 1 ? 0 : i < -1 ? Math.PI : Math.acos(i)
                }
                ,
                e.str = function(t) {
                    return "vec3(" + t[0] + ", " + t[1] + ", " + t[2] + ")"
                }
                ,
                e.exactEquals = function(t, e) {
                    return t[0] === e[0] && t[1] === e[1] && t[2] === e[2]
                }
                ,
                e.equals = function(t, e) {
                    var n = t[0]
                      , r = t[1]
                      , i = t[2]
                      , a = e[0]
                      , o = e[1]
                      , s = e[2];
                    return Math.abs(n - a) <= f.EPSILON * Math.max(1, Math.abs(n), Math.abs(a)) && Math.abs(r - o) <= f.EPSILON * Math.max(1, Math.abs(r), Math.abs(o)) && Math.abs(i - s) <= f.EPSILON * Math.max(1, Math.abs(i), Math.abs(s))
                }
                ;
                var f = function(t) {
                    if (t && t.__esModule)
                        return t;
                    var e = {};
                    if (null != t)
                        for (var n in t)
                            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                    return e.default = t,
                    e
                }(n(0));
                e.sub = o,
                e.mul = s,
                e.div = l,
                e.dist = c,
                e.sqrDist = u,
                e.len = i,
                e.sqrLen = h,
                e.forEach = function() {
                    var t = r();
                    return function(e, n, r, i, a, o) {
                        var s = void 0
                          , l = void 0;
                        for (n || (n = 3),
                        r || (r = 0),
                        l = i ? Math.min(i * n + r, e.length) : e.length,
                        s = r; s < l; s += n)
                            t[0] = e[s],
                            t[1] = e[s + 1],
                            t[2] = e[s + 2],
                            a(t, t, o),
                            e[s] = t[0],
                            e[s + 1] = t[1],
                            e[s + 2] = t[2];
                        return e
                    }
                }()
            }
            , function(t, e, n) {
                "use strict";
                function r() {
                    var t = new p.ARRAY_TYPE(4);
                    return t[0] = 0,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t
                }
                function i(t, e, n) {
                    return t[0] = e[0] - n[0],
                    t[1] = e[1] - n[1],
                    t[2] = e[2] - n[2],
                    t[3] = e[3] - n[3],
                    t
                }
                function a(t, e, n) {
                    return t[0] = e[0] * n[0],
                    t[1] = e[1] * n[1],
                    t[2] = e[2] * n[2],
                    t[3] = e[3] * n[3],
                    t
                }
                function o(t, e, n) {
                    return t[0] = e[0] / n[0],
                    t[1] = e[1] / n[1],
                    t[2] = e[2] / n[2],
                    t[3] = e[3] / n[3],
                    t
                }
                function s(t, e, n) {
                    return t[0] = e[0] * n,
                    t[1] = e[1] * n,
                    t[2] = e[2] * n,
                    t[3] = e[3] * n,
                    t
                }
                function l(t, e) {
                    var n = e[0] - t[0]
                      , r = e[1] - t[1]
                      , i = e[2] - t[2]
                      , a = e[3] - t[3];
                    return Math.sqrt(n * n + r * r + i * i + a * a)
                }
                function c(t, e) {
                    var n = e[0] - t[0]
                      , r = e[1] - t[1]
                      , i = e[2] - t[2]
                      , a = e[3] - t[3];
                    return n * n + r * r + i * i + a * a
                }
                function u(t) {
                    var e = t[0]
                      , n = t[1]
                      , r = t[2]
                      , i = t[3];
                    return Math.sqrt(e * e + n * n + r * r + i * i)
                }
                function h(t) {
                    var e = t[0]
                      , n = t[1]
                      , r = t[2]
                      , i = t[3];
                    return e * e + n * n + r * r + i * i
                }
                function d(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[3]
                      , o = n * n + r * r + i * i + a * a;
                    return o > 0 && (o = 1 / Math.sqrt(o),
                    t[0] = n * o,
                    t[1] = r * o,
                    t[2] = i * o,
                    t[3] = a * o),
                    t
                }
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.forEach = e.sqrLen = e.len = e.sqrDist = e.dist = e.div = e.mul = e.sub = void 0,
                e.create = r,
                e.clone = function(t) {
                    var e = new p.ARRAY_TYPE(4);
                    return e[0] = t[0],
                    e[1] = t[1],
                    e[2] = t[2],
                    e[3] = t[3],
                    e
                }
                ,
                e.fromValues = function(t, e, n, r) {
                    var i = new p.ARRAY_TYPE(4);
                    return i[0] = t,
                    i[1] = e,
                    i[2] = n,
                    i[3] = r,
                    i
                }
                ,
                e.copy = function(t, e) {
                    return t[0] = e[0],
                    t[1] = e[1],
                    t[2] = e[2],
                    t[3] = e[3],
                    t
                }
                ,
                e.set = function(t, e, n, r, i) {
                    return t[0] = e,
                    t[1] = n,
                    t[2] = r,
                    t[3] = i,
                    t
                }
                ,
                e.add = function(t, e, n) {
                    return t[0] = e[0] + n[0],
                    t[1] = e[1] + n[1],
                    t[2] = e[2] + n[2],
                    t[3] = e[3] + n[3],
                    t
                }
                ,
                e.subtract = i,
                e.multiply = a,
                e.divide = o,
                e.ceil = function(t, e) {
                    return t[0] = Math.ceil(e[0]),
                    t[1] = Math.ceil(e[1]),
                    t[2] = Math.ceil(e[2]),
                    t[3] = Math.ceil(e[3]),
                    t
                }
                ,
                e.floor = function(t, e) {
                    return t[0] = Math.floor(e[0]),
                    t[1] = Math.floor(e[1]),
                    t[2] = Math.floor(e[2]),
                    t[3] = Math.floor(e[3]),
                    t
                }
                ,
                e.min = function(t, e, n) {
                    return t[0] = Math.min(e[0], n[0]),
                    t[1] = Math.min(e[1], n[1]),
                    t[2] = Math.min(e[2], n[2]),
                    t[3] = Math.min(e[3], n[3]),
                    t
                }
                ,
                e.max = function(t, e, n) {
                    return t[0] = Math.max(e[0], n[0]),
                    t[1] = Math.max(e[1], n[1]),
                    t[2] = Math.max(e[2], n[2]),
                    t[3] = Math.max(e[3], n[3]),
                    t
                }
                ,
                e.round = function(t, e) {
                    return t[0] = Math.round(e[0]),
                    t[1] = Math.round(e[1]),
                    t[2] = Math.round(e[2]),
                    t[3] = Math.round(e[3]),
                    t
                }
                ,
                e.scale = s,
                e.scaleAndAdd = function(t, e, n, r) {
                    return t[0] = e[0] + n[0] * r,
                    t[1] = e[1] + n[1] * r,
                    t[2] = e[2] + n[2] * r,
                    t[3] = e[3] + n[3] * r,
                    t
                }
                ,
                e.distance = l,
                e.squaredDistance = c,
                e.length = u,
                e.squaredLength = h,
                e.negate = function(t, e) {
                    return t[0] = -e[0],
                    t[1] = -e[1],
                    t[2] = -e[2],
                    t[3] = -e[3],
                    t
                }
                ,
                e.inverse = function(t, e) {
                    return t[0] = 1 / e[0],
                    t[1] = 1 / e[1],
                    t[2] = 1 / e[2],
                    t[3] = 1 / e[3],
                    t
                }
                ,
                e.normalize = d,
                e.dot = function(t, e) {
                    return t[0] * e[0] + t[1] * e[1] + t[2] * e[2] + t[3] * e[3]
                }
                ,
                e.lerp = function(t, e, n, r) {
                    var i = e[0]
                      , a = e[1]
                      , o = e[2]
                      , s = e[3];
                    return t[0] = i + r * (n[0] - i),
                    t[1] = a + r * (n[1] - a),
                    t[2] = o + r * (n[2] - o),
                    t[3] = s + r * (n[3] - s),
                    t
                }
                ,
                e.random = function(t, e) {
                    return e = e || 1,
                    t[0] = p.RANDOM(),
                    t[1] = p.RANDOM(),
                    t[2] = p.RANDOM(),
                    t[3] = p.RANDOM(),
                    d(t, t),
                    s(t, t, e),
                    t
                }
                ,
                e.transformMat4 = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3];
                    return t[0] = n[0] * r + n[4] * i + n[8] * a + n[12] * o,
                    t[1] = n[1] * r + n[5] * i + n[9] * a + n[13] * o,
                    t[2] = n[2] * r + n[6] * i + n[10] * a + n[14] * o,
                    t[3] = n[3] * r + n[7] * i + n[11] * a + n[15] * o,
                    t
                }
                ,
                e.transformQuat = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = n[0]
                      , s = n[1]
                      , l = n[2]
                      , c = n[3]
                      , u = c * r + s * a - l * i
                      , h = c * i + l * r - o * a
                      , d = c * a + o * i - s * r
                      , p = -o * r - s * i - l * a;
                    return t[0] = u * c + p * -o + h * -l - d * -s,
                    t[1] = h * c + p * -s + d * -o - u * -l,
                    t[2] = d * c + p * -l + u * -s - h * -o,
                    t[3] = e[3],
                    t
                }
                ,
                e.str = function(t) {
                    return "vec4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")"
                }
                ,
                e.exactEquals = function(t, e) {
                    return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3]
                }
                ,
                e.equals = function(t, e) {
                    var n = t[0]
                      , r = t[1]
                      , i = t[2]
                      , a = t[3]
                      , o = e[0]
                      , s = e[1]
                      , l = e[2]
                      , c = e[3];
                    return Math.abs(n - o) <= p.EPSILON * Math.max(1, Math.abs(n), Math.abs(o)) && Math.abs(r - s) <= p.EPSILON * Math.max(1, Math.abs(r), Math.abs(s)) && Math.abs(i - l) <= p.EPSILON * Math.max(1, Math.abs(i), Math.abs(l)) && Math.abs(a - c) <= p.EPSILON * Math.max(1, Math.abs(a), Math.abs(c))
                }
                ;
                var p = function(t) {
                    if (t && t.__esModule)
                        return t;
                    var e = {};
                    if (null != t)
                        for (var n in t)
                            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                    return e.default = t,
                    e
                }(n(0));
                e.sub = i,
                e.mul = a,
                e.div = o,
                e.dist = l,
                e.sqrDist = c,
                e.len = u,
                e.sqrLen = h,
                e.forEach = function() {
                    var t = r();
                    return function(e, n, r, i, a, o) {
                        var s = void 0
                          , l = void 0;
                        for (n || (n = 4),
                        r || (r = 0),
                        l = i ? Math.min(i * n + r, e.length) : e.length,
                        s = r; s < l; s += n)
                            t[0] = e[s],
                            t[1] = e[s + 1],
                            t[2] = e[s + 2],
                            t[3] = e[s + 3],
                            a(t, t, o),
                            e[s] = t[0],
                            e[s + 1] = t[1],
                            e[s + 2] = t[2],
                            e[s + 3] = t[3];
                        return e
                    }
                }()
            }
            , function(t, e, n) {
                "use strict";
                function r(t) {
                    if (t && t.__esModule)
                        return t;
                    var e = {};
                    if (null != t)
                        for (var n in t)
                            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                    return e.default = t,
                    e
                }
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.vec4 = e.vec3 = e.vec2 = e.quat = e.mat4 = e.mat3 = e.mat2d = e.mat2 = e.glMatrix = void 0;
                var i = r(n(0))
                  , a = r(n(5))
                  , o = r(n(6))
                  , s = r(n(1))
                  , l = r(n(7))
                  , c = r(n(8))
                  , u = r(n(9))
                  , h = r(n(2))
                  , d = r(n(3));
                e.glMatrix = i,
                e.mat2 = a,
                e.mat2d = o,
                e.mat3 = s,
                e.mat4 = l,
                e.quat = c,
                e.vec2 = u,
                e.vec3 = h,
                e.vec4 = d
            }
            , function(t, e, n) {
                "use strict";
                function r(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = n[0]
                      , l = n[1]
                      , c = n[2]
                      , u = n[3];
                    return t[0] = r * s + a * l,
                    t[1] = i * s + o * l,
                    t[2] = r * c + a * u,
                    t[3] = i * c + o * u,
                    t
                }
                function i(t, e, n) {
                    return t[0] = e[0] - n[0],
                    t[1] = e[1] - n[1],
                    t[2] = e[2] - n[2],
                    t[3] = e[3] - n[3],
                    t
                }
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.sub = e.mul = void 0,
                e.create = function() {
                    var t = new a.ARRAY_TYPE(4);
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 1,
                    t
                }
                ,
                e.clone = function(t) {
                    var e = new a.ARRAY_TYPE(4);
                    return e[0] = t[0],
                    e[1] = t[1],
                    e[2] = t[2],
                    e[3] = t[3],
                    e
                }
                ,
                e.copy = function(t, e) {
                    return t[0] = e[0],
                    t[1] = e[1],
                    t[2] = e[2],
                    t[3] = e[3],
                    t
                }
                ,
                e.identity = function(t) {
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 1,
                    t
                }
                ,
                e.fromValues = function(t, e, n, r) {
                    var i = new a.ARRAY_TYPE(4);
                    return i[0] = t,
                    i[1] = e,
                    i[2] = n,
                    i[3] = r,
                    i
                }
                ,
                e.set = function(t, e, n, r, i) {
                    return t[0] = e,
                    t[1] = n,
                    t[2] = r,
                    t[3] = i,
                    t
                }
                ,
                e.transpose = function(t, e) {
                    if (t === e) {
                        var n = e[1];
                        t[1] = e[2],
                        t[2] = n
                    } else
                        t[0] = e[0],
                        t[1] = e[2],
                        t[2] = e[1],
                        t[3] = e[3];
                    return t
                }
                ,
                e.invert = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[3]
                      , o = n * a - i * r;
                    return o ? (o = 1 / o,
                    t[0] = a * o,
                    t[1] = -r * o,
                    t[2] = -i * o,
                    t[3] = n * o,
                    t) : null
                }
                ,
                e.adjoint = function(t, e) {
                    var n = e[0];
                    return t[0] = e[3],
                    t[1] = -e[1],
                    t[2] = -e[2],
                    t[3] = n,
                    t
                }
                ,
                e.determinant = function(t) {
                    return t[0] * t[3] - t[2] * t[1]
                }
                ,
                e.multiply = r,
                e.rotate = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = Math.sin(n)
                      , l = Math.cos(n);
                    return t[0] = r * l + a * s,
                    t[1] = i * l + o * s,
                    t[2] = r * -s + a * l,
                    t[3] = i * -s + o * l,
                    t
                }
                ,
                e.scale = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = n[0]
                      , l = n[1];
                    return t[0] = r * s,
                    t[1] = i * s,
                    t[2] = a * l,
                    t[3] = o * l,
                    t
                }
                ,
                e.fromRotation = function(t, e) {
                    var n = Math.sin(e)
                      , r = Math.cos(e);
                    return t[0] = r,
                    t[1] = n,
                    t[2] = -n,
                    t[3] = r,
                    t
                }
                ,
                e.fromScaling = function(t, e) {
                    return t[0] = e[0],
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = e[1],
                    t
                }
                ,
                e.str = function(t) {
                    return "mat2(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")"
                }
                ,
                e.frob = function(t) {
                    return Math.sqrt(Math.pow(t[0], 2) + Math.pow(t[1], 2) + Math.pow(t[2], 2) + Math.pow(t[3], 2))
                }
                ,
                e.LDU = function(t, e, n, r) {
                    return t[2] = r[2] / r[0],
                    n[0] = r[0],
                    n[1] = r[1],
                    n[3] = r[3] - t[2] * n[1],
                    [t, e, n]
                }
                ,
                e.add = function(t, e, n) {
                    return t[0] = e[0] + n[0],
                    t[1] = e[1] + n[1],
                    t[2] = e[2] + n[2],
                    t[3] = e[3] + n[3],
                    t
                }
                ,
                e.subtract = i,
                e.exactEquals = function(t, e) {
                    return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3]
                }
                ,
                e.equals = function(t, e) {
                    var n = t[0]
                      , r = t[1]
                      , i = t[2]
                      , o = t[3]
                      , s = e[0]
                      , l = e[1]
                      , c = e[2]
                      , u = e[3];
                    return Math.abs(n - s) <= a.EPSILON * Math.max(1, Math.abs(n), Math.abs(s)) && Math.abs(r - l) <= a.EPSILON * Math.max(1, Math.abs(r), Math.abs(l)) && Math.abs(i - c) <= a.EPSILON * Math.max(1, Math.abs(i), Math.abs(c)) && Math.abs(o - u) <= a.EPSILON * Math.max(1, Math.abs(o), Math.abs(u))
                }
                ,
                e.multiplyScalar = function(t, e, n) {
                    return t[0] = e[0] * n,
                    t[1] = e[1] * n,
                    t[2] = e[2] * n,
                    t[3] = e[3] * n,
                    t
                }
                ,
                e.multiplyScalarAndAdd = function(t, e, n, r) {
                    return t[0] = e[0] + n[0] * r,
                    t[1] = e[1] + n[1] * r,
                    t[2] = e[2] + n[2] * r,
                    t[3] = e[3] + n[3] * r,
                    t
                }
                ;
                var a = function(t) {
                    if (t && t.__esModule)
                        return t;
                    var e = {};
                    if (null != t)
                        for (var n in t)
                            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                    return e.default = t,
                    e
                }(n(0));
                e.mul = r,
                e.sub = i
            }
            , function(t, e, n) {
                "use strict";
                function r(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = e[4]
                      , l = e[5]
                      , c = n[0]
                      , u = n[1]
                      , h = n[2]
                      , d = n[3]
                      , p = n[4]
                      , f = n[5];
                    return t[0] = r * c + a * u,
                    t[1] = i * c + o * u,
                    t[2] = r * h + a * d,
                    t[3] = i * h + o * d,
                    t[4] = r * p + a * f + s,
                    t[5] = i * p + o * f + l,
                    t
                }
                function i(t, e, n) {
                    return t[0] = e[0] - n[0],
                    t[1] = e[1] - n[1],
                    t[2] = e[2] - n[2],
                    t[3] = e[3] - n[3],
                    t[4] = e[4] - n[4],
                    t[5] = e[5] - n[5],
                    t
                }
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.sub = e.mul = void 0,
                e.create = function() {
                    var t = new a.ARRAY_TYPE(6);
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 1,
                    t[4] = 0,
                    t[5] = 0,
                    t
                }
                ,
                e.clone = function(t) {
                    var e = new a.ARRAY_TYPE(6);
                    return e[0] = t[0],
                    e[1] = t[1],
                    e[2] = t[2],
                    e[3] = t[3],
                    e[4] = t[4],
                    e[5] = t[5],
                    e
                }
                ,
                e.copy = function(t, e) {
                    return t[0] = e[0],
                    t[1] = e[1],
                    t[2] = e[2],
                    t[3] = e[3],
                    t[4] = e[4],
                    t[5] = e[5],
                    t
                }
                ,
                e.identity = function(t) {
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 1,
                    t[4] = 0,
                    t[5] = 0,
                    t
                }
                ,
                e.fromValues = function(t, e, n, r, i, o) {
                    var s = new a.ARRAY_TYPE(6);
                    return s[0] = t,
                    s[1] = e,
                    s[2] = n,
                    s[3] = r,
                    s[4] = i,
                    s[5] = o,
                    s
                }
                ,
                e.set = function(t, e, n, r, i, a, o) {
                    return t[0] = e,
                    t[1] = n,
                    t[2] = r,
                    t[3] = i,
                    t[4] = a,
                    t[5] = o,
                    t
                }
                ,
                e.invert = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[3]
                      , o = e[4]
                      , s = e[5]
                      , l = n * a - r * i;
                    return l ? (l = 1 / l,
                    t[0] = a * l,
                    t[1] = -r * l,
                    t[2] = -i * l,
                    t[3] = n * l,
                    t[4] = (i * s - a * o) * l,
                    t[5] = (r * o - n * s) * l,
                    t) : null
                }
                ,
                e.determinant = function(t) {
                    return t[0] * t[3] - t[1] * t[2]
                }
                ,
                e.multiply = r,
                e.rotate = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = e[4]
                      , l = e[5]
                      , c = Math.sin(n)
                      , u = Math.cos(n);
                    return t[0] = r * u + a * c,
                    t[1] = i * u + o * c,
                    t[2] = r * -c + a * u,
                    t[3] = i * -c + o * u,
                    t[4] = s,
                    t[5] = l,
                    t
                }
                ,
                e.scale = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = e[4]
                      , l = e[5]
                      , c = n[0]
                      , u = n[1];
                    return t[0] = r * c,
                    t[1] = i * c,
                    t[2] = a * u,
                    t[3] = o * u,
                    t[4] = s,
                    t[5] = l,
                    t
                }
                ,
                e.translate = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = e[4]
                      , l = e[5]
                      , c = n[0]
                      , u = n[1];
                    return t[0] = r,
                    t[1] = i,
                    t[2] = a,
                    t[3] = o,
                    t[4] = r * c + a * u + s,
                    t[5] = i * c + o * u + l,
                    t
                }
                ,
                e.fromRotation = function(t, e) {
                    var n = Math.sin(e)
                      , r = Math.cos(e);
                    return t[0] = r,
                    t[1] = n,
                    t[2] = -n,
                    t[3] = r,
                    t[4] = 0,
                    t[5] = 0,
                    t
                }
                ,
                e.fromScaling = function(t, e) {
                    return t[0] = e[0],
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = e[1],
                    t[4] = 0,
                    t[5] = 0,
                    t
                }
                ,
                e.fromTranslation = function(t, e) {
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 1,
                    t[4] = e[0],
                    t[5] = e[1],
                    t
                }
                ,
                e.str = function(t) {
                    return "mat2d(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ")"
                }
                ,
                e.frob = function(t) {
                    return Math.sqrt(Math.pow(t[0], 2) + Math.pow(t[1], 2) + Math.pow(t[2], 2) + Math.pow(t[3], 2) + Math.pow(t[4], 2) + Math.pow(t[5], 2) + 1)
                }
                ,
                e.add = function(t, e, n) {
                    return t[0] = e[0] + n[0],
                    t[1] = e[1] + n[1],
                    t[2] = e[2] + n[2],
                    t[3] = e[3] + n[3],
                    t[4] = e[4] + n[4],
                    t[5] = e[5] + n[5],
                    t
                }
                ,
                e.subtract = i,
                e.multiplyScalar = function(t, e, n) {
                    return t[0] = e[0] * n,
                    t[1] = e[1] * n,
                    t[2] = e[2] * n,
                    t[3] = e[3] * n,
                    t[4] = e[4] * n,
                    t[5] = e[5] * n,
                    t
                }
                ,
                e.multiplyScalarAndAdd = function(t, e, n, r) {
                    return t[0] = e[0] + n[0] * r,
                    t[1] = e[1] + n[1] * r,
                    t[2] = e[2] + n[2] * r,
                    t[3] = e[3] + n[3] * r,
                    t[4] = e[4] + n[4] * r,
                    t[5] = e[5] + n[5] * r,
                    t
                }
                ,
                e.exactEquals = function(t, e) {
                    return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5]
                }
                ,
                e.equals = function(t, e) {
                    var n = t[0]
                      , r = t[1]
                      , i = t[2]
                      , o = t[3]
                      , s = t[4]
                      , l = t[5]
                      , c = e[0]
                      , u = e[1]
                      , h = e[2]
                      , d = e[3]
                      , p = e[4]
                      , f = e[5];
                    return Math.abs(n - c) <= a.EPSILON * Math.max(1, Math.abs(n), Math.abs(c)) && Math.abs(r - u) <= a.EPSILON * Math.max(1, Math.abs(r), Math.abs(u)) && Math.abs(i - h) <= a.EPSILON * Math.max(1, Math.abs(i), Math.abs(h)) && Math.abs(o - d) <= a.EPSILON * Math.max(1, Math.abs(o), Math.abs(d)) && Math.abs(s - p) <= a.EPSILON * Math.max(1, Math.abs(s), Math.abs(p)) && Math.abs(l - f) <= a.EPSILON * Math.max(1, Math.abs(l), Math.abs(f))
                }
                ;
                var a = function(t) {
                    if (t && t.__esModule)
                        return t;
                    var e = {};
                    if (null != t)
                        for (var n in t)
                            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                    return e.default = t,
                    e
                }(n(0));
                e.mul = r,
                e.sub = i
            }
            , function(t, e, n) {
                "use strict";
                function r(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = e[4]
                      , l = e[5]
                      , c = e[6]
                      , u = e[7]
                      , h = e[8]
                      , d = e[9]
                      , p = e[10]
                      , f = e[11]
                      , m = e[12]
                      , v = e[13]
                      , g = e[14]
                      , y = e[15]
                      , x = n[0]
                      , b = n[1]
                      , _ = n[2]
                      , w = n[3];
                    return t[0] = x * r + b * s + _ * h + w * m,
                    t[1] = x * i + b * l + _ * d + w * v,
                    t[2] = x * a + b * c + _ * p + w * g,
                    t[3] = x * o + b * u + _ * f + w * y,
                    x = n[4],
                    b = n[5],
                    _ = n[6],
                    w = n[7],
                    t[4] = x * r + b * s + _ * h + w * m,
                    t[5] = x * i + b * l + _ * d + w * v,
                    t[6] = x * a + b * c + _ * p + w * g,
                    t[7] = x * o + b * u + _ * f + w * y,
                    x = n[8],
                    b = n[9],
                    _ = n[10],
                    w = n[11],
                    t[8] = x * r + b * s + _ * h + w * m,
                    t[9] = x * i + b * l + _ * d + w * v,
                    t[10] = x * a + b * c + _ * p + w * g,
                    t[11] = x * o + b * u + _ * f + w * y,
                    x = n[12],
                    b = n[13],
                    _ = n[14],
                    w = n[15],
                    t[12] = x * r + b * s + _ * h + w * m,
                    t[13] = x * i + b * l + _ * d + w * v,
                    t[14] = x * a + b * c + _ * p + w * g,
                    t[15] = x * o + b * u + _ * f + w * y,
                    t
                }
                function i(t, e, n) {
                    return t[0] = e[0] - n[0],
                    t[1] = e[1] - n[1],
                    t[2] = e[2] - n[2],
                    t[3] = e[3] - n[3],
                    t[4] = e[4] - n[4],
                    t[5] = e[5] - n[5],
                    t[6] = e[6] - n[6],
                    t[7] = e[7] - n[7],
                    t[8] = e[8] - n[8],
                    t[9] = e[9] - n[9],
                    t[10] = e[10] - n[10],
                    t[11] = e[11] - n[11],
                    t[12] = e[12] - n[12],
                    t[13] = e[13] - n[13],
                    t[14] = e[14] - n[14],
                    t[15] = e[15] - n[15],
                    t
                }
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.sub = e.mul = void 0,
                e.create = function() {
                    var t = new a.ARRAY_TYPE(16);
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 0,
                    t[5] = 1,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = 0,
                    t[9] = 0,
                    t[10] = 1,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    t
                }
                ,
                e.clone = function(t) {
                    var e = new a.ARRAY_TYPE(16);
                    return e[0] = t[0],
                    e[1] = t[1],
                    e[2] = t[2],
                    e[3] = t[3],
                    e[4] = t[4],
                    e[5] = t[5],
                    e[6] = t[6],
                    e[7] = t[7],
                    e[8] = t[8],
                    e[9] = t[9],
                    e[10] = t[10],
                    e[11] = t[11],
                    e[12] = t[12],
                    e[13] = t[13],
                    e[14] = t[14],
                    e[15] = t[15],
                    e
                }
                ,
                e.copy = function(t, e) {
                    return t[0] = e[0],
                    t[1] = e[1],
                    t[2] = e[2],
                    t[3] = e[3],
                    t[4] = e[4],
                    t[5] = e[5],
                    t[6] = e[6],
                    t[7] = e[7],
                    t[8] = e[8],
                    t[9] = e[9],
                    t[10] = e[10],
                    t[11] = e[11],
                    t[12] = e[12],
                    t[13] = e[13],
                    t[14] = e[14],
                    t[15] = e[15],
                    t
                }
                ,
                e.fromValues = function(t, e, n, r, i, o, s, l, c, u, h, d, p, f, m, v) {
                    var g = new a.ARRAY_TYPE(16);
                    return g[0] = t,
                    g[1] = e,
                    g[2] = n,
                    g[3] = r,
                    g[4] = i,
                    g[5] = o,
                    g[6] = s,
                    g[7] = l,
                    g[8] = c,
                    g[9] = u,
                    g[10] = h,
                    g[11] = d,
                    g[12] = p,
                    g[13] = f,
                    g[14] = m,
                    g[15] = v,
                    g
                }
                ,
                e.set = function(t, e, n, r, i, a, o, s, l, c, u, h, d, p, f, m, v) {
                    return t[0] = e,
                    t[1] = n,
                    t[2] = r,
                    t[3] = i,
                    t[4] = a,
                    t[5] = o,
                    t[6] = s,
                    t[7] = l,
                    t[8] = c,
                    t[9] = u,
                    t[10] = h,
                    t[11] = d,
                    t[12] = p,
                    t[13] = f,
                    t[14] = m,
                    t[15] = v,
                    t
                }
                ,
                e.identity = function(t) {
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 0,
                    t[5] = 1,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = 0,
                    t[9] = 0,
                    t[10] = 1,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    t
                }
                ,
                e.transpose = function(t, e) {
                    if (t === e) {
                        var n = e[1]
                          , r = e[2]
                          , i = e[3]
                          , a = e[6]
                          , o = e[7]
                          , s = e[11];
                        t[1] = e[4],
                        t[2] = e[8],
                        t[3] = e[12],
                        t[4] = n,
                        t[6] = e[9],
                        t[7] = e[13],
                        t[8] = r,
                        t[9] = a,
                        t[11] = e[14],
                        t[12] = i,
                        t[13] = o,
                        t[14] = s
                    } else
                        t[0] = e[0],
                        t[1] = e[4],
                        t[2] = e[8],
                        t[3] = e[12],
                        t[4] = e[1],
                        t[5] = e[5],
                        t[6] = e[9],
                        t[7] = e[13],
                        t[8] = e[2],
                        t[9] = e[6],
                        t[10] = e[10],
                        t[11] = e[14],
                        t[12] = e[3],
                        t[13] = e[7],
                        t[14] = e[11],
                        t[15] = e[15];
                    return t
                }
                ,
                e.invert = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[3]
                      , o = e[4]
                      , s = e[5]
                      , l = e[6]
                      , c = e[7]
                      , u = e[8]
                      , h = e[9]
                      , d = e[10]
                      , p = e[11]
                      , f = e[12]
                      , m = e[13]
                      , v = e[14]
                      , g = e[15]
                      , y = n * s - r * o
                      , x = n * l - i * o
                      , b = n * c - a * o
                      , _ = r * l - i * s
                      , w = r * c - a * s
                      , M = i * c - a * l
                      , E = u * m - h * f
                      , T = u * v - d * f
                      , S = u * g - p * f
                      , A = h * v - d * m
                      , L = h * g - p * m
                      , R = d * g - p * v
                      , P = y * R - x * L + b * A + _ * S - w * T + M * E;
                    return P ? (P = 1 / P,
                    t[0] = (s * R - l * L + c * A) * P,
                    t[1] = (i * L - r * R - a * A) * P,
                    t[2] = (m * M - v * w + g * _) * P,
                    t[3] = (d * w - h * M - p * _) * P,
                    t[4] = (l * S - o * R - c * T) * P,
                    t[5] = (n * R - i * S + a * T) * P,
                    t[6] = (v * b - f * M - g * x) * P,
                    t[7] = (u * M - d * b + p * x) * P,
                    t[8] = (o * L - s * S + c * E) * P,
                    t[9] = (r * S - n * L - a * E) * P,
                    t[10] = (f * w - m * b + g * y) * P,
                    t[11] = (h * b - u * w - p * y) * P,
                    t[12] = (s * T - o * A - l * E) * P,
                    t[13] = (n * A - r * T + i * E) * P,
                    t[14] = (m * x - f * _ - v * y) * P,
                    t[15] = (u * _ - h * x + d * y) * P,
                    t) : null
                }
                ,
                e.adjoint = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[3]
                      , o = e[4]
                      , s = e[5]
                      , l = e[6]
                      , c = e[7]
                      , u = e[8]
                      , h = e[9]
                      , d = e[10]
                      , p = e[11]
                      , f = e[12]
                      , m = e[13]
                      , v = e[14]
                      , g = e[15];
                    return t[0] = s * (d * g - p * v) - h * (l * g - c * v) + m * (l * p - c * d),
                    t[1] = -(r * (d * g - p * v) - h * (i * g - a * v) + m * (i * p - a * d)),
                    t[2] = r * (l * g - c * v) - s * (i * g - a * v) + m * (i * c - a * l),
                    t[3] = -(r * (l * p - c * d) - s * (i * p - a * d) + h * (i * c - a * l)),
                    t[4] = -(o * (d * g - p * v) - u * (l * g - c * v) + f * (l * p - c * d)),
                    t[5] = n * (d * g - p * v) - u * (i * g - a * v) + f * (i * p - a * d),
                    t[6] = -(n * (l * g - c * v) - o * (i * g - a * v) + f * (i * c - a * l)),
                    t[7] = n * (l * p - c * d) - o * (i * p - a * d) + u * (i * c - a * l),
                    t[8] = o * (h * g - p * m) - u * (s * g - c * m) + f * (s * p - c * h),
                    t[9] = -(n * (h * g - p * m) - u * (r * g - a * m) + f * (r * p - a * h)),
                    t[10] = n * (s * g - c * m) - o * (r * g - a * m) + f * (r * c - a * s),
                    t[11] = -(n * (s * p - c * h) - o * (r * p - a * h) + u * (r * c - a * s)),
                    t[12] = -(o * (h * v - d * m) - u * (s * v - l * m) + f * (s * d - l * h)),
                    t[13] = n * (h * v - d * m) - u * (r * v - i * m) + f * (r * d - i * h),
                    t[14] = -(n * (s * v - l * m) - o * (r * v - i * m) + f * (r * l - i * s)),
                    t[15] = n * (s * d - l * h) - o * (r * d - i * h) + u * (r * l - i * s),
                    t
                }
                ,
                e.determinant = function(t) {
                    var e = t[0]
                      , n = t[1]
                      , r = t[2]
                      , i = t[3]
                      , a = t[4]
                      , o = t[5]
                      , s = t[6]
                      , l = t[7]
                      , c = t[8]
                      , u = t[9]
                      , h = t[10]
                      , d = t[11]
                      , p = t[12]
                      , f = t[13]
                      , m = t[14]
                      , v = t[15];
                    return (e * o - n * a) * (h * v - d * m) - (e * s - r * a) * (u * v - d * f) + (e * l - i * a) * (u * m - h * f) + (n * s - r * o) * (c * v - d * p) - (n * l - i * o) * (c * m - h * p) + (r * l - i * s) * (c * f - u * p)
                }
                ,
                e.multiply = r,
                e.translate = function(t, e, n) {
                    var r = n[0]
                      , i = n[1]
                      , a = n[2]
                      , o = void 0
                      , s = void 0
                      , l = void 0
                      , c = void 0
                      , u = void 0
                      , h = void 0
                      , d = void 0
                      , p = void 0
                      , f = void 0
                      , m = void 0
                      , v = void 0
                      , g = void 0;
                    return e === t ? (t[12] = e[0] * r + e[4] * i + e[8] * a + e[12],
                    t[13] = e[1] * r + e[5] * i + e[9] * a + e[13],
                    t[14] = e[2] * r + e[6] * i + e[10] * a + e[14],
                    t[15] = e[3] * r + e[7] * i + e[11] * a + e[15]) : (o = e[0],
                    s = e[1],
                    l = e[2],
                    c = e[3],
                    u = e[4],
                    h = e[5],
                    d = e[6],
                    p = e[7],
                    f = e[8],
                    m = e[9],
                    v = e[10],
                    g = e[11],
                    t[0] = o,
                    t[1] = s,
                    t[2] = l,
                    t[3] = c,
                    t[4] = u,
                    t[5] = h,
                    t[6] = d,
                    t[7] = p,
                    t[8] = f,
                    t[9] = m,
                    t[10] = v,
                    t[11] = g,
                    t[12] = o * r + u * i + f * a + e[12],
                    t[13] = s * r + h * i + m * a + e[13],
                    t[14] = l * r + d * i + v * a + e[14],
                    t[15] = c * r + p * i + g * a + e[15]),
                    t
                }
                ,
                e.scale = function(t, e, n) {
                    var r = n[0]
                      , i = n[1]
                      , a = n[2];
                    return t[0] = e[0] * r,
                    t[1] = e[1] * r,
                    t[2] = e[2] * r,
                    t[3] = e[3] * r,
                    t[4] = e[4] * i,
                    t[5] = e[5] * i,
                    t[6] = e[6] * i,
                    t[7] = e[7] * i,
                    t[8] = e[8] * a,
                    t[9] = e[9] * a,
                    t[10] = e[10] * a,
                    t[11] = e[11] * a,
                    t[12] = e[12],
                    t[13] = e[13],
                    t[14] = e[14],
                    t[15] = e[15],
                    t
                }
                ,
                e.rotate = function(t, e, n, r) {
                    var i = r[0]
                      , o = r[1]
                      , s = r[2]
                      , l = Math.sqrt(i * i + o * o + s * s)
                      , c = void 0
                      , u = void 0
                      , h = void 0
                      , d = void 0
                      , p = void 0
                      , f = void 0
                      , m = void 0
                      , v = void 0
                      , g = void 0
                      , y = void 0
                      , x = void 0
                      , b = void 0
                      , _ = void 0
                      , w = void 0
                      , M = void 0
                      , E = void 0
                      , T = void 0
                      , S = void 0
                      , A = void 0
                      , L = void 0
                      , R = void 0
                      , P = void 0
                      , C = void 0
                      , I = void 0;
                    return Math.abs(l) < a.EPSILON ? null : (l = 1 / l,
                    i *= l,
                    o *= l,
                    s *= l,
                    c = Math.sin(n),
                    u = Math.cos(n),
                    h = 1 - u,
                    d = e[0],
                    p = e[1],
                    f = e[2],
                    m = e[3],
                    v = e[4],
                    g = e[5],
                    y = e[6],
                    x = e[7],
                    b = e[8],
                    _ = e[9],
                    w = e[10],
                    M = e[11],
                    E = i * i * h + u,
                    T = o * i * h + s * c,
                    S = s * i * h - o * c,
                    A = i * o * h - s * c,
                    L = o * o * h + u,
                    R = s * o * h + i * c,
                    P = i * s * h + o * c,
                    C = o * s * h - i * c,
                    I = s * s * h + u,
                    t[0] = d * E + v * T + b * S,
                    t[1] = p * E + g * T + _ * S,
                    t[2] = f * E + y * T + w * S,
                    t[3] = m * E + x * T + M * S,
                    t[4] = d * A + v * L + b * R,
                    t[5] = p * A + g * L + _ * R,
                    t[6] = f * A + y * L + w * R,
                    t[7] = m * A + x * L + M * R,
                    t[8] = d * P + v * C + b * I,
                    t[9] = p * P + g * C + _ * I,
                    t[10] = f * P + y * C + w * I,
                    t[11] = m * P + x * C + M * I,
                    e !== t && (t[12] = e[12],
                    t[13] = e[13],
                    t[14] = e[14],
                    t[15] = e[15]),
                    t)
                }
                ,
                e.rotateX = function(t, e, n) {
                    var r = Math.sin(n)
                      , i = Math.cos(n)
                      , a = e[4]
                      , o = e[5]
                      , s = e[6]
                      , l = e[7]
                      , c = e[8]
                      , u = e[9]
                      , h = e[10]
                      , d = e[11];
                    return e !== t && (t[0] = e[0],
                    t[1] = e[1],
                    t[2] = e[2],
                    t[3] = e[3],
                    t[12] = e[12],
                    t[13] = e[13],
                    t[14] = e[14],
                    t[15] = e[15]),
                    t[4] = a * i + c * r,
                    t[5] = o * i + u * r,
                    t[6] = s * i + h * r,
                    t[7] = l * i + d * r,
                    t[8] = c * i - a * r,
                    t[9] = u * i - o * r,
                    t[10] = h * i - s * r,
                    t[11] = d * i - l * r,
                    t
                }
                ,
                e.rotateY = function(t, e, n) {
                    var r = Math.sin(n)
                      , i = Math.cos(n)
                      , a = e[0]
                      , o = e[1]
                      , s = e[2]
                      , l = e[3]
                      , c = e[8]
                      , u = e[9]
                      , h = e[10]
                      , d = e[11];
                    return e !== t && (t[4] = e[4],
                    t[5] = e[5],
                    t[6] = e[6],
                    t[7] = e[7],
                    t[12] = e[12],
                    t[13] = e[13],
                    t[14] = e[14],
                    t[15] = e[15]),
                    t[0] = a * i - c * r,
                    t[1] = o * i - u * r,
                    t[2] = s * i - h * r,
                    t[3] = l * i - d * r,
                    t[8] = a * r + c * i,
                    t[9] = o * r + u * i,
                    t[10] = s * r + h * i,
                    t[11] = l * r + d * i,
                    t
                }
                ,
                e.rotateZ = function(t, e, n) {
                    var r = Math.sin(n)
                      , i = Math.cos(n)
                      , a = e[0]
                      , o = e[1]
                      , s = e[2]
                      , l = e[3]
                      , c = e[4]
                      , u = e[5]
                      , h = e[6]
                      , d = e[7];
                    return e !== t && (t[8] = e[8],
                    t[9] = e[9],
                    t[10] = e[10],
                    t[11] = e[11],
                    t[12] = e[12],
                    t[13] = e[13],
                    t[14] = e[14],
                    t[15] = e[15]),
                    t[0] = a * i + c * r,
                    t[1] = o * i + u * r,
                    t[2] = s * i + h * r,
                    t[3] = l * i + d * r,
                    t[4] = c * i - a * r,
                    t[5] = u * i - o * r,
                    t[6] = h * i - s * r,
                    t[7] = d * i - l * r,
                    t
                }
                ,
                e.fromTranslation = function(t, e) {
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 0,
                    t[5] = 1,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = 0,
                    t[9] = 0,
                    t[10] = 1,
                    t[11] = 0,
                    t[12] = e[0],
                    t[13] = e[1],
                    t[14] = e[2],
                    t[15] = 1,
                    t
                }
                ,
                e.fromScaling = function(t, e) {
                    return t[0] = e[0],
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 0,
                    t[5] = e[1],
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = 0,
                    t[9] = 0,
                    t[10] = e[2],
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    t
                }
                ,
                e.fromRotation = function(t, e, n) {
                    var r = n[0]
                      , i = n[1]
                      , o = n[2]
                      , s = Math.sqrt(r * r + i * i + o * o)
                      , l = void 0
                      , c = void 0
                      , u = void 0;
                    return Math.abs(s) < a.EPSILON ? null : (s = 1 / s,
                    r *= s,
                    i *= s,
                    o *= s,
                    l = Math.sin(e),
                    c = Math.cos(e),
                    u = 1 - c,
                    t[0] = r * r * u + c,
                    t[1] = i * r * u + o * l,
                    t[2] = o * r * u - i * l,
                    t[3] = 0,
                    t[4] = r * i * u - o * l,
                    t[5] = i * i * u + c,
                    t[6] = o * i * u + r * l,
                    t[7] = 0,
                    t[8] = r * o * u + i * l,
                    t[9] = i * o * u - r * l,
                    t[10] = o * o * u + c,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    t)
                }
                ,
                e.fromXRotation = function(t, e) {
                    var n = Math.sin(e)
                      , r = Math.cos(e);
                    return t[0] = 1,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 0,
                    t[5] = r,
                    t[6] = n,
                    t[7] = 0,
                    t[8] = 0,
                    t[9] = -n,
                    t[10] = r,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    t
                }
                ,
                e.fromYRotation = function(t, e) {
                    var n = Math.sin(e)
                      , r = Math.cos(e);
                    return t[0] = r,
                    t[1] = 0,
                    t[2] = -n,
                    t[3] = 0,
                    t[4] = 0,
                    t[5] = 1,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = n,
                    t[9] = 0,
                    t[10] = r,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    t
                }
                ,
                e.fromZRotation = function(t, e) {
                    var n = Math.sin(e)
                      , r = Math.cos(e);
                    return t[0] = r,
                    t[1] = n,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = -n,
                    t[5] = r,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = 0,
                    t[9] = 0,
                    t[10] = 1,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    t
                }
                ,
                e.fromRotationTranslation = function(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = r + r
                      , l = i + i
                      , c = a + a
                      , u = r * s
                      , h = r * l
                      , d = r * c
                      , p = i * l
                      , f = i * c
                      , m = a * c
                      , v = o * s
                      , g = o * l
                      , y = o * c;
                    return t[0] = 1 - (p + m),
                    t[1] = h + y,
                    t[2] = d - g,
                    t[3] = 0,
                    t[4] = h - y,
                    t[5] = 1 - (u + m),
                    t[6] = f + v,
                    t[7] = 0,
                    t[8] = d + g,
                    t[9] = f - v,
                    t[10] = 1 - (u + p),
                    t[11] = 0,
                    t[12] = n[0],
                    t[13] = n[1],
                    t[14] = n[2],
                    t[15] = 1,
                    t
                }
                ,
                e.getTranslation = function(t, e) {
                    return t[0] = e[12],
                    t[1] = e[13],
                    t[2] = e[14],
                    t
                }
                ,
                e.getScaling = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[4]
                      , o = e[5]
                      , s = e[6]
                      , l = e[8]
                      , c = e[9]
                      , u = e[10];
                    return t[0] = Math.sqrt(n * n + r * r + i * i),
                    t[1] = Math.sqrt(a * a + o * o + s * s),
                    t[2] = Math.sqrt(l * l + c * c + u * u),
                    t
                }
                ,
                e.getRotation = function(t, e) {
                    var n = e[0] + e[5] + e[10]
                      , r = 0;
                    return n > 0 ? (r = 2 * Math.sqrt(n + 1),
                    t[3] = .25 * r,
                    t[0] = (e[6] - e[9]) / r,
                    t[1] = (e[8] - e[2]) / r,
                    t[2] = (e[1] - e[4]) / r) : e[0] > e[5] & e[0] > e[10] ? (r = 2 * Math.sqrt(1 + e[0] - e[5] - e[10]),
                    t[3] = (e[6] - e[9]) / r,
                    t[0] = .25 * r,
                    t[1] = (e[1] + e[4]) / r,
                    t[2] = (e[8] + e[2]) / r) : e[5] > e[10] ? (r = 2 * Math.sqrt(1 + e[5] - e[0] - e[10]),
                    t[3] = (e[8] - e[2]) / r,
                    t[0] = (e[1] + e[4]) / r,
                    t[1] = .25 * r,
                    t[2] = (e[6] + e[9]) / r) : (r = 2 * Math.sqrt(1 + e[10] - e[0] - e[5]),
                    t[3] = (e[1] - e[4]) / r,
                    t[0] = (e[8] + e[2]) / r,
                    t[1] = (e[6] + e[9]) / r,
                    t[2] = .25 * r),
                    t
                }
                ,
                e.fromRotationTranslationScale = function(t, e, n, r) {
                    var i = e[0]
                      , a = e[1]
                      , o = e[2]
                      , s = e[3]
                      , l = i + i
                      , c = a + a
                      , u = o + o
                      , h = i * l
                      , d = i * c
                      , p = i * u
                      , f = a * c
                      , m = a * u
                      , v = o * u
                      , g = s * l
                      , y = s * c
                      , x = s * u
                      , b = r[0]
                      , _ = r[1]
                      , w = r[2];
                    return t[0] = (1 - (f + v)) * b,
                    t[1] = (d + x) * b,
                    t[2] = (p - y) * b,
                    t[3] = 0,
                    t[4] = (d - x) * _,
                    t[5] = (1 - (h + v)) * _,
                    t[6] = (m + g) * _,
                    t[7] = 0,
                    t[8] = (p + y) * w,
                    t[9] = (m - g) * w,
                    t[10] = (1 - (h + f)) * w,
                    t[11] = 0,
                    t[12] = n[0],
                    t[13] = n[1],
                    t[14] = n[2],
                    t[15] = 1,
                    t
                }
                ,
                e.fromRotationTranslationScaleOrigin = function(t, e, n, r, i) {
                    var a = e[0]
                      , o = e[1]
                      , s = e[2]
                      , l = e[3]
                      , c = a + a
                      , u = o + o
                      , h = s + s
                      , d = a * c
                      , p = a * u
                      , f = a * h
                      , m = o * u
                      , v = o * h
                      , g = s * h
                      , y = l * c
                      , x = l * u
                      , b = l * h
                      , _ = r[0]
                      , w = r[1]
                      , M = r[2]
                      , E = i[0]
                      , T = i[1]
                      , S = i[2];
                    return t[0] = (1 - (m + g)) * _,
                    t[1] = (p + b) * _,
                    t[2] = (f - x) * _,
                    t[3] = 0,
                    t[4] = (p - b) * w,
                    t[5] = (1 - (d + g)) * w,
                    t[6] = (v + y) * w,
                    t[7] = 0,
                    t[8] = (f + x) * M,
                    t[9] = (v - y) * M,
                    t[10] = (1 - (d + m)) * M,
                    t[11] = 0,
                    t[12] = n[0] + E - (t[0] * E + t[4] * T + t[8] * S),
                    t[13] = n[1] + T - (t[1] * E + t[5] * T + t[9] * S),
                    t[14] = n[2] + S - (t[2] * E + t[6] * T + t[10] * S),
                    t[15] = 1,
                    t
                }
                ,
                e.fromQuat = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[3]
                      , o = n + n
                      , s = r + r
                      , l = i + i
                      , c = n * o
                      , u = r * o
                      , h = r * s
                      , d = i * o
                      , p = i * s
                      , f = i * l
                      , m = a * o
                      , v = a * s
                      , g = a * l;
                    return t[0] = 1 - h - f,
                    t[1] = u + g,
                    t[2] = d - v,
                    t[3] = 0,
                    t[4] = u - g,
                    t[5] = 1 - c - f,
                    t[6] = p + m,
                    t[7] = 0,
                    t[8] = d + v,
                    t[9] = p - m,
                    t[10] = 1 - c - h,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    t
                }
                ,
                e.frustum = function(t, e, n, r, i, a, o) {
                    var s = 1 / (n - e)
                      , l = 1 / (i - r)
                      , c = 1 / (a - o);
                    return t[0] = 2 * a * s,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 0,
                    t[5] = 2 * a * l,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = (n + e) * s,
                    t[9] = (i + r) * l,
                    t[10] = (o + a) * c,
                    t[11] = -1,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = o * a * 2 * c,
                    t[15] = 0,
                    t
                }
                ,
                e.perspective = function(t, e, n, r, i) {
                    var a = 1 / Math.tan(e / 2)
                      , o = 1 / (r - i);
                    return t[0] = a / n,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 0,
                    t[5] = a,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = 0,
                    t[9] = 0,
                    t[10] = (i + r) * o,
                    t[11] = -1,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 2 * i * r * o,
                    t[15] = 0,
                    t
                }
                ,
                e.perspectiveFromFieldOfView = function(t, e, n, r) {
                    var i = Math.tan(e.upDegrees * Math.PI / 180)
                      , a = Math.tan(e.downDegrees * Math.PI / 180)
                      , o = Math.tan(e.leftDegrees * Math.PI / 180)
                      , s = Math.tan(e.rightDegrees * Math.PI / 180)
                      , l = 2 / (o + s)
                      , c = 2 / (i + a);
                    return t[0] = l,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 0,
                    t[5] = c,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = -(o - s) * l * .5,
                    t[9] = (i - a) * c * .5,
                    t[10] = r / (n - r),
                    t[11] = -1,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = r * n / (n - r),
                    t[15] = 0,
                    t
                }
                ,
                e.ortho = function(t, e, n, r, i, a, o) {
                    var s = 1 / (e - n)
                      , l = 1 / (r - i)
                      , c = 1 / (a - o);
                    return t[0] = -2 * s,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 0,
                    t[4] = 0,
                    t[5] = -2 * l,
                    t[6] = 0,
                    t[7] = 0,
                    t[8] = 0,
                    t[9] = 0,
                    t[10] = 2 * c,
                    t[11] = 0,
                    t[12] = (e + n) * s,
                    t[13] = (i + r) * l,
                    t[14] = (o + a) * c,
                    t[15] = 1,
                    t
                }
                ,
                e.lookAt = function(t, e, n, r) {
                    var i = void 0
                      , o = void 0
                      , s = void 0
                      , l = void 0
                      , c = void 0
                      , u = void 0
                      , h = void 0
                      , d = void 0
                      , p = void 0
                      , f = void 0
                      , m = e[0]
                      , v = e[1]
                      , g = e[2]
                      , y = r[0]
                      , x = r[1]
                      , b = r[2]
                      , _ = n[0]
                      , w = n[1]
                      , M = n[2];
                    return Math.abs(m - _) < a.EPSILON && Math.abs(v - w) < a.EPSILON && Math.abs(g - M) < a.EPSILON ? mat4.identity(t) : (h = m - _,
                    d = v - w,
                    p = g - M,
                    f = 1 / Math.sqrt(h * h + d * d + p * p),
                    h *= f,
                    d *= f,
                    p *= f,
                    i = x * p - b * d,
                    o = b * h - y * p,
                    s = y * d - x * h,
                    (f = Math.sqrt(i * i + o * o + s * s)) ? (i *= f = 1 / f,
                    o *= f,
                    s *= f) : (i = 0,
                    o = 0,
                    s = 0),
                    l = d * s - p * o,
                    c = p * i - h * s,
                    u = h * o - d * i,
                    (f = Math.sqrt(l * l + c * c + u * u)) ? (l *= f = 1 / f,
                    c *= f,
                    u *= f) : (l = 0,
                    c = 0,
                    u = 0),
                    t[0] = i,
                    t[1] = l,
                    t[2] = h,
                    t[3] = 0,
                    t[4] = o,
                    t[5] = c,
                    t[6] = d,
                    t[7] = 0,
                    t[8] = s,
                    t[9] = u,
                    t[10] = p,
                    t[11] = 0,
                    t[12] = -(i * m + o * v + s * g),
                    t[13] = -(l * m + c * v + u * g),
                    t[14] = -(h * m + d * v + p * g),
                    t[15] = 1,
                    t)
                }
                ,
                e.targetTo = function(t, e, n, r) {
                    var i = e[0]
                      , a = e[1]
                      , o = e[2]
                      , s = r[0]
                      , l = r[1]
                      , c = r[2]
                      , u = i - n[0]
                      , h = a - n[1]
                      , d = o - n[2]
                      , p = u * u + h * h + d * d;
                    p > 0 && (u *= p = 1 / Math.sqrt(p),
                    h *= p,
                    d *= p);
                    var f = l * d - c * h
                      , m = c * u - s * d
                      , v = s * h - l * u;
                    return t[0] = f,
                    t[1] = m,
                    t[2] = v,
                    t[3] = 0,
                    t[4] = h * v - d * m,
                    t[5] = d * f - u * v,
                    t[6] = u * m - h * f,
                    t[7] = 0,
                    t[8] = u,
                    t[9] = h,
                    t[10] = d,
                    t[11] = 0,
                    t[12] = i,
                    t[13] = a,
                    t[14] = o,
                    t[15] = 1,
                    t
                }
                ,
                e.str = function(t) {
                    return "mat4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ", " + t[9] + ", " + t[10] + ", " + t[11] + ", " + t[12] + ", " + t[13] + ", " + t[14] + ", " + t[15] + ")"
                }
                ,
                e.frob = function(t) {
                    return Math.sqrt(Math.pow(t[0], 2) + Math.pow(t[1], 2) + Math.pow(t[2], 2) + Math.pow(t[3], 2) + Math.pow(t[4], 2) + Math.pow(t[5], 2) + Math.pow(t[6], 2) + Math.pow(t[7], 2) + Math.pow(t[8], 2) + Math.pow(t[9], 2) + Math.pow(t[10], 2) + Math.pow(t[11], 2) + Math.pow(t[12], 2) + Math.pow(t[13], 2) + Math.pow(t[14], 2) + Math.pow(t[15], 2))
                }
                ,
                e.add = function(t, e, n) {
                    return t[0] = e[0] + n[0],
                    t[1] = e[1] + n[1],
                    t[2] = e[2] + n[2],
                    t[3] = e[3] + n[3],
                    t[4] = e[4] + n[4],
                    t[5] = e[5] + n[5],
                    t[6] = e[6] + n[6],
                    t[7] = e[7] + n[7],
                    t[8] = e[8] + n[8],
                    t[9] = e[9] + n[9],
                    t[10] = e[10] + n[10],
                    t[11] = e[11] + n[11],
                    t[12] = e[12] + n[12],
                    t[13] = e[13] + n[13],
                    t[14] = e[14] + n[14],
                    t[15] = e[15] + n[15],
                    t
                }
                ,
                e.subtract = i,
                e.multiplyScalar = function(t, e, n) {
                    return t[0] = e[0] * n,
                    t[1] = e[1] * n,
                    t[2] = e[2] * n,
                    t[3] = e[3] * n,
                    t[4] = e[4] * n,
                    t[5] = e[5] * n,
                    t[6] = e[6] * n,
                    t[7] = e[7] * n,
                    t[8] = e[8] * n,
                    t[9] = e[9] * n,
                    t[10] = e[10] * n,
                    t[11] = e[11] * n,
                    t[12] = e[12] * n,
                    t[13] = e[13] * n,
                    t[14] = e[14] * n,
                    t[15] = e[15] * n,
                    t
                }
                ,
                e.multiplyScalarAndAdd = function(t, e, n, r) {
                    return t[0] = e[0] + n[0] * r,
                    t[1] = e[1] + n[1] * r,
                    t[2] = e[2] + n[2] * r,
                    t[3] = e[3] + n[3] * r,
                    t[4] = e[4] + n[4] * r,
                    t[5] = e[5] + n[5] * r,
                    t[6] = e[6] + n[6] * r,
                    t[7] = e[7] + n[7] * r,
                    t[8] = e[8] + n[8] * r,
                    t[9] = e[9] + n[9] * r,
                    t[10] = e[10] + n[10] * r,
                    t[11] = e[11] + n[11] * r,
                    t[12] = e[12] + n[12] * r,
                    t[13] = e[13] + n[13] * r,
                    t[14] = e[14] + n[14] * r,
                    t[15] = e[15] + n[15] * r,
                    t
                }
                ,
                e.exactEquals = function(t, e) {
                    return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5] && t[6] === e[6] && t[7] === e[7] && t[8] === e[8] && t[9] === e[9] && t[10] === e[10] && t[11] === e[11] && t[12] === e[12] && t[13] === e[13] && t[14] === e[14] && t[15] === e[15]
                }
                ,
                e.equals = function(t, e) {
                    var n = t[0]
                      , r = t[1]
                      , i = t[2]
                      , o = t[3]
                      , s = t[4]
                      , l = t[5]
                      , c = t[6]
                      , u = t[7]
                      , h = t[8]
                      , d = t[9]
                      , p = t[10]
                      , f = t[11]
                      , m = t[12]
                      , v = t[13]
                      , g = t[14]
                      , y = t[15]
                      , x = e[0]
                      , b = e[1]
                      , _ = e[2]
                      , w = e[3]
                      , M = e[4]
                      , E = e[5]
                      , T = e[6]
                      , S = e[7]
                      , A = e[8]
                      , L = e[9]
                      , R = e[10]
                      , P = e[11]
                      , C = e[12]
                      , I = e[13]
                      , O = e[14]
                      , N = e[15];
                    return Math.abs(n - x) <= a.EPSILON * Math.max(1, Math.abs(n), Math.abs(x)) && Math.abs(r - b) <= a.EPSILON * Math.max(1, Math.abs(r), Math.abs(b)) && Math.abs(i - _) <= a.EPSILON * Math.max(1, Math.abs(i), Math.abs(_)) && Math.abs(o - w) <= a.EPSILON * Math.max(1, Math.abs(o), Math.abs(w)) && Math.abs(s - M) <= a.EPSILON * Math.max(1, Math.abs(s), Math.abs(M)) && Math.abs(l - E) <= a.EPSILON * Math.max(1, Math.abs(l), Math.abs(E)) && Math.abs(c - T) <= a.EPSILON * Math.max(1, Math.abs(c), Math.abs(T)) && Math.abs(u - S) <= a.EPSILON * Math.max(1, Math.abs(u), Math.abs(S)) && Math.abs(h - A) <= a.EPSILON * Math.max(1, Math.abs(h), Math.abs(A)) && Math.abs(d - L) <= a.EPSILON * Math.max(1, Math.abs(d), Math.abs(L)) && Math.abs(p - R) <= a.EPSILON * Math.max(1, Math.abs(p), Math.abs(R)) && Math.abs(f - P) <= a.EPSILON * Math.max(1, Math.abs(f), Math.abs(P)) && Math.abs(m - C) <= a.EPSILON * Math.max(1, Math.abs(m), Math.abs(C)) && Math.abs(v - I) <= a.EPSILON * Math.max(1, Math.abs(v), Math.abs(I)) && Math.abs(g - O) <= a.EPSILON * Math.max(1, Math.abs(g), Math.abs(O)) && Math.abs(y - N) <= a.EPSILON * Math.max(1, Math.abs(y), Math.abs(N))
                }
                ;
                var a = function(t) {
                    if (t && t.__esModule)
                        return t;
                    var e = {};
                    if (null != t)
                        for (var n in t)
                            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                    return e.default = t,
                    e
                }(n(0));
                e.mul = r,
                e.sub = i
            }
            , function(t, e, n) {
                "use strict";
                function r(t) {
                    if (t && t.__esModule)
                        return t;
                    var e = {};
                    if (null != t)
                        for (var n in t)
                            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                    return e.default = t,
                    e
                }
                function i() {
                    var t = new c.ARRAY_TYPE(4);
                    return t[0] = 0,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 1,
                    t
                }
                function a(t, e, n) {
                    n *= .5;
                    var r = Math.sin(n);
                    return t[0] = r * e[0],
                    t[1] = r * e[1],
                    t[2] = r * e[2],
                    t[3] = Math.cos(n),
                    t
                }
                function o(t, e, n) {
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = n[0]
                      , l = n[1]
                      , c = n[2]
                      , u = n[3];
                    return t[0] = r * u + o * s + i * c - a * l,
                    t[1] = i * u + o * l + a * s - r * c,
                    t[2] = a * u + o * c + r * l - i * s,
                    t[3] = o * u - r * s - i * l - a * c,
                    t
                }
                function s(t, e, n, r) {
                    var i = e[0]
                      , a = e[1]
                      , o = e[2]
                      , s = e[3]
                      , l = n[0]
                      , c = n[1]
                      , u = n[2]
                      , h = n[3]
                      , d = void 0
                      , p = void 0
                      , f = void 0
                      , m = void 0
                      , v = void 0;
                    return (p = i * l + a * c + o * u + s * h) < 0 && (p = -p,
                    l = -l,
                    c = -c,
                    u = -u,
                    h = -h),
                    1 - p > 1e-6 ? (d = Math.acos(p),
                    f = Math.sin(d),
                    m = Math.sin((1 - r) * d) / f,
                    v = Math.sin(r * d) / f) : (m = 1 - r,
                    v = r),
                    t[0] = m * i + v * l,
                    t[1] = m * a + v * c,
                    t[2] = m * o + v * u,
                    t[3] = m * s + v * h,
                    t
                }
                function l(t, e) {
                    var n = e[0] + e[4] + e[8]
                      , r = void 0;
                    if (n > 0)
                        r = Math.sqrt(n + 1),
                        t[3] = .5 * r,
                        r = .5 / r,
                        t[0] = (e[5] - e[7]) * r,
                        t[1] = (e[6] - e[2]) * r,
                        t[2] = (e[1] - e[3]) * r;
                    else {
                        var i = 0;
                        e[4] > e[0] && (i = 1),
                        e[8] > e[3 * i + i] && (i = 2);
                        var a = (i + 1) % 3
                          , o = (i + 2) % 3;
                        r = Math.sqrt(e[3 * i + i] - e[3 * a + a] - e[3 * o + o] + 1),
                        t[i] = .5 * r,
                        r = .5 / r,
                        t[3] = (e[3 * a + o] - e[3 * o + a]) * r,
                        t[a] = (e[3 * a + i] + e[3 * i + a]) * r,
                        t[o] = (e[3 * o + i] + e[3 * i + o]) * r
                    }
                    return t
                }
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.setAxes = e.sqlerp = e.rotationTo = e.equals = e.exactEquals = e.normalize = e.sqrLen = e.squaredLength = e.len = e.length = e.lerp = e.dot = e.scale = e.mul = e.add = e.set = e.copy = e.fromValues = e.clone = void 0,
                e.create = i,
                e.identity = function(t) {
                    return t[0] = 0,
                    t[1] = 0,
                    t[2] = 0,
                    t[3] = 1,
                    t
                }
                ,
                e.setAxisAngle = a,
                e.getAxisAngle = function(t, e) {
                    var n = 2 * Math.acos(e[3])
                      , r = Math.sin(n / 2);
                    return 0 != r ? (t[0] = e[0] / r,
                    t[1] = e[1] / r,
                    t[2] = e[2] / r) : (t[0] = 1,
                    t[1] = 0,
                    t[2] = 0),
                    n
                }
                ,
                e.multiply = o,
                e.rotateX = function(t, e, n) {
                    n *= .5;
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = Math.sin(n)
                      , l = Math.cos(n);
                    return t[0] = r * l + o * s,
                    t[1] = i * l + a * s,
                    t[2] = a * l - i * s,
                    t[3] = o * l - r * s,
                    t
                }
                ,
                e.rotateY = function(t, e, n) {
                    n *= .5;
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = Math.sin(n)
                      , l = Math.cos(n);
                    return t[0] = r * l - a * s,
                    t[1] = i * l + o * s,
                    t[2] = a * l + r * s,
                    t[3] = o * l - i * s,
                    t
                }
                ,
                e.rotateZ = function(t, e, n) {
                    n *= .5;
                    var r = e[0]
                      , i = e[1]
                      , a = e[2]
                      , o = e[3]
                      , s = Math.sin(n)
                      , l = Math.cos(n);
                    return t[0] = r * l + i * s,
                    t[1] = i * l - r * s,
                    t[2] = a * l + o * s,
                    t[3] = o * l - a * s,
                    t
                }
                ,
                e.calculateW = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2];
                    return t[0] = n,
                    t[1] = r,
                    t[2] = i,
                    t[3] = Math.sqrt(Math.abs(1 - n * n - r * r - i * i)),
                    t
                }
                ,
                e.slerp = s,
                e.invert = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2]
                      , a = e[3]
                      , o = n * n + r * r + i * i + a * a
                      , s = o ? 1 / o : 0;
                    return t[0] = -n * s,
                    t[1] = -r * s,
                    t[2] = -i * s,
                    t[3] = a * s,
                    t
                }
                ,
                e.conjugate = function(t, e) {
                    return t[0] = -e[0],
                    t[1] = -e[1],
                    t[2] = -e[2],
                    t[3] = e[3],
                    t
                }
                ,
                e.fromMat3 = l,
                e.fromEuler = function(t, e, n, r) {
                    var i = .5 * Math.PI / 180;
                    e *= i,
                    n *= i,
                    r *= i;
                    var a = Math.sin(e)
                      , o = Math.cos(e)
                      , s = Math.sin(n)
                      , l = Math.cos(n)
                      , c = Math.sin(r)
                      , u = Math.cos(r);
                    return t[0] = a * l * u - o * s * c,
                    t[1] = o * s * u + a * l * c,
                    t[2] = o * l * c - a * s * u,
                    t[3] = o * l * u + a * s * c,
                    t
                }
                ,
                e.str = function(t) {
                    return "quat(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")"
                }
                ;
                var c = r(n(0))
                  , u = r(n(1))
                  , h = r(n(2))
                  , d = r(n(3))
                  , p = (e.clone = d.clone,
                e.fromValues = d.fromValues,
                e.copy = d.copy,
                e.set = d.set,
                e.add = d.add,
                e.mul = o,
                e.scale = d.scale,
                e.dot = d.dot,
                e.lerp = d.lerp,
                e.length = d.length)
                  , f = (e.len = p,
                e.squaredLength = d.squaredLength)
                  , m = (e.sqrLen = f,
                e.normalize = d.normalize);
                e.exactEquals = d.exactEquals,
                e.equals = d.equals,
                e.rotationTo = function() {
                    var t = h.create()
                      , e = h.fromValues(1, 0, 0)
                      , n = h.fromValues(0, 1, 0);
                    return function(r, i, o) {
                        var s = h.dot(i, o);
                        return s < -.999999 ? (h.cross(t, e, i),
                        h.len(t) < 1e-6 && h.cross(t, n, i),
                        h.normalize(t, t),
                        a(r, t, Math.PI),
                        r) : s > .999999 ? (r[0] = 0,
                        r[1] = 0,
                        r[2] = 0,
                        r[3] = 1,
                        r) : (h.cross(t, i, o),
                        r[0] = t[0],
                        r[1] = t[1],
                        r[2] = t[2],
                        r[3] = 1 + s,
                        m(r, r))
                    }
                }(),
                e.sqlerp = function() {
                    var t = i()
                      , e = i();
                    return function(n, r, i, a, o, l) {
                        return s(t, r, o, l),
                        s(e, i, a, l),
                        s(n, t, e, 2 * l * (1 - l)),
                        n
                    }
                }(),
                e.setAxes = function() {
                    var t = u.create();
                    return function(e, n, r, i) {
                        return t[0] = r[0],
                        t[3] = r[1],
                        t[6] = r[2],
                        t[1] = i[0],
                        t[4] = i[1],
                        t[7] = i[2],
                        t[2] = -n[0],
                        t[5] = -n[1],
                        t[8] = -n[2],
                        m(e, l(e, t))
                    }
                }()
            }
            , function(t, e, n) {
                "use strict";
                function r() {
                    var t = new h.ARRAY_TYPE(2);
                    return t[0] = 0,
                    t[1] = 0,
                    t
                }
                function i(t, e, n) {
                    return t[0] = e[0] - n[0],
                    t[1] = e[1] - n[1],
                    t
                }
                function a(t, e, n) {
                    return t[0] = e[0] * n[0],
                    t[1] = e[1] * n[1],
                    t
                }
                function o(t, e, n) {
                    return t[0] = e[0] / n[0],
                    t[1] = e[1] / n[1],
                    t
                }
                function s(t, e) {
                    var n = e[0] - t[0]
                      , r = e[1] - t[1];
                    return Math.sqrt(n * n + r * r)
                }
                function l(t, e) {
                    var n = e[0] - t[0]
                      , r = e[1] - t[1];
                    return n * n + r * r
                }
                function c(t) {
                    var e = t[0]
                      , n = t[1];
                    return Math.sqrt(e * e + n * n)
                }
                function u(t) {
                    var e = t[0]
                      , n = t[1];
                    return e * e + n * n
                }
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.forEach = e.sqrLen = e.sqrDist = e.dist = e.div = e.mul = e.sub = e.len = void 0,
                e.create = r,
                e.clone = function(t) {
                    var e = new h.ARRAY_TYPE(2);
                    return e[0] = t[0],
                    e[1] = t[1],
                    e
                }
                ,
                e.fromValues = function(t, e) {
                    var n = new h.ARRAY_TYPE(2);
                    return n[0] = t,
                    n[1] = e,
                    n
                }
                ,
                e.copy = function(t, e) {
                    return t[0] = e[0],
                    t[1] = e[1],
                    t
                }
                ,
                e.set = function(t, e, n) {
                    return t[0] = e,
                    t[1] = n,
                    t
                }
                ,
                e.add = function(t, e, n) {
                    return t[0] = e[0] + n[0],
                    t[1] = e[1] + n[1],
                    t
                }
                ,
                e.subtract = i,
                e.multiply = a,
                e.divide = o,
                e.ceil = function(t, e) {
                    return t[0] = Math.ceil(e[0]),
                    t[1] = Math.ceil(e[1]),
                    t
                }
                ,
                e.floor = function(t, e) {
                    return t[0] = Math.floor(e[0]),
                    t[1] = Math.floor(e[1]),
                    t
                }
                ,
                e.min = function(t, e, n) {
                    return t[0] = Math.min(e[0], n[0]),
                    t[1] = Math.min(e[1], n[1]),
                    t
                }
                ,
                e.max = function(t, e, n) {
                    return t[0] = Math.max(e[0], n[0]),
                    t[1] = Math.max(e[1], n[1]),
                    t
                }
                ,
                e.round = function(t, e) {
                    return t[0] = Math.round(e[0]),
                    t[1] = Math.round(e[1]),
                    t
                }
                ,
                e.scale = function(t, e, n) {
                    return t[0] = e[0] * n,
                    t[1] = e[1] * n,
                    t
                }
                ,
                e.scaleAndAdd = function(t, e, n, r) {
                    return t[0] = e[0] + n[0] * r,
                    t[1] = e[1] + n[1] * r,
                    t
                }
                ,
                e.distance = s,
                e.squaredDistance = l,
                e.length = c,
                e.squaredLength = u,
                e.negate = function(t, e) {
                    return t[0] = -e[0],
                    t[1] = -e[1],
                    t
                }
                ,
                e.inverse = function(t, e) {
                    return t[0] = 1 / e[0],
                    t[1] = 1 / e[1],
                    t
                }
                ,
                e.normalize = function(t, e) {
                    var n = e[0]
                      , r = e[1]
                      , i = n * n + r * r;
                    return i > 0 && (i = 1 / Math.sqrt(i),
                    t[0] = e[0] * i,
                    t[1] = e[1] * i),
                    t
                }
                ,
                e.dot = function(t, e) {
                    return t[0] * e[0] + t[1] * e[1]
                }
                ,
                e.cross = function(t, e, n) {
                    var r = e[0] * n[1] - e[1] * n[0];
                    return t[0] = t[1] = 0,
                    t[2] = r,
                    t
                }
                ,
                e.lerp = function(t, e, n, r) {
                    var i = e[0]
                      , a = e[1];
                    return t[0] = i + r * (n[0] - i),
                    t[1] = a + r * (n[1] - a),
                    t
                }
                ,
                e.random = function(t, e) {
                    e = e || 1;
                    var n = 2 * h.RANDOM() * Math.PI;
                    return t[0] = Math.cos(n) * e,
                    t[1] = Math.sin(n) * e,
                    t
                }
                ,
                e.transformMat2 = function(t, e, n) {
                    var r = e[0]
                      , i = e[1];
                    return t[0] = n[0] * r + n[2] * i,
                    t[1] = n[1] * r + n[3] * i,
                    t
                }
                ,
                e.transformMat2d = function(t, e, n) {
                    var r = e[0]
                      , i = e[1];
                    return t[0] = n[0] * r + n[2] * i + n[4],
                    t[1] = n[1] * r + n[3] * i + n[5],
                    t
                }
                ,
                e.transformMat3 = function(t, e, n) {
                    var r = e[0]
                      , i = e[1];
                    return t[0] = n[0] * r + n[3] * i + n[6],
                    t[1] = n[1] * r + n[4] * i + n[7],
                    t
                }
                ,
                e.transformMat4 = function(t, e, n) {
                    var r = e[0]
                      , i = e[1];
                    return t[0] = n[0] * r + n[4] * i + n[12],
                    t[1] = n[1] * r + n[5] * i + n[13],
                    t
                }
                ,
                e.str = function(t) {
                    return "vec2(" + t[0] + ", " + t[1] + ")"
                }
                ,
                e.exactEquals = function(t, e) {
                    return t[0] === e[0] && t[1] === e[1]
                }
                ,
                e.equals = function(t, e) {
                    var n = t[0]
                      , r = t[1]
                      , i = e[0]
                      , a = e[1];
                    return Math.abs(n - i) <= h.EPSILON * Math.max(1, Math.abs(n), Math.abs(i)) && Math.abs(r - a) <= h.EPSILON * Math.max(1, Math.abs(r), Math.abs(a))
                }
                ;
                var h = function(t) {
                    if (t && t.__esModule)
                        return t;
                    var e = {};
                    if (null != t)
                        for (var n in t)
                            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                    return e.default = t,
                    e
                }(n(0));
                e.len = c,
                e.sub = i,
                e.mul = a,
                e.div = o,
                e.dist = s,
                e.sqrDist = l,
                e.sqrLen = u,
                e.forEach = function() {
                    var t = r();
                    return function(e, n, r, i, a, o) {
                        var s = void 0
                          , l = void 0;
                        for (n || (n = 2),
                        r || (r = 0),
                        l = i ? Math.min(i * n + r, e.length) : e.length,
                        s = r; s < l; s += n)
                            t[0] = e[s],
                            t[1] = e[s + 1],
                            a(t, t, o),
                            e[s] = t[0],
                            e[s + 1] = t[1];
                        return e
                    }
                }()
            }
            ])
        })
    }
    , {}],
    2: [function(t, e, n) {
        e.exports = function(t) {
            "string" == typeof t && (t = [t]);
            for (var e = [].slice.call(arguments, 1), n = [], r = 0; r < t.length - 1; r++)
                n.push(t[r], e[r] || "");
            return n.push(t[r]),
            n.join("")
        }
    }
    , {}],
    3: [function(t, e, n) {
        e.exports = function() {
            this.top = 0,
            this.isFixed = !1,
            this.set = function() {
                this.top = window.pageYOffset,
                document.body.style.position = "fixed",
                document.body.style.marginTop = -1 * this.top + "px",
                this.isFixed = !0
            }
            ,
            this.cancel = function() {
                !1 !== this.isFixed && (document.body.style.position = "static",
                document.body.style.marginTop = 0,
                window.scrollTo(0, this.top),
                this.isFixed = !1)
            }
        }
    }
    , {}],
    4: [function(t, e, n) {
        e.exports = function(t) {
            var e = this;
            this.elm = t,
            this.isTouched = !1,
            this.elm.addEventListener("touchstart", function() {
                e.isTouched = !0
            }, !1),
            this.elm.addEventListener("touchstartend", function() {
                e.isTouched = !1
            }, !1),
            this.elm.addEventListener("mouseover", function() {
                e.isTouched || (e.elm.classList.remove("is-leave"),
                e.elm.classList.add("is-over"))
            }, !1),
            this.elm.addEventListener("mouseleave", function() {
                e.isTouched || (e.elm.classList.remove("is-over"),
                e.elm.classList.add("is-leave"))
            }, !1),
            this.elm.addEventListener("transitionend", function() {
                e.elm.classList.contains("is-leave") && e.elm.classList.remove("is-leave")
            }, !1),
            this.elm.addEventListener("animationend", function() {
                e.elm.classList.contains("is-leave") && e.elm.classList.remove("is-leave")
            }, !1)
        }
    }
    , {}],
    5: [function(t, e, n) {
        e.exports = {
            degrees: function(t) {
                return t / Math.PI * 180
            },
            radians: function(t) {
                return t * Math.PI / 180
            },
            clamp: function(t, e, n) {
                return Math.min(Math.max(t, e), n)
            },
            mix: function(t, e, n) {
                return t * (1 - n) + e * n
            },
            polar: function(t, e, n) {
                return [Math.cos(t) * Math.cos(e) * n, Math.sin(t) * n, Math.cos(t) * Math.sin(e) * n]
            }
        }
    }
    , {}],
    6: [function(t, e, n) {
        var r = function(t) {
            return 0 == t || 1 == t ? t : t < .5 ? .5 * Math.pow(2, 20 * t - 10) : -.5 * Math.pow(2, 10 - 20 * t) + 1
        };
        e.exports = function(t, e) {
            var n = this;
            this.elm = t,
            this.target = document.getElementById(t.getAttribute("href").replace("#", "")),
            this.scrollTopBefore = 0,
            this.scrollTopAfter = 0,
            this.timeClick = 0,
            this.isScrolling = !1,
            this.duration = e || 1e3,
            this.render = function() {
                var t = Date.now() - n.timeClick;
                window.scrollTo(0, n.scrollTopBefore + (n.scrollTopAfter - n.scrollTopBefore) * Math.min(r(t / n.duration))),
                t < n.duration ? requestAnimationFrame(n.render) : n.isScrolling = !1
            }
            ,
            this.elm.addEventListener("click", function(t) {
                if (t.preventDefault(),
                !n.isScrolling) {
                    var e = n.target.getBoundingClientRect();
                    n.timeClick = Date.now(),
                    n.isScrolling = !0,
                    n.scrollTopBefore = window.pageYOffset,
                    n.scrollTopAfter = n.scrollTopBefore + e.top,
                    n.render()
                }
            }, !1)
        }
    }
    , {}],
    7: [function(t, e, n) {
        e.exports = function(t, e) {
            var n;
            return function(r) {
                clearTimeout(n),
                n = setTimeout(function() {
                    t(r)
                }, e)
            }
        }
    }
    , {}],
    8: [function(t, e, n) {
        e.exports = function() {
            return navigator.userAgent.indexOf("Android") >= 0
        }
    }
    , {}],
    9: [function(t, e, n) {
        e.exports = function() {
            return navigator.userAgent.indexOf("Edge") > -1
        }
    }
    , {}],
    10: [function(t, e, n) {
        e.exports = function() {
            var t = navigator.userAgent;
            return t.indexOf("MSIE") > -1 || t.indexOf("rv:11.0") > -1
        }
    }
    , {}],
    11: [function(t, e, n) {
        e.exports = function() {
            var t = navigator.userAgent;
            return t.indexOf("iPhone") >= 0 || t.indexOf("iPod") >= 0 || t.indexOf("Android") >= 0
        }
    }
    , {}],
    12: [function(t, e, n) {
        e.exports = function() {
            var t = navigator.userAgent;
            return t.indexOf("iPhone") >= 0 || t.indexOf("iPod") >= 0 || t.indexOf("iPad") >= 0
        }
    }
    , {}],
    13: [function(t, e, n) {
        e.exports = function(t, e, n) {
            var r = t.split("")
              , i = "";
            if (n)
                for (a = 0; a < r.length; a++)
                    0 == a && (i += '<span class="' + e + '-wrap">'),
                    i += '<span class="' + e + " " + e + "--" + (a + 1) + '">',
                    i += " " == r[a] ? "&nbsp" : r[a],
                    i += "</span>",
                    " " == r[a] && (i += '</span><span class="' + e + '-wrap">'),
                    a == r.length - 1 && (i += "</span>");
            else
                for (var a = 0; a < r.length; a++)
                    i += '<span class="' + e + " " + e + "--" + (a + 1) + '">',
                    i += " " == r[a] ? "&nbsp" : r[a],
                    i += "</span>";
            return i
        }
    }
    , {}],
    14: [function(t, e, n) {
        "use strict";
        e.exports = t("./src/js/main")
    }
    , {
        "./src/js/main": 19
    }],
    15: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            return window.getComputedStyle(t)[e]
        }
        function i(t, e, n) {
            return "number" == typeof n && (n = n.toString() + "px"),
            t.style[e] = n,
            t
        }
        function a(t, e) {
            for (var n in e) {
                var r = e[n];
                "number" == typeof r && (r = r.toString() + "px"),
                t.style[n] = r
            }
            return t
        }
        var o = {};
        o.create = function(t, e) {
            var n = document.createElement(t);
            return n.className = e,
            n
        }
        ,
        o.appendTo = function(t, e) {
            return e.appendChild(t),
            t
        }
        ,
        o.css = function(t, e, n) {
            return "object" == typeof e ? a(t, e) : void 0 === n ? r(t, e) : i(t, e, n)
        }
        ,
        o.matches = function(t, e) {
            return void 0 !== t.matches ? t.matches(e) : t.msMatchesSelector(e)
        }
        ,
        o.remove = function(t) {
            void 0 !== t.remove ? t.remove() : t.parentNode && t.parentNode.removeChild(t)
        }
        ,
        o.queryChildren = function(t, e) {
            return Array.prototype.filter.call(t.childNodes, function(t) {
                return o.matches(t, e)
            })
        }
        ,
        e.exports = o
    }
    , {}],
    16: [function(t, e, n) {
        "use strict";
        var r = function(t) {
            this.element = t,
            this.events = {}
        };
        r.prototype.bind = function(t, e) {
            void 0 === this.events[t] && (this.events[t] = []),
            this.events[t].push(e),
            this.element.addEventListener(t, e, !1)
        }
        ,
        r.prototype.unbind = function(t, e) {
            var n = void 0 !== e;
            this.events[t] = this.events[t].filter(function(r) {
                return !(!n || r === e) || (this.element.removeEventListener(t, r, !1),
                !1)
            }, this)
        }
        ,
        r.prototype.unbindAll = function() {
            for (var t in this.events)
                this.unbind(t)
        }
        ;
        var i = function() {
            this.eventElements = []
        };
        i.prototype.eventElement = function(t) {
            var e = this.eventElements.filter(function(e) {
                return e.element === t
            })[0];
            return void 0 === e && (e = new r(t),
            this.eventElements.push(e)),
            e
        }
        ,
        i.prototype.bind = function(t, e, n) {
            this.eventElement(t).bind(e, n)
        }
        ,
        i.prototype.unbind = function(t, e, n) {
            this.eventElement(t).unbind(e, n)
        }
        ,
        i.prototype.unbindAll = function() {
            for (var t = 0; t < this.eventElements.length; t++)
                this.eventElements[t].unbindAll()
        }
        ,
        i.prototype.once = function(t, e, n) {
            var r = this.eventElement(t)
              , i = function(t) {
                r.unbind(e, i),
                n(t)
            };
            r.bind(e, i)
        }
        ,
        e.exports = i
    }
    , {}],
    17: [function(t, e, n) {
        "use strict";
        e.exports = function() {
            function t() {
                return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
            }
            return function() {
                return t() + t() + "-" + t() + "-" + t() + "-" + t() + "-" + t() + t() + t()
            }
        }()
    }
    , {}],
    18: [function(t, e, n) {
        "use strict";
        function r(t) {
            var e, n = ["ps--in-scrolling"];
            return e = void 0 === t ? ["ps--x", "ps--y"] : ["ps--" + t],
            n.concat(e)
        }
        var i = t("./dom")
          , a = n.toInt = function(t) {
            return parseInt(t, 10) || 0
        }
        ;
        n.isEditable = function(t) {
            return i.matches(t, "input,[contenteditable]") || i.matches(t, "select,[contenteditable]") || i.matches(t, "textarea,[contenteditable]") || i.matches(t, "button,[contenteditable]")
        }
        ,
        n.removePsClasses = function(t) {
            for (var e = 0; e < t.classList.length; e++) {
                var n = t.classList[e];
                0 === n.indexOf("ps-") && t.classList.remove(n)
            }
        }
        ,
        n.outerWidth = function(t) {
            return a(i.css(t, "width")) + a(i.css(t, "paddingLeft")) + a(i.css(t, "paddingRight")) + a(i.css(t, "borderLeftWidth")) + a(i.css(t, "borderRightWidth"))
        }
        ,
        n.startScrolling = function(t, e) {
            for (var n = r(e), i = 0; i < n.length; i++)
                t.classList.add(n[i])
        }
        ,
        n.stopScrolling = function(t, e) {
            for (var n = r(e), i = 0; i < n.length; i++)
                t.classList.remove(n[i])
        }
        ,
        n.env = {
            isWebKit: "undefined" != typeof document && "WebkitAppearance"in document.documentElement.style,
            supportsTouch: "undefined" != typeof window && ("ontouchstart"in window || window.DocumentTouch && document instanceof window.DocumentTouch),
            supportsIePointer: "undefined" != typeof window && null !== window.navigator.msMaxTouchPoints
        }
    }
    , {
        "./dom": 15
    }],
    19: [function(t, e, n) {
        "use strict";
        var r = t("./plugin/destroy")
          , i = t("./plugin/initialize")
          , a = t("./plugin/update");
        e.exports = {
            initialize: i,
            update: a,
            destroy: r
        }
    }
    , {
        "./plugin/destroy": 21,
        "./plugin/initialize": 29,
        "./plugin/update": 33
    }],
    20: [function(t, e, n) {
        "use strict";
        e.exports = function() {
            return {
                handlers: ["click-rail", "drag-scrollbar", "keyboard", "wheel", "touch"],
                maxScrollbarLength: null,
                minScrollbarLength: null,
                scrollXMarginOffset: 0,
                scrollYMarginOffset: 0,
                suppressScrollX: !1,
                suppressScrollY: !1,
                swipePropagation: !0,
                swipeEasing: !0,
                useBothWheelAxes: !1,
                wheelPropagation: !1,
                wheelSpeed: 1,
                theme: "default"
            }
        }
    }
    , {}],
    21: [function(t, e, n) {
        "use strict";
        var r = t("../lib/helper")
          , i = t("../lib/dom")
          , a = t("./instances");
        e.exports = function(t) {
            var e = a.get(t);
            e && (e.event.unbindAll(),
            i.remove(e.scrollbarX),
            i.remove(e.scrollbarY),
            i.remove(e.scrollbarXRail),
            i.remove(e.scrollbarYRail),
            r.removePsClasses(t),
            a.remove(t))
        }
    }
    , {
        "../lib/dom": 15,
        "../lib/helper": 18,
        "./instances": 30
    }],
    22: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            function n(t) {
                return t.getBoundingClientRect()
            }
            var r = function(t) {
                t.stopPropagation()
            };
            e.event.bind(e.scrollbarY, "click", r),
            e.event.bind(e.scrollbarYRail, "click", function(r) {
                var i = r.pageY - window.pageYOffset - n(e.scrollbarYRail).top > e.scrollbarYTop ? 1 : -1;
                o(t, "top", t.scrollTop + i * e.containerHeight),
                a(t),
                r.stopPropagation()
            }),
            e.event.bind(e.scrollbarX, "click", r),
            e.event.bind(e.scrollbarXRail, "click", function(r) {
                var i = r.pageX - window.pageXOffset - n(e.scrollbarXRail).left > e.scrollbarXLeft ? 1 : -1;
                o(t, "left", t.scrollLeft + i * e.containerWidth),
                a(t),
                r.stopPropagation()
            })
        }
        var i = t("../instances")
          , a = t("../update-geometry")
          , o = t("../update-scroll");
        e.exports = function(t) {
            r(t, i.get(t))
        }
    }
    , {
        "../instances": 30,
        "../update-geometry": 31,
        "../update-scroll": 32
    }],
    23: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            function n(n) {
                var i = r + n * e.railXRatio
                  , o = Math.max(0, e.scrollbarXRail.getBoundingClientRect().left) + e.railXRatio * (e.railXWidth - e.scrollbarXWidth);
                e.scrollbarXLeft = i < 0 ? 0 : i > o ? o : i;
                var s = a.toInt(e.scrollbarXLeft * (e.contentWidth - e.containerWidth) / (e.containerWidth - e.railXRatio * e.scrollbarXWidth)) - e.negativeScrollAdjustment;
                c(t, "left", s)
            }
            var r = null
              , i = null
              , s = function(e) {
                n(e.pageX - i),
                l(t),
                e.stopPropagation(),
                e.preventDefault()
            }
              , u = function() {
                a.stopScrolling(t, "x"),
                e.event.unbind(e.ownerDocument, "mousemove", s)
            };
            e.event.bind(e.scrollbarX, "mousedown", function(n) {
                i = n.pageX,
                r = a.toInt(o.css(e.scrollbarX, "left")) * e.railXRatio,
                a.startScrolling(t, "x"),
                e.event.bind(e.ownerDocument, "mousemove", s),
                e.event.once(e.ownerDocument, "mouseup", u),
                n.stopPropagation(),
                n.preventDefault()
            })
        }
        function i(t, e) {
            function n(n) {
                var i = r + n * e.railYRatio
                  , o = Math.max(0, e.scrollbarYRail.getBoundingClientRect().top) + e.railYRatio * (e.railYHeight - e.scrollbarYHeight);
                e.scrollbarYTop = i < 0 ? 0 : i > o ? o : i;
                var s = a.toInt(e.scrollbarYTop * (e.contentHeight - e.containerHeight) / (e.containerHeight - e.railYRatio * e.scrollbarYHeight));
                c(t, "top", s)
            }
            var r = null
              , i = null
              , s = function(e) {
                n(e.pageY - i),
                l(t),
                e.stopPropagation(),
                e.preventDefault()
            }
              , u = function() {
                a.stopScrolling(t, "y"),
                e.event.unbind(e.ownerDocument, "mousemove", s)
            };
            e.event.bind(e.scrollbarY, "mousedown", function(n) {
                i = n.pageY,
                r = a.toInt(o.css(e.scrollbarY, "top")) * e.railYRatio,
                a.startScrolling(t, "y"),
                e.event.bind(e.ownerDocument, "mousemove", s),
                e.event.once(e.ownerDocument, "mouseup", u),
                n.stopPropagation(),
                n.preventDefault()
            })
        }
        var a = t("../../lib/helper")
          , o = t("../../lib/dom")
          , s = t("../instances")
          , l = t("../update-geometry")
          , c = t("../update-scroll");
        e.exports = function(t) {
            var e = s.get(t);
            r(t, e),
            i(t, e)
        }
    }
    , {
        "../../lib/dom": 15,
        "../../lib/helper": 18,
        "../instances": 30,
        "../update-geometry": 31,
        "../update-scroll": 32
    }],
    24: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            function n(n, r) {
                var i = t.scrollTop;
                if (0 === n) {
                    if (!e.scrollbarYActive)
                        return !1;
                    if (0 === i && r > 0 || i >= e.contentHeight - e.containerHeight && r < 0)
                        return !e.settings.wheelPropagation
                }
                var a = t.scrollLeft;
                if (0 === r) {
                    if (!e.scrollbarXActive)
                        return !1;
                    if (0 === a && n < 0 || a >= e.contentWidth - e.containerWidth && n > 0)
                        return !e.settings.wheelPropagation
                }
                return !0
            }
            var r = !1;
            e.event.bind(t, "mouseenter", function() {
                r = !0
            }),
            e.event.bind(t, "mouseleave", function() {
                r = !1
            });
            var o = !1;
            e.event.bind(e.ownerDocument, "keydown", function(c) {
                if (!(c.isDefaultPrevented && c.isDefaultPrevented() || c.defaultPrevented)) {
                    var u = a.matches(e.scrollbarX, ":focus") || a.matches(e.scrollbarY, ":focus");
                    if (r || u) {
                        var h = document.activeElement ? document.activeElement : e.ownerDocument.activeElement;
                        if (h) {
                            if ("IFRAME" === h.tagName)
                                h = h.contentDocument.activeElement;
                            else
                                for (; h.shadowRoot; )
                                    h = h.shadowRoot.activeElement;
                            if (i.isEditable(h))
                                return
                        }
                        var d = 0
                          , p = 0;
                        switch (c.which) {
                        case 37:
                            d = c.metaKey ? -e.contentWidth : c.altKey ? -e.containerWidth : -30;
                            break;
                        case 38:
                            p = c.metaKey ? e.contentHeight : c.altKey ? e.containerHeight : 30;
                            break;
                        case 39:
                            d = c.metaKey ? e.contentWidth : c.altKey ? e.containerWidth : 30;
                            break;
                        case 40:
                            p = c.metaKey ? -e.contentHeight : c.altKey ? -e.containerHeight : -30;
                            break;
                        case 33:
                            p = 90;
                            break;
                        case 32:
                            p = c.shiftKey ? 90 : -90;
                            break;
                        case 34:
                            p = -90;
                            break;
                        case 35:
                            p = c.ctrlKey ? -e.contentHeight : -e.containerHeight;
                            break;
                        case 36:
                            p = c.ctrlKey ? t.scrollTop : e.containerHeight;
                            break;
                        default:
                            return
                        }
                        l(t, "top", t.scrollTop - p),
                        l(t, "left", t.scrollLeft + d),
                        s(t),
                        (o = n(d, p)) && c.preventDefault()
                    }
                }
            })
        }
        var i = t("../../lib/helper")
          , a = t("../../lib/dom")
          , o = t("../instances")
          , s = t("../update-geometry")
          , l = t("../update-scroll");
        e.exports = function(t) {
            r(t, o.get(t))
        }
    }
    , {
        "../../lib/dom": 15,
        "../../lib/helper": 18,
        "../instances": 30,
        "../update-geometry": 31,
        "../update-scroll": 32
    }],
    25: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            function n(n, r) {
                var i = t.scrollTop;
                if (0 === n) {
                    if (!e.scrollbarYActive)
                        return !1;
                    if (0 === i && r > 0 || i >= e.contentHeight - e.containerHeight && r < 0)
                        return !e.settings.wheelPropagation
                }
                var a = t.scrollLeft;
                if (0 === r) {
                    if (!e.scrollbarXActive)
                        return !1;
                    if (0 === a && n < 0 || a >= e.contentWidth - e.containerWidth && n > 0)
                        return !e.settings.wheelPropagation
                }
                return !0
            }
            function r(t) {
                var e = t.deltaX
                  , n = -1 * t.deltaY;
                return void 0 !== e && void 0 !== n || (e = -1 * t.wheelDeltaX / 6,
                n = t.wheelDeltaY / 6),
                t.deltaMode && 1 === t.deltaMode && (e *= 10,
                n *= 10),
                e !== e && n !== n && (e = 0,
                n = t.wheelDelta),
                t.shiftKey ? [-n, -e] : [e, n]
            }
            function i(e, n) {
                var r = t.querySelector("textarea:hover, select[multiple]:hover, .ps-child:hover");
                if (r) {
                    var i = window.getComputedStyle(r);
                    if (![i.overflow, i.overflowX, i.overflowY].join("").match(/(scroll|auto)/))
                        return !1;
                    var a = r.scrollHeight - r.clientHeight;
                    if (a > 0 && !(0 === r.scrollTop && n > 0 || r.scrollTop === a && n < 0))
                        return !0;
                    var o = r.scrollLeft - r.clientWidth;
                    if (o > 0 && !(0 === r.scrollLeft && e < 0 || r.scrollLeft === o && e > 0))
                        return !0
                }
                return !1
            }
            function s(s) {
                var c = r(s)
                  , u = c[0]
                  , h = c[1];
                i(u, h) || (l = !1,
                e.settings.useBothWheelAxes ? e.scrollbarYActive && !e.scrollbarXActive ? (h ? o(t, "top", t.scrollTop - h * e.settings.wheelSpeed) : o(t, "top", t.scrollTop + u * e.settings.wheelSpeed),
                l = !0) : e.scrollbarXActive && !e.scrollbarYActive && (u ? o(t, "left", t.scrollLeft + u * e.settings.wheelSpeed) : o(t, "left", t.scrollLeft - h * e.settings.wheelSpeed),
                l = !0) : (o(t, "top", t.scrollTop - h * e.settings.wheelSpeed),
                o(t, "left", t.scrollLeft + u * e.settings.wheelSpeed)),
                a(t),
                (l = l || n(u, h)) && (s.stopPropagation(),
                s.preventDefault()))
            }
            var l = !1;
            void 0 !== window.onwheel ? e.event.bind(t, "wheel", s) : void 0 !== window.onmousewheel && e.event.bind(t, "mousewheel", s)
        }
        var i = t("../instances")
          , a = t("../update-geometry")
          , o = t("../update-scroll");
        e.exports = function(t) {
            r(t, i.get(t))
        }
    }
    , {
        "../instances": 30,
        "../update-geometry": 31,
        "../update-scroll": 32
    }],
    26: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            e.event.bind(t, "scroll", function() {
                a(t)
            })
        }
        var i = t("../instances")
          , a = t("../update-geometry");
        e.exports = function(t) {
            r(t, i.get(t))
        }
    }
    , {
        "../instances": 30,
        "../update-geometry": 31
    }],
    27: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            function n() {
                var t = window.getSelection ? window.getSelection() : document.getSelection ? document.getSelection() : "";
                return 0 === t.toString().length ? null : t.getRangeAt(0).commonAncestorContainer
            }
            function r() {
                c || (c = setInterval(function() {
                    a.get(t) ? (s(t, "top", t.scrollTop + u.top),
                    s(t, "left", t.scrollLeft + u.left),
                    o(t)) : clearInterval(c)
                }, 50))
            }
            function l() {
                c && (clearInterval(c),
                c = null),
                i.stopScrolling(t)
            }
            var c = null
              , u = {
                top: 0,
                left: 0
            }
              , h = !1;
            e.event.bind(e.ownerDocument, "selectionchange", function() {
                t.contains(n()) ? h = !0 : (h = !1,
                l())
            }),
            e.event.bind(window, "mouseup", function() {
                h && (h = !1,
                l())
            }),
            e.event.bind(window, "keyup", function() {
                h && (h = !1,
                l())
            }),
            e.event.bind(window, "mousemove", function(e) {
                if (h) {
                    var n = {
                        x: e.pageX,
                        y: e.pageY
                    }
                      , a = {
                        left: t.offsetLeft,
                        right: t.offsetLeft + t.offsetWidth,
                        top: t.offsetTop,
                        bottom: t.offsetTop + t.offsetHeight
                    };
                    n.x < a.left + 3 ? (u.left = -5,
                    i.startScrolling(t, "x")) : n.x > a.right - 3 ? (u.left = 5,
                    i.startScrolling(t, "x")) : u.left = 0,
                    n.y < a.top + 3 ? (u.top = a.top + 3 - n.y < 5 ? -5 : -20,
                    i.startScrolling(t, "y")) : n.y > a.bottom - 3 ? (u.top = n.y - a.bottom + 3 < 5 ? 5 : 20,
                    i.startScrolling(t, "y")) : u.top = 0,
                    0 === u.top && 0 === u.left ? l() : r()
                }
            })
        }
        var i = t("../../lib/helper")
          , a = t("../instances")
          , o = t("../update-geometry")
          , s = t("../update-scroll");
        e.exports = function(t) {
            r(t, a.get(t))
        }
    }
    , {
        "../../lib/helper": 18,
        "../instances": 30,
        "../update-geometry": 31,
        "../update-scroll": 32
    }],
    28: [function(t, e, n) {
        "use strict";
        function r(t, e, n, r) {
            function i(n, r) {
                var i = t.scrollTop
                  , a = t.scrollLeft
                  , o = Math.abs(n)
                  , s = Math.abs(r);
                if (s > o) {
                    if (r < 0 && i === e.contentHeight - e.containerHeight || r > 0 && 0 === i)
                        return !e.settings.swipePropagation
                } else if (o > s && (n < 0 && a === e.contentWidth - e.containerWidth || n > 0 && 0 === a))
                    return !e.settings.swipePropagation;
                return !0
            }
            function l(e, n) {
                s(t, "top", t.scrollTop - n),
                s(t, "left", t.scrollLeft - e),
                o(t)
            }
            function c() {
                b = !0
            }
            function u() {
                b = !1
            }
            function h(t) {
                return t.targetTouches ? t.targetTouches[0] : t
            }
            function d(t) {
                return (!t.pointerType || "pen" !== t.pointerType || 0 !== t.buttons) && (!(!t.targetTouches || 1 !== t.targetTouches.length) || !(!t.pointerType || "mouse" === t.pointerType || t.pointerType === t.MSPOINTER_TYPE_MOUSE))
            }
            function p(t) {
                if (d(t)) {
                    _ = !0;
                    var e = h(t);
                    v.pageX = e.pageX,
                    v.pageY = e.pageY,
                    g = (new Date).getTime(),
                    null !== x && clearInterval(x),
                    t.stopPropagation()
                }
            }
            function f(t) {
                if (!_ && e.settings.swipePropagation && p(t),
                !b && _ && d(t)) {
                    var n = h(t)
                      , r = {
                        pageX: n.pageX,
                        pageY: n.pageY
                    }
                      , a = r.pageX - v.pageX
                      , o = r.pageY - v.pageY;
                    l(a, o),
                    v = r;
                    var s = (new Date).getTime()
                      , c = s - g;
                    c > 0 && (y.x = a / c,
                    y.y = o / c,
                    g = s),
                    i(a, o) && (t.stopPropagation(),
                    t.preventDefault())
                }
            }
            function m() {
                !b && _ && (_ = !1,
                e.settings.swipeEasing && (clearInterval(x),
                x = setInterval(function() {
                    a.get(t) && (y.x || y.y) ? Math.abs(y.x) < .01 && Math.abs(y.y) < .01 ? clearInterval(x) : (l(30 * y.x, 30 * y.y),
                    y.x *= .8,
                    y.y *= .8) : clearInterval(x)
                }, 10)))
            }
            var v = {}
              , g = 0
              , y = {}
              , x = null
              , b = !1
              , _ = !1;
            n ? (e.event.bind(window, "touchstart", c),
            e.event.bind(window, "touchend", u),
            e.event.bind(t, "touchstart", p),
            e.event.bind(t, "touchmove", f),
            e.event.bind(t, "touchend", m)) : r && (window.PointerEvent ? (e.event.bind(window, "pointerdown", c),
            e.event.bind(window, "pointerup", u),
            e.event.bind(t, "pointerdown", p),
            e.event.bind(t, "pointermove", f),
            e.event.bind(t, "pointerup", m)) : window.MSPointerEvent && (e.event.bind(window, "MSPointerDown", c),
            e.event.bind(window, "MSPointerUp", u),
            e.event.bind(t, "MSPointerDown", p),
            e.event.bind(t, "MSPointerMove", f),
            e.event.bind(t, "MSPointerUp", m)))
        }
        var i = t("../../lib/helper")
          , a = t("../instances")
          , o = t("../update-geometry")
          , s = t("../update-scroll");
        e.exports = function(t) {
            (i.env.supportsTouch || i.env.supportsIePointer) && r(t, a.get(t), i.env.supportsTouch, i.env.supportsIePointer)
        }
    }
    , {
        "../../lib/helper": 18,
        "../instances": 30,
        "../update-geometry": 31,
        "../update-scroll": 32
    }],
    29: [function(t, e, n) {
        "use strict";
        var r = t("./instances")
          , i = t("./update-geometry")
          , a = {
            "click-rail": t("./handler/click-rail"),
            "drag-scrollbar": t("./handler/drag-scrollbar"),
            keyboard: t("./handler/keyboard"),
            wheel: t("./handler/mouse-wheel"),
            touch: t("./handler/touch"),
            selection: t("./handler/selection")
        }
          , o = t("./handler/native-scroll");
        e.exports = function(t, e) {
            t.classList.add("ps");
            var n = r.add(t, "object" == typeof e ? e : {});
            t.classList.add("ps--theme_" + n.settings.theme),
            n.settings.handlers.forEach(function(e) {
                a[e](t)
            }),
            o(t),
            i(t)
        }
    }
    , {
        "./handler/click-rail": 22,
        "./handler/drag-scrollbar": 23,
        "./handler/keyboard": 24,
        "./handler/mouse-wheel": 25,
        "./handler/native-scroll": 26,
        "./handler/selection": 27,
        "./handler/touch": 28,
        "./instances": 30,
        "./update-geometry": 31
    }],
    30: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            function n() {
                t.classList.add("ps--focus")
            }
            function r() {
                t.classList.remove("ps--focus")
            }
            var i = this;
            i.settings = l();
            for (var a in e)
                i.settings[a] = e[a];
            i.containerWidth = null,
            i.containerHeight = null,
            i.contentWidth = null,
            i.contentHeight = null,
            i.isRtl = "rtl" === c.css(t, "direction"),
            i.isNegativeScroll = function() {
                var e = t.scrollLeft
                  , n = null;
                return t.scrollLeft = -1,
                n = t.scrollLeft < 0,
                t.scrollLeft = e,
                n
            }(),
            i.negativeScrollAdjustment = i.isNegativeScroll ? t.scrollWidth - t.clientWidth : 0,
            i.event = new u,
            i.ownerDocument = t.ownerDocument || document,
            i.scrollbarXRail = c.appendTo(c.create("div", "ps__scrollbar-x-rail"), t),
            i.scrollbarX = c.appendTo(c.create("div", "ps__scrollbar-x"), i.scrollbarXRail),
            i.scrollbarX.setAttribute("tabindex", 0),
            i.event.bind(i.scrollbarX, "focus", n),
            i.event.bind(i.scrollbarX, "blur", r),
            i.scrollbarXActive = null,
            i.scrollbarXWidth = null,
            i.scrollbarXLeft = null,
            i.scrollbarXBottom = s.toInt(c.css(i.scrollbarXRail, "bottom")),
            i.isScrollbarXUsingBottom = i.scrollbarXBottom === i.scrollbarXBottom,
            i.scrollbarXTop = i.isScrollbarXUsingBottom ? null : s.toInt(c.css(i.scrollbarXRail, "top")),
            i.railBorderXWidth = s.toInt(c.css(i.scrollbarXRail, "borderLeftWidth")) + s.toInt(c.css(i.scrollbarXRail, "borderRightWidth")),
            c.css(i.scrollbarXRail, "display", "block"),
            i.railXMarginWidth = s.toInt(c.css(i.scrollbarXRail, "marginLeft")) + s.toInt(c.css(i.scrollbarXRail, "marginRight")),
            c.css(i.scrollbarXRail, "display", ""),
            i.railXWidth = null,
            i.railXRatio = null,
            i.scrollbarYRail = c.appendTo(c.create("div", "ps__scrollbar-y-rail"), t),
            i.scrollbarY = c.appendTo(c.create("div", "ps__scrollbar-y"), i.scrollbarYRail),
            i.scrollbarY.setAttribute("tabindex", 0),
            i.event.bind(i.scrollbarY, "focus", n),
            i.event.bind(i.scrollbarY, "blur", r),
            i.scrollbarYActive = null,
            i.scrollbarYHeight = null,
            i.scrollbarYTop = null,
            i.scrollbarYRight = s.toInt(c.css(i.scrollbarYRail, "right")),
            i.isScrollbarYUsingRight = i.scrollbarYRight === i.scrollbarYRight,
            i.scrollbarYLeft = i.isScrollbarYUsingRight ? null : s.toInt(c.css(i.scrollbarYRail, "left")),
            i.scrollbarYOuterWidth = i.isRtl ? s.outerWidth(i.scrollbarY) : null,
            i.railBorderYWidth = s.toInt(c.css(i.scrollbarYRail, "borderTopWidth")) + s.toInt(c.css(i.scrollbarYRail, "borderBottomWidth")),
            c.css(i.scrollbarYRail, "display", "block"),
            i.railYMarginHeight = s.toInt(c.css(i.scrollbarYRail, "marginTop")) + s.toInt(c.css(i.scrollbarYRail, "marginBottom")),
            c.css(i.scrollbarYRail, "display", ""),
            i.railYHeight = null,
            i.railYRatio = null
        }
        function i(t) {
            return t.getAttribute("data-ps-id")
        }
        function a(t, e) {
            t.setAttribute("data-ps-id", e)
        }
        function o(t) {
            t.removeAttribute("data-ps-id")
        }
        var s = t("../lib/helper")
          , l = t("./default-setting")
          , c = t("../lib/dom")
          , u = t("../lib/event-manager")
          , h = t("../lib/guid")
          , d = {};
        n.add = function(t, e) {
            var n = h();
            return a(t, n),
            d[n] = new r(t,e),
            d[n]
        }
        ,
        n.remove = function(t) {
            delete d[i(t)],
            o(t)
        }
        ,
        n.get = function(t) {
            return d[i(t)]
        }
    }
    , {
        "../lib/dom": 15,
        "../lib/event-manager": 16,
        "../lib/guid": 17,
        "../lib/helper": 18,
        "./default-setting": 20
    }],
    31: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            return t.settings.minScrollbarLength && (e = Math.max(e, t.settings.minScrollbarLength)),
            t.settings.maxScrollbarLength && (e = Math.min(e, t.settings.maxScrollbarLength)),
            e
        }
        function i(t, e) {
            var n = {
                width: e.railXWidth
            };
            e.isRtl ? n.left = e.negativeScrollAdjustment + t.scrollLeft + e.containerWidth - e.contentWidth : n.left = t.scrollLeft,
            e.isScrollbarXUsingBottom ? n.bottom = e.scrollbarXBottom - t.scrollTop : n.top = e.scrollbarXTop + t.scrollTop,
            o.css(e.scrollbarXRail, n);
            var r = {
                top: t.scrollTop,
                height: e.railYHeight
            };
            e.isScrollbarYUsingRight ? e.isRtl ? r.right = e.contentWidth - (e.negativeScrollAdjustment + t.scrollLeft) - e.scrollbarYRight - e.scrollbarYOuterWidth : r.right = e.scrollbarYRight - t.scrollLeft : e.isRtl ? r.left = e.negativeScrollAdjustment + t.scrollLeft + 2 * e.containerWidth - e.contentWidth - e.scrollbarYLeft - e.scrollbarYOuterWidth : r.left = e.scrollbarYLeft + t.scrollLeft,
            o.css(e.scrollbarYRail, r),
            o.css(e.scrollbarX, {
                left: e.scrollbarXLeft,
                width: e.scrollbarXWidth - e.railBorderXWidth
            }),
            o.css(e.scrollbarY, {
                top: e.scrollbarYTop,
                height: e.scrollbarYHeight - e.railBorderYWidth
            })
        }
        var a = t("../lib/helper")
          , o = t("../lib/dom")
          , s = t("./instances")
          , l = t("./update-scroll");
        e.exports = function(t) {
            var e = s.get(t);
            e.containerWidth = t.clientWidth,
            e.containerHeight = t.clientHeight,
            e.contentWidth = t.scrollWidth,
            e.contentHeight = t.scrollHeight;
            var n;
            t.contains(e.scrollbarXRail) || ((n = o.queryChildren(t, ".ps__scrollbar-x-rail")).length > 0 && n.forEach(function(t) {
                o.remove(t)
            }),
            o.appendTo(e.scrollbarXRail, t)),
            t.contains(e.scrollbarYRail) || ((n = o.queryChildren(t, ".ps__scrollbar-y-rail")).length > 0 && n.forEach(function(t) {
                o.remove(t)
            }),
            o.appendTo(e.scrollbarYRail, t)),
            !e.settings.suppressScrollX && e.containerWidth + e.settings.scrollXMarginOffset < e.contentWidth ? (e.scrollbarXActive = !0,
            e.railXWidth = e.containerWidth - e.railXMarginWidth,
            e.railXRatio = e.containerWidth / e.railXWidth,
            e.scrollbarXWidth = r(e, a.toInt(e.railXWidth * e.containerWidth / e.contentWidth)),
            e.scrollbarXLeft = a.toInt((e.negativeScrollAdjustment + t.scrollLeft) * (e.railXWidth - e.scrollbarXWidth) / (e.contentWidth - e.containerWidth))) : e.scrollbarXActive = !1,
            !e.settings.suppressScrollY && e.containerHeight + e.settings.scrollYMarginOffset < e.contentHeight ? (e.scrollbarYActive = !0,
            e.railYHeight = e.containerHeight - e.railYMarginHeight,
            e.railYRatio = e.containerHeight / e.railYHeight,
            e.scrollbarYHeight = r(e, a.toInt(e.railYHeight * e.containerHeight / e.contentHeight)),
            e.scrollbarYTop = a.toInt(t.scrollTop * (e.railYHeight - e.scrollbarYHeight) / (e.contentHeight - e.containerHeight))) : e.scrollbarYActive = !1,
            e.scrollbarXLeft >= e.railXWidth - e.scrollbarXWidth && (e.scrollbarXLeft = e.railXWidth - e.scrollbarXWidth),
            e.scrollbarYTop >= e.railYHeight - e.scrollbarYHeight && (e.scrollbarYTop = e.railYHeight - e.scrollbarYHeight),
            i(t, e),
            e.scrollbarXActive ? t.classList.add("ps--active-x") : (t.classList.remove("ps--active-x"),
            e.scrollbarXWidth = 0,
            e.scrollbarXLeft = 0,
            l(t, "left", 0)),
            e.scrollbarYActive ? t.classList.add("ps--active-y") : (t.classList.remove("ps--active-y"),
            e.scrollbarYHeight = 0,
            e.scrollbarYTop = 0,
            l(t, "top", 0))
        }
    }
    , {
        "../lib/dom": 15,
        "../lib/helper": 18,
        "./instances": 30,
        "./update-scroll": 32
    }],
    32: [function(t, e, n) {
        "use strict";
        var r = t("./instances")
          , i = function(t) {
            var e = document.createEvent("Event");
            return e.initEvent(t, !0, !0),
            e
        };
        e.exports = function(t, e, n) {
            if (void 0 === t)
                throw "You must provide an element to the update-scroll function";
            if (void 0 === e)
                throw "You must provide an axis to the update-scroll function";
            if (void 0 === n)
                throw "You must provide a value to the update-scroll function";
            "top" === e && n <= 0 && (t.scrollTop = n = 0,
            t.dispatchEvent(i("ps-y-reach-start"))),
            "left" === e && n <= 0 && (t.scrollLeft = n = 0,
            t.dispatchEvent(i("ps-x-reach-start")));
            var a = r.get(t);
            "top" === e && n >= a.contentHeight - a.containerHeight && ((n = a.contentHeight - a.containerHeight) - t.scrollTop <= 2 ? n = t.scrollTop : t.scrollTop = n,
            t.dispatchEvent(i("ps-y-reach-end"))),
            "left" === e && n >= a.contentWidth - a.containerWidth && ((n = a.contentWidth - a.containerWidth) - t.scrollLeft <= 2 ? n = t.scrollLeft : t.scrollLeft = n,
            t.dispatchEvent(i("ps-x-reach-end"))),
            void 0 === a.lastTop && (a.lastTop = t.scrollTop),
            void 0 === a.lastLeft && (a.lastLeft = t.scrollLeft),
            "top" === e && n < a.lastTop && t.dispatchEvent(i("ps-scroll-up")),
            "top" === e && n > a.lastTop && t.dispatchEvent(i("ps-scroll-down")),
            "left" === e && n < a.lastLeft && t.dispatchEvent(i("ps-scroll-left")),
            "left" === e && n > a.lastLeft && t.dispatchEvent(i("ps-scroll-right")),
            "top" === e && n !== a.lastTop && (t.scrollTop = a.lastTop = n,
            t.dispatchEvent(i("ps-scroll-y"))),
            "left" === e && n !== a.lastLeft && (t.scrollLeft = a.lastLeft = n,
            t.dispatchEvent(i("ps-scroll-x")))
        }
    }
    , {
        "./instances": 30
    }],
    33: [function(t, e, n) {
        "use strict";
        var r = t("../lib/helper")
          , i = t("../lib/dom")
          , a = t("./instances")
          , o = t("./update-geometry")
          , s = t("./update-scroll");
        e.exports = function(t) {
            var e = a.get(t);
            e && (e.negativeScrollAdjustment = e.isNegativeScroll ? t.scrollWidth - t.clientWidth : 0,
            i.css(e.scrollbarXRail, "display", "block"),
            i.css(e.scrollbarYRail, "display", "block"),
            e.railXMarginWidth = r.toInt(i.css(e.scrollbarXRail, "marginLeft")) + r.toInt(i.css(e.scrollbarXRail, "marginRight")),
            e.railYMarginHeight = r.toInt(i.css(e.scrollbarYRail, "marginTop")) + r.toInt(i.css(e.scrollbarYRail, "marginBottom")),
            i.css(e.scrollbarXRail, "display", "none"),
            i.css(e.scrollbarYRail, "display", "none"),
            o(t),
            s(t, "top", t.scrollTop),
            s(t, "left", t.scrollLeft),
            i.css(e.scrollbarXRail, "display", ""),
            i.css(e.scrollbarYRail, "display", ""))
        }
    }
    , {
        "../lib/dom": 15,
        "../lib/helper": 18,
        "./instances": 30,
        "./update-geometry": 31,
        "./update-scroll": 32
    }],
    34: [function(t, e, n) {
        !function(t, r) {
            "object" == typeof n && void 0 !== e ? r(n) : "function" == typeof define && define.amd ? define(["exports"], r) : r(t.THREE = t.THREE || {})
        }(this, function(t) {
            "use strict";
            function e() {}
            function n(t, e) {
                this.x = t || 0,
                this.y = e || 0
            }
            function r(t, e, i, a, o, s, l, c, u, h) {
                Object.defineProperty(this, "id", {
                    value: Vo++
                }),
                this.uuid = Go.generateUUID(),
                this.name = "",
                this.image = void 0 !== t ? t : r.DEFAULT_IMAGE,
                this.mipmaps = [],
                this.mapping = void 0 !== e ? e : r.DEFAULT_MAPPING,
                this.wrapS = void 0 !== i ? i : Wa,
                this.wrapT = void 0 !== a ? a : Wa,
                this.magFilter = void 0 !== o ? o : Za,
                this.minFilter = void 0 !== s ? s : Ka,
                this.anisotropy = void 0 !== u ? u : 1,
                this.format = void 0 !== l ? l : fo,
                this.type = void 0 !== c ? c : Qa,
                this.offset = new n(0,0),
                this.repeat = new n(1,1),
                this.generateMipmaps = !0,
                this.premultiplyAlpha = !1,
                this.flipY = !0,
                this.unpackAlignment = 4,
                this.encoding = void 0 !== h ? h : No,
                this.version = 0,
                this.onUpdate = null
            }
            function i(t, e, n, r) {
                this.x = t || 0,
                this.y = e || 0,
                this.z = n || 0,
                this.w = void 0 !== r ? r : 1
            }
            function a(t, e, n) {
                this.uuid = Go.generateUUID(),
                this.width = t,
                this.height = e,
                this.scissor = new i(0,0,t,e),
                this.scissorTest = !1,
                this.viewport = new i(0,0,t,e),
                void 0 === (n = n || {}).minFilter && (n.minFilter = Za),
                this.texture = new r(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),
                this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer,
                this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer,
                this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null
            }
            function o(t, e, n) {
                a.call(this, t, e, n),
                this.activeCubeFace = 0,
                this.activeMipMapLevel = 0
            }
            function s(t, e, n, r) {
                this._x = t || 0,
                this._y = e || 0,
                this._z = n || 0,
                this._w = void 0 !== r ? r : 1
            }
            function l(t, e, n) {
                this.x = t || 0,
                this.y = e || 0,
                this.z = n || 0
            }
            function c() {
                this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
            }
            function u(t, e, n, i, a, o, s, l, c, u, h, d) {
                r.call(this, null, o, s, l, c, u, i, a, h, d),
                this.image = {
                    data: t,
                    width: e,
                    height: n
                },
                this.magFilter = void 0 !== c ? c : qa,
                this.minFilter = void 0 !== u ? u : qa,
                this.generateMipmaps = !1,
                this.flipY = !1,
                this.unpackAlignment = 1
            }
            function h(t, e, n, i, a, o, s, l, c, u) {
                t = void 0 !== t ? t : [],
                e = void 0 !== e ? e : ka,
                r.call(this, t, e, n, i, a, o, s, l, c, u),
                this.flipY = !1
            }
            function d() {
                this.seq = [],
                this.map = {}
            }
            function p(t, e, n) {
                var r = t[0];
                if (r <= 0 || r > 0)
                    return t;
                var i = e * n
                  , a = qo[i];
                if (void 0 === a && (a = new Float32Array(i),
                qo[i] = a),
                0 !== e) {
                    r.toArray(a, 0);
                    for (var o = 1, s = 0; o !== e; ++o)
                        s += n,
                        t[o].toArray(a, s)
                }
                return a
            }
            function f(t, e) {
                var n = Yo[e];
                void 0 === n && (n = new Int32Array(e),
                Yo[e] = n);
                for (var r = 0; r !== e; ++r)
                    n[r] = t.allocTextureUnit();
                return n
            }
            function m(t, e) {
                t.uniform1f(this.addr, e)
            }
            function v(t, e) {
                t.uniform1i(this.addr, e)
            }
            function g(t, e) {
                void 0 === e.x ? t.uniform2fv(this.addr, e) : t.uniform2f(this.addr, e.x, e.y)
            }
            function y(t, e) {
                void 0 !== e.x ? t.uniform3f(this.addr, e.x, e.y, e.z) : void 0 !== e.r ? t.uniform3f(this.addr, e.r, e.g, e.b) : t.uniform3fv(this.addr, e)
            }
            function x(t, e) {
                void 0 === e.x ? t.uniform4fv(this.addr, e) : t.uniform4f(this.addr, e.x, e.y, e.z, e.w)
            }
            function b(t, e) {
                t.uniformMatrix2fv(this.addr, !1, e.elements || e)
            }
            function _(t, e) {
                void 0 === e.elements ? t.uniformMatrix3fv(this.addr, !1, e) : (Zo.set(e.elements),
                t.uniformMatrix3fv(this.addr, !1, Zo))
            }
            function w(t, e) {
                void 0 === e.elements ? t.uniformMatrix4fv(this.addr, !1, e) : ($o.set(e.elements),
                t.uniformMatrix4fv(this.addr, !1, $o))
            }
            function M(t, e, n) {
                var r = n.allocTextureUnit();
                t.uniform1i(this.addr, r),
                n.setTexture2D(e || Wo, r)
            }
            function E(t, e, n) {
                var r = n.allocTextureUnit();
                t.uniform1i(this.addr, r),
                n.setTextureCube(e || Xo, r)
            }
            function T(t, e) {
                t.uniform2iv(this.addr, e)
            }
            function S(t, e) {
                t.uniform3iv(this.addr, e)
            }
            function A(t, e) {
                t.uniform4iv(this.addr, e)
            }
            function L(t) {
                switch (t) {
                case 5126:
                    return m;
                case 35664:
                    return g;
                case 35665:
                    return y;
                case 35666:
                    return x;
                case 35674:
                    return b;
                case 35675:
                    return _;
                case 35676:
                    return w;
                case 35678:
                case 36198:
                    return M;
                case 35680:
                    return E;
                case 5124:
                case 35670:
                    return v;
                case 35667:
                case 35671:
                    return T;
                case 35668:
                case 35672:
                    return S;
                case 35669:
                case 35673:
                    return A
                }
            }
            function R(t, e) {
                t.uniform1fv(this.addr, e)
            }
            function P(t, e) {
                t.uniform1iv(this.addr, e)
            }
            function C(t, e) {
                t.uniform2fv(this.addr, p(e, this.size, 2))
            }
            function I(t, e) {
                t.uniform3fv(this.addr, p(e, this.size, 3))
            }
            function O(t, e) {
                t.uniform4fv(this.addr, p(e, this.size, 4))
            }
            function N(t, e) {
                t.uniformMatrix2fv(this.addr, !1, p(e, this.size, 4))
            }
            function D(t, e) {
                t.uniformMatrix3fv(this.addr, !1, p(e, this.size, 9))
            }
            function U(t, e) {
                t.uniformMatrix4fv(this.addr, !1, p(e, this.size, 16))
            }
            function k(t, e, n) {
                var r = e.length
                  , i = f(n, r);
                t.uniform1iv(this.addr, i);
                for (var a = 0; a !== r; ++a)
                    n.setTexture2D(e[a] || Wo, i[a])
            }
            function B(t, e, n) {
                var r = e.length
                  , i = f(n, r);
                t.uniform1iv(this.addr, i);
                for (var a = 0; a !== r; ++a)
                    n.setTextureCube(e[a] || Xo, i[a])
            }
            function F(t) {
                switch (t) {
                case 5126:
                    return R;
                case 35664:
                    return C;
                case 35665:
                    return I;
                case 35666:
                    return O;
                case 35674:
                    return N;
                case 35675:
                    return D;
                case 35676:
                    return U;
                case 35678:
                    return k;
                case 35680:
                    return B;
                case 5124:
                case 35670:
                    return P;
                case 35667:
                case 35671:
                    return T;
                case 35668:
                case 35672:
                    return S;
                case 35669:
                case 35673:
                    return A
                }
            }
            function z(t, e, n) {
                this.id = t,
                this.addr = n,
                this.setValue = L(e.type)
            }
            function j(t, e, n) {
                this.id = t,
                this.addr = n,
                this.size = e.size,
                this.setValue = F(e.type)
            }
            function H(t) {
                this.id = t,
                d.call(this)
            }
            function G(t, e) {
                t.seq.push(e),
                t.map[e.id] = e
            }
            function V(t, e, n) {
                var r = t.name
                  , i = r.length;
                for (Jo.lastIndex = 0; ; ) {
                    var a = Jo.exec(r)
                      , o = Jo.lastIndex
                      , s = a[1]
                      , l = "]" === a[2]
                      , c = a[3];
                    if (l && (s |= 0),
                    void 0 === c || "[" === c && o + 2 === i) {
                        G(n, void 0 === c ? new z(s,t,e) : new j(s,t,e));
                        break
                    }
                    var u = n.map[s];
                    void 0 === u && G(n, u = new H(s)),
                    n = u
                }
            }
            function W(t, e, n) {
                d.call(this),
                this.renderer = n;
                for (var r = t.getProgramParameter(e, t.ACTIVE_UNIFORMS), i = 0; i < r; ++i) {
                    var a = t.getActiveUniform(e, i)
                      , o = a.name;
                    V(a, t.getUniformLocation(e, o), this)
                }
            }
            function X(t, e, n) {
                return void 0 === e && void 0 === n ? this.set(t) : this.setRGB(t, e, n)
            }
            function q(t, e) {
                this.min = void 0 !== t ? t : new n(1 / 0,1 / 0),
                this.max = void 0 !== e ? e : new n(-1 / 0,-1 / 0)
            }
            function Y(t, e, r, i, a) {
                function o() {
                    var t = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1])
                      , n = new Uint16Array([0, 1, 2, 0, 2, 3]);
                    c = e.createBuffer(),
                    u = e.createBuffer(),
                    e.bindBuffer(e.ARRAY_BUFFER, c),
                    e.bufferData(e.ARRAY_BUFFER, t, e.STATIC_DRAW),
                    e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, u),
                    e.bufferData(e.ELEMENT_ARRAY_BUFFER, n, e.STATIC_DRAW),
                    m = e.createTexture(),
                    v = e.createTexture(),
                    r.bindTexture(e.TEXTURE_2D, m),
                    e.texImage2D(e.TEXTURE_2D, 0, e.RGB, 16, 16, 0, e.RGB, e.UNSIGNED_BYTE, null),
                    e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
                    e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE),
                    e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, e.NEAREST),
                    e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.NEAREST),
                    r.bindTexture(e.TEXTURE_2D, v),
                    e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, 16, 16, 0, e.RGBA, e.UNSIGNED_BYTE, null),
                    e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
                    e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE),
                    e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, e.NEAREST),
                    e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.NEAREST),
                    h = {
                        vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if ( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                        fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if ( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if ( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
                    },
                    d = s(h),
                    p = {
                        vertex: e.getAttribLocation(d, "position"),
                        uv: e.getAttribLocation(d, "uv")
                    },
                    f = {
                        renderType: e.getUniformLocation(d, "renderType"),
                        map: e.getUniformLocation(d, "map"),
                        occlusionMap: e.getUniformLocation(d, "occlusionMap"),
                        opacity: e.getUniformLocation(d, "opacity"),
                        color: e.getUniformLocation(d, "color"),
                        scale: e.getUniformLocation(d, "scale"),
                        rotation: e.getUniformLocation(d, "rotation"),
                        screenPosition: e.getUniformLocation(d, "screenPosition")
                    }
                }
                function s(t) {
                    var n = e.createProgram()
                      , r = e.createShader(e.FRAGMENT_SHADER)
                      , i = e.createShader(e.VERTEX_SHADER)
                      , o = "precision " + a.precision + " float;\n";
                    return e.shaderSource(r, o + t.fragmentShader),
                    e.shaderSource(i, o + t.vertexShader),
                    e.compileShader(r),
                    e.compileShader(i),
                    e.attachShader(n, r),
                    e.attachShader(n, i),
                    e.linkProgram(n),
                    n
                }
                var c, u, h, d, p, f, m, v;
                this.render = function(t, a, s, h) {
                    if (0 !== t.length) {
                        var g = new l
                          , y = h.w / h.z
                          , x = .5 * h.z
                          , b = .5 * h.w
                          , _ = 16 / h.w
                          , w = new n(_ * y,_)
                          , M = new l(1,1,0)
                          , E = new n(1,1)
                          , T = new q;
                        T.min.set(h.x, h.y),
                        T.max.set(h.x + (h.z - 16), h.y + (h.w - 16)),
                        void 0 === d && o(),
                        r.useProgram(d),
                        r.initAttributes(),
                        r.enableAttribute(p.vertex),
                        r.enableAttribute(p.uv),
                        r.disableUnusedAttributes(),
                        e.uniform1i(f.occlusionMap, 0),
                        e.uniform1i(f.map, 1),
                        e.bindBuffer(e.ARRAY_BUFFER, c),
                        e.vertexAttribPointer(p.vertex, 2, e.FLOAT, !1, 16, 0),
                        e.vertexAttribPointer(p.uv, 2, e.FLOAT, !1, 16, 8),
                        e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, u),
                        r.disable(e.CULL_FACE),
                        r.buffers.depth.setMask(!1);
                        for (var S = 0, A = t.length; S < A; S++) {
                            _ = 16 / h.w,
                            w.set(_ * y, _);
                            var L = t[S];
                            if (g.set(L.matrixWorld.elements[12], L.matrixWorld.elements[13], L.matrixWorld.elements[14]),
                            g.applyMatrix4(s.matrixWorldInverse),
                            g.applyMatrix4(s.projectionMatrix),
                            M.copy(g),
                            E.x = h.x + M.x * x + x - 8,
                            E.y = h.y + M.y * b + b - 8,
                            !0 === T.containsPoint(E)) {
                                r.activeTexture(e.TEXTURE0),
                                r.bindTexture(e.TEXTURE_2D, null),
                                r.activeTexture(e.TEXTURE1),
                                r.bindTexture(e.TEXTURE_2D, m),
                                e.copyTexImage2D(e.TEXTURE_2D, 0, e.RGB, E.x, E.y, 16, 16, 0),
                                e.uniform1i(f.renderType, 0),
                                e.uniform2f(f.scale, w.x, w.y),
                                e.uniform3f(f.screenPosition, M.x, M.y, M.z),
                                r.disable(e.BLEND),
                                r.enable(e.DEPTH_TEST),
                                e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0),
                                r.activeTexture(e.TEXTURE0),
                                r.bindTexture(e.TEXTURE_2D, v),
                                e.copyTexImage2D(e.TEXTURE_2D, 0, e.RGBA, E.x, E.y, 16, 16, 0),
                                e.uniform1i(f.renderType, 1),
                                r.disable(e.DEPTH_TEST),
                                r.activeTexture(e.TEXTURE1),
                                r.bindTexture(e.TEXTURE_2D, m),
                                e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0),
                                L.positionScreen.copy(M),
                                L.customUpdateCallback ? L.customUpdateCallback(L) : L.updateLensFlares(),
                                e.uniform1i(f.renderType, 2),
                                r.enable(e.BLEND);
                                for (var R = 0, P = L.lensFlares.length; R < P; R++) {
                                    var C = L.lensFlares[R];
                                    C.opacity > .001 && C.scale > .001 && (M.x = C.x,
                                    M.y = C.y,
                                    M.z = C.z,
                                    _ = C.size * C.scale / h.w,
                                    w.x = _ * y,
                                    w.y = _,
                                    e.uniform3f(f.screenPosition, M.x, M.y, M.z),
                                    e.uniform2f(f.scale, w.x, w.y),
                                    e.uniform1f(f.rotation, C.rotation),
                                    e.uniform1f(f.opacity, C.opacity),
                                    e.uniform3f(f.color, C.color.r, C.color.g, C.color.b),
                                    r.setBlending(C.blending, C.blendEquation, C.blendSrc, C.blendDst),
                                    i.setTexture2D(C.texture, 1),
                                    e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0))
                                }
                            }
                        }
                        r.enable(e.CULL_FACE),
                        r.enable(e.DEPTH_TEST),
                        r.buffers.depth.setMask(!0),
                        r.reset()
                    }
                }
            }
            function $(t, e, n, i, a, o, s, l, c) {
                r.call(this, t, e, n, i, a, o, s, l, c),
                this.needsUpdate = !0
            }
            function Z(t, e, n, r, i) {
                function a() {
                    var t = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1])
                      , n = new Uint16Array([0, 1, 2, 0, 2, 3]);
                    u = e.createBuffer(),
                    h = e.createBuffer(),
                    e.bindBuffer(e.ARRAY_BUFFER, u),
                    e.bufferData(e.ARRAY_BUFFER, t, e.STATIC_DRAW),
                    e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, h),
                    e.bufferData(e.ELEMENT_ARRAY_BUFFER, n, e.STATIC_DRAW),
                    d = o(),
                    p = {
                        position: e.getAttribLocation(d, "position"),
                        uv: e.getAttribLocation(d, "uv")
                    },
                    f = {
                        uvOffset: e.getUniformLocation(d, "uvOffset"),
                        uvScale: e.getUniformLocation(d, "uvScale"),
                        rotation: e.getUniformLocation(d, "rotation"),
                        scale: e.getUniformLocation(d, "scale"),
                        color: e.getUniformLocation(d, "color"),
                        map: e.getUniformLocation(d, "map"),
                        opacity: e.getUniformLocation(d, "opacity"),
                        modelViewMatrix: e.getUniformLocation(d, "modelViewMatrix"),
                        projectionMatrix: e.getUniformLocation(d, "projectionMatrix"),
                        fogType: e.getUniformLocation(d, "fogType"),
                        fogDensity: e.getUniformLocation(d, "fogDensity"),
                        fogNear: e.getUniformLocation(d, "fogNear"),
                        fogFar: e.getUniformLocation(d, "fogFar"),
                        fogColor: e.getUniformLocation(d, "fogColor"),
                        alphaTest: e.getUniformLocation(d, "alphaTest")
                    };
                    var r = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                    r.width = 8,
                    r.height = 8;
                    var i = r.getContext("2d");
                    i.fillStyle = "white",
                    i.fillRect(0, 0, 8, 8),
                    m = new $(r)
                }
                function o() {
                    var t = e.createProgram()
                      , n = e.createShader(e.VERTEX_SHADER)
                      , r = e.createShader(e.FRAGMENT_SHADER);
                    return e.shaderSource(n, ["precision " + i.precision + " float;", "#define SHADER_NAME SpriteMaterial", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n")),
                    e.shaderSource(r, ["precision " + i.precision + " float;", "#define SHADER_NAME SpriteMaterial", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")),
                    e.compileShader(n),
                    e.compileShader(r),
                    e.attachShader(t, n),
                    e.attachShader(t, r),
                    e.linkProgram(t),
                    t
                }
                function c(t, e) {
                    return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : e.id - t.id
                }
                var u, h, d, p, f, m, v = new l, g = new s, y = new l;
                this.render = function(i, o, s) {
                    if (0 !== i.length) {
                        void 0 === d && a(),
                        n.useProgram(d),
                        n.initAttributes(),
                        n.enableAttribute(p.position),
                        n.enableAttribute(p.uv),
                        n.disableUnusedAttributes(),
                        n.disable(e.CULL_FACE),
                        n.enable(e.BLEND),
                        e.bindBuffer(e.ARRAY_BUFFER, u),
                        e.vertexAttribPointer(p.position, 2, e.FLOAT, !1, 16, 0),
                        e.vertexAttribPointer(p.uv, 2, e.FLOAT, !1, 16, 8),
                        e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, h),
                        e.uniformMatrix4fv(f.projectionMatrix, !1, s.projectionMatrix.elements),
                        n.activeTexture(e.TEXTURE0),
                        e.uniform1i(f.map, 0);
                        var l = 0
                          , x = 0
                          , b = o.fog;
                        b ? (e.uniform3f(f.fogColor, b.color.r, b.color.g, b.color.b),
                        b.isFog ? (e.uniform1f(f.fogNear, b.near),
                        e.uniform1f(f.fogFar, b.far),
                        e.uniform1i(f.fogType, 1),
                        l = 1,
                        x = 1) : b.isFogExp2 && (e.uniform1f(f.fogDensity, b.density),
                        e.uniform1i(f.fogType, 2),
                        l = 2,
                        x = 2)) : (e.uniform1i(f.fogType, 0),
                        l = 0,
                        x = 0);
                        for (var _ = 0, w = i.length; _ < w; _++)
                            (E = i[_]).modelViewMatrix.multiplyMatrices(s.matrixWorldInverse, E.matrixWorld),
                            E.z = -E.modelViewMatrix.elements[14];
                        i.sort(c);
                        for (var M = [], _ = 0, w = i.length; _ < w; _++) {
                            var E = i[_]
                              , T = E.material;
                            if (!1 !== T.visible) {
                                E.onBeforeRender(t, o, s, void 0, T, void 0),
                                e.uniform1f(f.alphaTest, T.alphaTest),
                                e.uniformMatrix4fv(f.modelViewMatrix, !1, E.modelViewMatrix.elements),
                                E.matrixWorld.decompose(v, g, y),
                                M[0] = y.x,
                                M[1] = y.y;
                                var S = 0;
                                o.fog && T.fog && (S = x),
                                l !== S && (e.uniform1i(f.fogType, S),
                                l = S),
                                null !== T.map ? (e.uniform2f(f.uvOffset, T.map.offset.x, T.map.offset.y),
                                e.uniform2f(f.uvScale, T.map.repeat.x, T.map.repeat.y)) : (e.uniform2f(f.uvOffset, 0, 0),
                                e.uniform2f(f.uvScale, 1, 1)),
                                e.uniform1f(f.opacity, T.opacity),
                                e.uniform3f(f.color, T.color.r, T.color.g, T.color.b),
                                e.uniform1f(f.rotation, T.rotation),
                                e.uniform2fv(f.scale, M),
                                n.setBlending(T.blending, T.blendEquation, T.blendSrc, T.blendDst, T.blendEquationAlpha, T.blendSrcAlpha, T.blendDstAlpha, T.premultipliedAlpha),
                                n.buffers.depth.setTest(T.depthTest),
                                n.buffers.depth.setMask(T.depthWrite),
                                r.setTexture2D(T.map || m, 0),
                                e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0),
                                E.onAfterRender(t, o, s, void 0, T, void 0)
                            }
                        }
                        n.enable(e.CULL_FACE),
                        n.reset()
                    }
                }
            }
            function J() {
                Object.defineProperty(this, "id", {
                    value: rs++
                }),
                this.uuid = Go.generateUUID(),
                this.name = "",
                this.type = "Material",
                this.fog = !0,
                this.lights = !0,
                this.blending = ta,
                this.side = qi,
                this.flatShading = !1,
                this.vertexColors = Zi,
                this.opacity = 1,
                this.transparent = !1,
                this.blendSrc = fa,
                this.blendDst = ma,
                this.blendEquation = aa,
                this.blendSrcAlpha = null,
                this.blendDstAlpha = null,
                this.blendEquationAlpha = null,
                this.depthFunc = Ea,
                this.depthTest = !0,
                this.depthWrite = !0,
                this.clippingPlanes = null,
                this.clipIntersection = !1,
                this.clipShadows = !1,
                this.colorWrite = !0,
                this.precision = null,
                this.polygonOffset = !1,
                this.polygonOffsetFactor = 0,
                this.polygonOffsetUnits = 0,
                this.dithering = !1,
                this.alphaTest = 0,
                this.premultipliedAlpha = !1,
                this.overdraw = 0,
                this.visible = !0,
                this.userData = {},
                this.needsUpdate = !0
            }
            function K(t) {
                J.call(this),
                this.type = "ShaderMaterial",
                this.defines = {},
                this.uniforms = {},
                this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
                this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
                this.linewidth = 1,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.lights = !1,
                this.clipping = !1,
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.extensions = {
                    derivatives: !1,
                    fragDepth: !1,
                    drawBuffers: !1,
                    shaderTextureLOD: !1
                },
                this.defaultAttributeValues = {
                    color: [1, 1, 1],
                    uv: [0, 0],
                    uv2: [0, 0]
                },
                this.index0AttributeName = void 0,
                void 0 !== t && (void 0 !== t.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),
                this.setValues(t))
            }
            function Q(t) {
                J.call(this),
                this.type = "MeshDepthMaterial",
                this.depthPacking = jo,
                this.skinning = !1,
                this.morphTargets = !1,
                this.map = null,
                this.alphaMap = null,
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.lights = !1,
                this.setValues(t)
            }
            function tt(t) {
                J.call(this),
                this.type = "MeshDistanceMaterial",
                this.referencePosition = new l,
                this.nearDistance = 1,
                this.farDistance = 1e3,
                this.skinning = !1,
                this.morphTargets = !1,
                this.map = null,
                this.alphaMap = null,
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.fog = !1,
                this.lights = !1,
                this.setValues(t)
            }
            function et(t, e) {
                this.min = void 0 !== t ? t : new l(1 / 0,1 / 0,1 / 0),
                this.max = void 0 !== e ? e : new l(-1 / 0,-1 / 0,-1 / 0)
            }
            function nt(t, e) {
                this.center = void 0 !== t ? t : new l,
                this.radius = void 0 !== e ? e : 0
            }
            function rt() {
                this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1],
                arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
            }
            function it(t, e) {
                this.normal = void 0 !== t ? t : new l(1,0,0),
                this.constant = void 0 !== e ? e : 0
            }
            function at(t, e, n, r, i, a) {
                this.planes = [void 0 !== t ? t : new it, void 0 !== e ? e : new it, void 0 !== n ? n : new it, void 0 !== r ? r : new it, void 0 !== i ? i : new it, void 0 !== a ? a : new it]
            }
            function ot(t, e, r) {
                function o(e, n, r, i, a, o) {
                    var s = e.geometry
                      , l = null
                      , c = x
                      , u = e.customDepthMaterial;
                    if (r && (c = b,
                    u = e.customDistanceMaterial),
                    u)
                        l = u;
                    else {
                        var h = !1;
                        n.morphTargets && (s && s.isBufferGeometry ? h = s.morphAttributes && s.morphAttributes.position && s.morphAttributes.position.length > 0 : s && s.isGeometry && (h = s.morphTargets && s.morphTargets.length > 0)),
                        e.isSkinnedMesh && !1 === n.skinning && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", e);
                        var d = e.isSkinnedMesh && n.skinning
                          , p = 0;
                        h && (p |= v),
                        d && (p |= g),
                        l = c[p]
                    }
                    if (t.localClippingEnabled && !0 === n.clipShadows && 0 !== n.clippingPlanes.length) {
                        var f = l.uuid
                          , m = n.uuid
                          , y = _[f];
                        void 0 === y && (y = {},
                        _[f] = y);
                        var w = y[m];
                        void 0 === w && (w = l.clone(),
                        y[m] = w),
                        l = w
                    }
                    l.visible = n.visible,
                    l.wireframe = n.wireframe;
                    var M = n.side;
                    return P.renderSingleSided && M == $i && (M = qi),
                    P.renderReverseSided && (M === qi ? M = Yi : M === Yi && (M = qi)),
                    l.side = M,
                    l.clipShadows = n.clipShadows,
                    l.clippingPlanes = n.clippingPlanes,
                    l.clipIntersection = n.clipIntersection,
                    l.wireframeLinewidth = n.wireframeLinewidth,
                    l.linewidth = n.linewidth,
                    r && l.isMeshDistanceMaterial && (l.referencePosition.copy(i),
                    l.nearDistance = a,
                    l.farDistance = o),
                    l
                }
                function s(n, r, i, a) {
                    if (!1 !== n.visible) {
                        if (n.layers.test(r.layers) && (n.isMesh || n.isLine || n.isPoints) && n.castShadow && (!n.frustumCulled || u.intersectsObject(n))) {
                            n.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, n.matrixWorld);
                            var l = e.update(n)
                              , c = n.material;
                            if (Array.isArray(c))
                                for (var h = l.groups, d = 0, p = h.length; d < p; d++) {
                                    var f = h[d]
                                      , v = c[f.materialIndex];
                                    if (v && v.visible) {
                                        g = o(n, v, a, m, i.near, i.far);
                                        t.renderBufferDirect(i, null, l, g, n, f)
                                    }
                                }
                            else if (c.visible) {
                                var g = o(n, c, a, m, i.near, i.far);
                                t.renderBufferDirect(i, null, l, g, n, null)
                            }
                        }
                        for (var y = n.children, x = 0, b = y.length; x < b; x++)
                            s(y[x], r, i, a)
                    }
                }
                for (var u = new at, h = new c, d = new n, p = new n(r,r), f = new l, m = new l, v = 1, g = 2, y = 1 + (v | g), x = new Array(y), b = new Array(y), _ = {}, w = [new l(1,0,0), new l(-1,0,0), new l(0,0,1), new l(0,0,-1), new l(0,1,0), new l(0,-1,0)], M = [new l(0,1,0), new l(0,1,0), new l(0,1,0), new l(0,1,0), new l(0,0,1), new l(0,0,-1)], E = [new i, new i, new i, new i, new i, new i], T = 0; T !== y; ++T) {
                    var S = 0 != (T & v)
                      , A = 0 != (T & g)
                      , L = new Q({
                        depthPacking: Ho,
                        morphTargets: S,
                        skinning: A
                    });
                    x[T] = L;
                    var R = new tt({
                        morphTargets: S,
                        skinning: A
                    });
                    b[T] = R
                }
                var P = this;
                this.enabled = !1,
                this.autoUpdate = !0,
                this.needsUpdate = !1,
                this.type = Wi,
                this.renderReverseSided = !0,
                this.renderSingleSided = !0,
                this.render = function(e, n, r) {
                    if (!1 !== P.enabled && (!1 !== P.autoUpdate || !1 !== P.needsUpdate) && 0 !== e.length) {
                        var i = t.context
                          , o = t.state;
                        o.disable(i.BLEND),
                        o.buffers.color.setClear(1, 1, 1, 1),
                        o.buffers.depth.setTest(!0),
                        o.setScissorTest(!1);
                        for (var l, c = 0, v = e.length; c < v; c++) {
                            var g = e[c]
                              , y = g.shadow
                              , x = g && g.isPointLight;
                            if (void 0 !== y) {
                                var b = y.camera;
                                if (d.copy(y.mapSize),
                                d.min(p),
                                x) {
                                    var _ = d.x
                                      , T = d.y;
                                    E[0].set(2 * _, T, _, T),
                                    E[1].set(0, T, _, T),
                                    E[2].set(3 * _, T, _, T),
                                    E[3].set(_, T, _, T),
                                    E[4].set(3 * _, 0, _, T),
                                    E[5].set(_, 0, _, T),
                                    d.x *= 4,
                                    d.y *= 2
                                }
                                if (null === y.map) {
                                    var S = {
                                        minFilter: qa,
                                        magFilter: qa,
                                        format: fo
                                    };
                                    y.map = new a(d.x,d.y,S),
                                    y.map.texture.name = g.name + ".shadowMap",
                                    b.updateProjectionMatrix()
                                }
                                y.isSpotLightShadow && y.update(g);
                                var A = y.map
                                  , L = y.matrix;
                                m.setFromMatrixPosition(g.matrixWorld),
                                b.position.copy(m),
                                x ? (l = 6,
                                L.makeTranslation(-m.x, -m.y, -m.z)) : (l = 1,
                                f.setFromMatrixPosition(g.target.matrixWorld),
                                b.lookAt(f),
                                b.updateMatrixWorld(),
                                L.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                                L.multiply(b.projectionMatrix),
                                L.multiply(b.matrixWorldInverse)),
                                t.setRenderTarget(A),
                                t.clear();
                                for (var R = 0; R < l; R++) {
                                    if (x) {
                                        f.copy(b.position),
                                        f.add(w[R]),
                                        b.up.copy(M[R]),
                                        b.lookAt(f),
                                        b.updateMatrixWorld();
                                        var C = E[R];
                                        o.viewport(C)
                                    }
                                    h.multiplyMatrices(b.projectionMatrix, b.matrixWorldInverse),
                                    u.setFromMatrix(h),
                                    s(n, r, b, x)
                                }
                            } else
                                console.warn("THREE.WebGLShadowMap:", g, "has no shadow.")
                        }
                        P.needsUpdate = !1
                    }
                }
            }
            function st(t) {
                function e(e, n) {
                    var r = e.array
                      , i = e.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW
                      , a = t.createBuffer();
                    t.bindBuffer(n, a),
                    t.bufferData(n, r, i),
                    e.onUploadCallback();
                    var o = t.FLOAT;
                    return r instanceof Float32Array ? o = t.FLOAT : r instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : r instanceof Uint16Array ? o = t.UNSIGNED_SHORT : r instanceof Int16Array ? o = t.SHORT : r instanceof Uint32Array ? o = t.UNSIGNED_INT : r instanceof Int32Array ? o = t.INT : r instanceof Int8Array ? o = t.BYTE : r instanceof Uint8Array && (o = t.UNSIGNED_BYTE),
                    {
                        buffer: a,
                        type: o,
                        bytesPerElement: r.BYTES_PER_ELEMENT,
                        version: e.version
                    }
                }
                function n(e, n, r) {
                    var i = n.array
                      , a = n.updateRange;
                    t.bindBuffer(r, e),
                    !1 === n.dynamic ? t.bufferData(r, i, t.STATIC_DRAW) : -1 === a.count ? t.bufferSubData(r, 0, i) : 0 === a.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (t.bufferSubData(r, a.offset * i.BYTES_PER_ELEMENT, i.subarray(a.offset, a.offset + a.count)),
                    a.count = -1)
                }
                var r = {};
                return {
                    get: function(t) {
                        return t.isInterleavedBufferAttribute && (t = t.data),
                        r[t.uuid]
                    },
                    remove: function(e) {
                        e.isInterleavedBufferAttribute && (e = e.data);
                        var n = r[e.uuid];
                        n && (t.deleteBuffer(n.buffer),
                        delete r[e.uuid])
                    },
                    update: function(t, i) {
                        t.isInterleavedBufferAttribute && (t = t.data);
                        var a = r[t.uuid];
                        void 0 === a ? r[t.uuid] = e(t, i) : a.version < t.version && (n(a.buffer, t, i),
                        a.version = t.version)
                    }
                }
            }
            function lt(t, e, n, r) {
                this._x = t || 0,
                this._y = e || 0,
                this._z = n || 0,
                this._order = r || lt.DefaultOrder
            }
            function ct() {
                this.mask = 1
            }
            function ut() {
                Object.defineProperty(this, "id", {
                    value: is++
                }),
                this.uuid = Go.generateUUID(),
                this.name = "",
                this.type = "Object3D",
                this.parent = null,
                this.children = [],
                this.up = ut.DefaultUp.clone();
                var t = new l
                  , e = new lt
                  , n = new s
                  , r = new l(1,1,1);
                e.onChange(function() {
                    n.setFromEuler(e, !1)
                }),
                n.onChange(function() {
                    e.setFromQuaternion(n, void 0, !1)
                }),
                Object.defineProperties(this, {
                    position: {
                        enumerable: !0,
                        value: t
                    },
                    rotation: {
                        enumerable: !0,
                        value: e
                    },
                    quaternion: {
                        enumerable: !0,
                        value: n
                    },
                    scale: {
                        enumerable: !0,
                        value: r
                    },
                    modelViewMatrix: {
                        value: new c
                    },
                    normalMatrix: {
                        value: new rt
                    }
                }),
                this.matrix = new c,
                this.matrixWorld = new c,
                this.matrixAutoUpdate = ut.DefaultMatrixAutoUpdate,
                this.matrixWorldNeedsUpdate = !1,
                this.layers = new ct,
                this.visible = !0,
                this.castShadow = !1,
                this.receiveShadow = !1,
                this.frustumCulled = !0,
                this.renderOrder = 0,
                this.userData = {}
            }
            function ht() {
                ut.call(this),
                this.type = "Camera",
                this.matrixWorldInverse = new c,
                this.projectionMatrix = new c
            }
            function dt(t, e, n, r, i, a) {
                ht.call(this),
                this.type = "OrthographicCamera",
                this.zoom = 1,
                this.view = null,
                this.left = t,
                this.right = e,
                this.top = n,
                this.bottom = r,
                this.near = void 0 !== i ? i : .1,
                this.far = void 0 !== a ? a : 2e3,
                this.updateProjectionMatrix()
            }
            function pt(t, e, n, r) {
                ht.call(this),
                this.type = "PerspectiveCamera",
                this.fov = void 0 !== t ? t : 50,
                this.zoom = 1,
                this.near = void 0 !== n ? n : .1,
                this.far = void 0 !== r ? r : 2e3,
                this.focus = 10,
                this.aspect = void 0 !== e ? e : 1,
                this.view = null,
                this.filmGauge = 35,
                this.filmOffset = 0,
                this.updateProjectionMatrix()
            }
            function ft(t, e, n, r, i, a) {
                this.a = t,
                this.b = e,
                this.c = n,
                this.normal = r && r.isVector3 ? r : new l,
                this.vertexNormals = Array.isArray(r) ? r : [],
                this.color = i && i.isColor ? i : new X,
                this.vertexColors = Array.isArray(i) ? i : [],
                this.materialIndex = void 0 !== a ? a : 0
            }
            function mt() {
                return as++
            }
            function vt() {
                Object.defineProperty(this, "id", {
                    value: mt()
                }),
                this.uuid = Go.generateUUID(),
                this.name = "",
                this.type = "Geometry",
                this.vertices = [],
                this.colors = [],
                this.faces = [],
                this.faceVertexUvs = [[]],
                this.morphTargets = [],
                this.morphNormals = [],
                this.skinWeights = [],
                this.skinIndices = [],
                this.lineDistances = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.elementsNeedUpdate = !1,
                this.verticesNeedUpdate = !1,
                this.uvsNeedUpdate = !1,
                this.normalsNeedUpdate = !1,
                this.colorsNeedUpdate = !1,
                this.lineDistancesNeedUpdate = !1,
                this.groupsNeedUpdate = !1
            }
            function gt(t, e, n) {
                if (Array.isArray(t))
                    throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                this.uuid = Go.generateUUID(),
                this.name = "",
                this.array = t,
                this.itemSize = e,
                this.count = void 0 !== t ? t.length / e : 0,
                this.normalized = !0 === n,
                this.dynamic = !1,
                this.updateRange = {
                    offset: 0,
                    count: -1
                },
                this.onUploadCallback = function() {}
                ,
                this.version = 0
            }
            function yt(t, e) {
                gt.call(this, new Int8Array(t), e)
            }
            function xt(t, e) {
                gt.call(this, new Uint8Array(t), e)
            }
            function bt(t, e) {
                gt.call(this, new Uint8ClampedArray(t), e)
            }
            function _t(t, e) {
                gt.call(this, new Int16Array(t), e)
            }
            function wt(t, e) {
                gt.call(this, new Uint16Array(t), e)
            }
            function Mt(t, e) {
                gt.call(this, new Int32Array(t), e)
            }
            function Et(t, e) {
                gt.call(this, new Uint32Array(t), e)
            }
            function Tt(t, e) {
                gt.call(this, new Float32Array(t), e)
            }
            function St(t, e) {
                gt.call(this, new Float64Array(t), e)
            }
            function At() {
                this.indices = [],
                this.vertices = [],
                this.normals = [],
                this.colors = [],
                this.uvs = [],
                this.uvs2 = [],
                this.groups = [],
                this.morphTargets = {},
                this.skinWeights = [],
                this.skinIndices = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.verticesNeedUpdate = !1,
                this.normalsNeedUpdate = !1,
                this.colorsNeedUpdate = !1,
                this.uvsNeedUpdate = !1,
                this.groupsNeedUpdate = !1
            }
            function Lt(t) {
                if (0 === t.length)
                    return -1 / 0;
                for (var e = t[0], n = 1, r = t.length; n < r; ++n)
                    t[n] > e && (e = t[n]);
                return e
            }
            function Rt() {
                Object.defineProperty(this, "id", {
                    value: mt()
                }),
                this.uuid = Go.generateUUID(),
                this.name = "",
                this.type = "BufferGeometry",
                this.index = null,
                this.attributes = {},
                this.morphAttributes = {},
                this.groups = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.drawRange = {
                    start: 0,
                    count: 1 / 0
                }
            }
            function Pt(t, e, n, r, i, a) {
                vt.call(this),
                this.type = "BoxGeometry",
                this.parameters = {
                    width: t,
                    height: e,
                    depth: n,
                    widthSegments: r,
                    heightSegments: i,
                    depthSegments: a
                },
                this.fromBufferGeometry(new Ct(t,e,n,r,i,a)),
                this.mergeVertices()
            }
            function Ct(t, e, n, r, i, a) {
                function o(t, e, n, r, i, a, o, m, v, g, y) {
                    var x, b, _ = a / v, w = o / g, M = a / 2, E = o / 2, T = m / 2, S = v + 1, A = g + 1, L = 0, R = 0, P = new l;
                    for (b = 0; b < A; b++) {
                        var C = b * w - E;
                        for (x = 0; x < S; x++) {
                            var I = x * _ - M;
                            P[t] = I * r,
                            P[e] = C * i,
                            P[n] = T,
                            u.push(P.x, P.y, P.z),
                            P[t] = 0,
                            P[e] = 0,
                            P[n] = m > 0 ? 1 : -1,
                            h.push(P.x, P.y, P.z),
                            d.push(x / v),
                            d.push(1 - b / g),
                            L += 1
                        }
                    }
                    for (b = 0; b < g; b++)
                        for (x = 0; x < v; x++) {
                            var O = p + x + S * b
                              , N = p + x + S * (b + 1)
                              , D = p + (x + 1) + S * (b + 1)
                              , U = p + (x + 1) + S * b;
                            c.push(O, N, U),
                            c.push(N, D, U),
                            R += 6
                        }
                    s.addGroup(f, R, y),
                    f += R,
                    p += L
                }
                Rt.call(this),
                this.type = "BoxBufferGeometry",
                this.parameters = {
                    width: t,
                    height: e,
                    depth: n,
                    widthSegments: r,
                    heightSegments: i,
                    depthSegments: a
                };
                var s = this;
                r = Math.floor(r) || 1,
                i = Math.floor(i) || 1;
                var c = []
                  , u = []
                  , h = []
                  , d = []
                  , p = 0
                  , f = 0;
                o("z", "y", "x", -1, -1, n, e, t, a = Math.floor(a) || 1, i, 0),
                o("z", "y", "x", 1, -1, n, e, -t, a, i, 1),
                o("x", "z", "y", 1, 1, t, n, e, r, a, 2),
                o("x", "z", "y", 1, -1, t, n, -e, r, a, 3),
                o("x", "y", "z", 1, -1, t, e, n, r, i, 4),
                o("x", "y", "z", -1, -1, t, e, -n, r, i, 5),
                this.setIndex(c),
                this.addAttribute("position", new Tt(u,3)),
                this.addAttribute("normal", new Tt(h,3)),
                this.addAttribute("uv", new Tt(d,2))
            }
            function It(t, e, n, r) {
                vt.call(this),
                this.type = "PlaneGeometry",
                this.parameters = {
                    width: t,
                    height: e,
                    widthSegments: n,
                    heightSegments: r
                },
                this.fromBufferGeometry(new Ot(t,e,n,r)),
                this.mergeVertices()
            }
            function Ot(t, e, n, r) {
                Rt.call(this),
                this.type = "PlaneBufferGeometry",
                this.parameters = {
                    width: t,
                    height: e,
                    widthSegments: n,
                    heightSegments: r
                };
                var i, a, o = t / 2, s = e / 2, l = Math.floor(n) || 1, c = Math.floor(r) || 1, u = l + 1, h = c + 1, d = t / l, p = e / c, f = [], m = [], v = [], g = [];
                for (a = 0; a < h; a++) {
                    var y = a * p - s;
                    for (i = 0; i < u; i++) {
                        var x = i * d - o;
                        m.push(x, -y, 0),
                        v.push(0, 0, 1),
                        g.push(i / l),
                        g.push(1 - a / c)
                    }
                }
                for (a = 0; a < c; a++)
                    for (i = 0; i < l; i++) {
                        var b = i + u * a
                          , _ = i + u * (a + 1)
                          , w = i + 1 + u * (a + 1)
                          , M = i + 1 + u * a;
                        f.push(b, _, M),
                        f.push(_, w, M)
                    }
                this.setIndex(f),
                this.addAttribute("position", new Tt(m,3)),
                this.addAttribute("normal", new Tt(v,3)),
                this.addAttribute("uv", new Tt(g,2))
            }
            function Nt(t) {
                J.call(this),
                this.type = "MeshBasicMaterial",
                this.color = new X(16777215),
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = Ra,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.lights = !1,
                this.setValues(t)
            }
            function Dt(t, e) {
                this.origin = void 0 !== t ? t : new l,
                this.direction = void 0 !== e ? e : new l
            }
            function Ut(t, e) {
                this.start = void 0 !== t ? t : new l,
                this.end = void 0 !== e ? e : new l
            }
            function kt(t, e, n) {
                this.a = void 0 !== t ? t : new l,
                this.b = void 0 !== e ? e : new l,
                this.c = void 0 !== n ? n : new l
            }
            function Bt(t, e) {
                ut.call(this),
                this.type = "Mesh",
                this.geometry = void 0 !== t ? t : new Rt,
                this.material = void 0 !== e ? e : new Nt({
                    color: 16777215 * Math.random()
                }),
                this.drawMode = Co,
                this.updateMorphTargets()
            }
            function Ft(t, e, n, r) {
                function i(t, n) {
                    e.buffers.color.setClear(t.r, t.g, t.b, n, r)
                }
                var a, o, s, l = new X(0), c = 0;
                return {
                    getClearColor: function() {
                        return l
                    },
                    setClearColor: function(t, e) {
                        l.set(t),
                        i(l, c = void 0 !== e ? e : 1)
                    },
                    getClearAlpha: function() {
                        return c
                    },
                    setClearAlpha: function(t) {
                        i(l, c = t)
                    },
                    render: function(e, r, u, h) {
                        var d = r.background;
                        null === d ? i(l, c) : d && d.isColor && (i(d, 1),
                        h = !0),
                        (t.autoClear || h) && t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil),
                        d && d.isCubeTexture ? (void 0 === s && ((s = new Bt(new Ct(1,1,1),new K({
                            uniforms: ns.cube.uniforms,
                            vertexShader: ns.cube.vertexShader,
                            fragmentShader: ns.cube.fragmentShader,
                            side: Yi,
                            depthTest: !0,
                            depthWrite: !1,
                            polygonOffset: !0,
                            fog: !1
                        }))).geometry.removeAttribute("normal"),
                        s.geometry.removeAttribute("uv"),
                        s.onBeforeRender = function(t, e, n) {
                            var r = n.far;
                            this.matrixWorld.makeScale(r, r, r),
                            this.matrixWorld.copyPosition(n.matrixWorld),
                            this.material.polygonOffsetUnits = 10 * r
                        }
                        ,
                        n.update(s.geometry)),
                        s.material.uniforms.tCube.value = d,
                        e.push(s, s.geometry, s.material, 0, null)) : d && d.isTexture && (void 0 === a && (a = new dt(-1,1,1,-1,0,1),
                        o = new Bt(new Ot(2,2),new Nt({
                            depthTest: !1,
                            depthWrite: !1,
                            fog: !1
                        })),
                        n.update(o.geometry)),
                        o.material.map = d,
                        t.renderBufferDirect(a, null, o.geometry, o.material, o, null))
                    }
                }
            }
            function zt(t, e) {
                return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.program && e.program && t.program !== e.program ? t.program.id - e.program.id : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id
            }
            function jt(t, e) {
                return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id
            }
            function Ht() {
                var t = []
                  , e = 0
                  , n = []
                  , r = [];
                return {
                    opaque: n,
                    transparent: r,
                    init: function() {
                        e = 0,
                        n.length = 0,
                        r.length = 0
                    },
                    push: function(i, a, o, s, l) {
                        var c = t[e];
                        void 0 === c ? (c = {
                            id: i.id,
                            object: i,
                            geometry: a,
                            material: o,
                            program: o.program,
                            renderOrder: i.renderOrder,
                            z: s,
                            group: l
                        },
                        t[e] = c) : (c.id = i.id,
                        c.object = i,
                        c.geometry = a,
                        c.material = o,
                        c.program = o.program,
                        c.renderOrder = i.renderOrder,
                        c.z = s,
                        c.group = l),
                        (!0 === o.transparent ? r : n).push(c),
                        e++
                    },
                    sort: function() {
                        n.length > 1 && n.sort(zt),
                        r.length > 1 && r.sort(jt)
                    }
                }
            }
            function Gt() {
                var t = {};
                return {
                    get: function(e, n) {
                        var r = e.id + "," + n.id
                          , i = t[r];
                        return void 0 === i && (i = new Ht,
                        t[r] = i),
                        i
                    },
                    dispose: function() {
                        t = {}
                    }
                }
            }
            function Vt(t, e) {
                return Math.abs(e[1]) - Math.abs(t[1])
            }
            function Wt(t) {
                var e = {}
                  , n = new Float32Array(8);
                return {
                    update: function(r, i, a, o) {
                        var s = r.morphTargetInfluences
                          , l = s.length
                          , c = e[i.id];
                        if (void 0 === c) {
                            for (c = [],
                            d = 0; d < l; d++)
                                c[d] = [d, 0];
                            e[i.id] = c
                        }
                        for (var u = a.morphTargets && i.morphAttributes.position, h = a.morphNormals && i.morphAttributes.normal, d = 0; d < l; d++)
                            0 !== (p = c[d])[1] && (u && i.removeAttribute("morphTarget" + d),
                            h && i.removeAttribute("morphNormal" + d));
                        for (d = 0; d < l; d++)
                            (p = c[d])[0] = d,
                            p[1] = s[d];
                        c.sort(Vt);
                        for (d = 0; d < 8; d++) {
                            var p = c[d];
                            if (p) {
                                var f = p[0]
                                  , m = p[1];
                                if (m) {
                                    u && i.addAttribute("morphTarget" + d, u[f]),
                                    h && i.addAttribute("morphNormal" + d, h[f]),
                                    n[d] = m;
                                    continue
                                }
                            }
                            n[d] = 0
                        }
                        o.getUniforms().setValue(t, "morphTargetInfluences", n)
                    }
                }
            }
            function Xt(t, e, n) {
                var r, i, a;
                this.setMode = function(t) {
                    r = t
                }
                ,
                this.setIndex = function(t) {
                    i = t.type,
                    a = t.bytesPerElement
                }
                ,
                this.render = function(e, o) {
                    t.drawElements(r, o, i, e * a),
                    n.calls++,
                    n.vertices += o,
                    r === t.TRIANGLES ? n.faces += o / 3 : r === t.POINTS && (n.points += o)
                }
                ,
                this.renderInstances = function(o, s, l) {
                    var c = e.get("ANGLE_instanced_arrays");
                    null !== c ? (c.drawElementsInstancedANGLE(r, l, i, s * a, o.maxInstancedCount),
                    n.calls++,
                    n.vertices += l * o.maxInstancedCount,
                    r === t.TRIANGLES ? n.faces += o.maxInstancedCount * l / 3 : r === t.POINTS && (n.points += o.maxInstancedCount * l)) : console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")
                }
            }
            function qt(t, e, n) {
                var r;
                this.setMode = function(t) {
                    r = t
                }
                ,
                this.render = function(e, i) {
                    t.drawArrays(r, e, i),
                    n.calls++,
                    n.vertices += i,
                    r === t.TRIANGLES ? n.faces += i / 3 : r === t.POINTS && (n.points += i)
                }
                ,
                this.renderInstances = function(i, a, o) {
                    var s = e.get("ANGLE_instanced_arrays");
                    if (null !== s) {
                        var l = i.attributes.position;
                        l.isInterleavedBufferAttribute ? (o = l.data.count,
                        s.drawArraysInstancedANGLE(r, 0, o, i.maxInstancedCount)) : s.drawArraysInstancedANGLE(r, a, o, i.maxInstancedCount),
                        n.calls++,
                        n.vertices += o * i.maxInstancedCount,
                        r === t.TRIANGLES ? n.faces += i.maxInstancedCount * o / 3 : r === t.POINTS && (n.points += i.maxInstancedCount * o)
                    } else
                        console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")
                }
            }
            function Yt(t, e, n) {
                function r(t) {
                    var o = t.target
                      , s = i[o.id];
                    null !== s.index && e.remove(s.index);
                    for (var l in s.attributes)
                        e.remove(s.attributes[l]);
                    o.removeEventListener("dispose", r),
                    delete i[o.id];
                    var c = a[o.id];
                    c && (e.remove(c),
                    delete a[o.id]),
                    (c = a[s.id]) && (e.remove(c),
                    delete a[s.id]),
                    n.geometries--
                }
                var i = {}
                  , a = {};
                return {
                    get: function(t, e) {
                        var a = i[e.id];
                        return a || (e.addEventListener("dispose", r),
                        e.isBufferGeometry ? a = e : e.isGeometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = (new Rt).setFromObject(t)),
                        a = e._bufferGeometry),
                        i[e.id] = a,
                        n.geometries++,
                        a)
                    },
                    update: function(n) {
                        var r = n.index
                          , i = n.attributes;
                        null !== r && e.update(r, t.ELEMENT_ARRAY_BUFFER);
                        for (var a in i)
                            e.update(i[a], t.ARRAY_BUFFER);
                        var o = n.morphAttributes;
                        for (var a in o)
                            for (var s = o[a], l = 0, c = s.length; l < c; l++)
                                e.update(s[l], t.ARRAY_BUFFER)
                    },
                    getWireframeAttribute: function(n) {
                        var r = a[n.id];
                        if (r)
                            return r;
                        var i = []
                          , o = n.index
                          , s = n.attributes;
                        if (null !== o)
                            for (var l = 0, c = (p = o.array).length; l < c; l += 3) {
                                var u = p[l + 0]
                                  , h = p[l + 1]
                                  , d = p[l + 2];
                                i.push(u, h, h, d, d, u)
                            }
                        else
                            for (var p = s.position.array, l = 0, c = p.length / 3 - 1; l < c; l += 3) {
                                var u = l + 0
                                  , h = l + 1
                                  , d = l + 2;
                                i.push(u, h, h, d, d, u)
                            }
                        return r = new (Lt(i) > 65535 ? Et : wt)(i,1),
                        e.update(r, t.ELEMENT_ARRAY_BUFFER),
                        a[n.id] = r,
                        r
                    }
                }
            }
            function $t() {
                var t = {};
                return {
                    get: function(e) {
                        if (void 0 !== t[e.id])
                            return t[e.id];
                        var r;
                        switch (e.type) {
                        case "DirectionalLight":
                            r = {
                                direction: new l,
                                color: new X,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new n
                            };
                            break;
                        case "SpotLight":
                            r = {
                                position: new l,
                                direction: new l,
                                color: new X,
                                distance: 0,
                                coneCos: 0,
                                penumbraCos: 0,
                                decay: 0,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new n
                            };
                            break;
                        case "PointLight":
                            r = {
                                position: new l,
                                color: new X,
                                distance: 0,
                                decay: 0,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new n,
                                shadowCameraNear: 1,
                                shadowCameraFar: 1e3
                            };
                            break;
                        case "HemisphereLight":
                            r = {
                                direction: new l,
                                skyColor: new X,
                                groundColor: new X
                            };
                            break;
                        case "RectAreaLight":
                            r = {
                                color: new X,
                                position: new l,
                                halfWidth: new l,
                                halfHeight: new l
                            }
                        }
                        return t[e.id] = r,
                        r
                    }
                }
            }
            function Zt() {
                var t = new $t
                  , e = {
                    hash: "",
                    ambient: [0, 0, 0],
                    directional: [],
                    directionalShadowMap: [],
                    directionalShadowMatrix: [],
                    spot: [],
                    spotShadowMap: [],
                    spotShadowMatrix: [],
                    rectArea: [],
                    point: [],
                    pointShadowMap: [],
                    pointShadowMatrix: [],
                    hemi: []
                }
                  , n = new l
                  , r = new c
                  , i = new c;
                return {
                    setup: function(a, o, s) {
                        for (var l = 0, c = 0, u = 0, h = 0, d = 0, p = 0, f = 0, m = 0, v = s.matrixWorldInverse, g = 0, y = a.length; g < y; g++) {
                            var x = a[g]
                              , b = x.color
                              , _ = x.intensity
                              , w = x.distance
                              , M = x.shadow && x.shadow.map ? x.shadow.map.texture : null;
                            if (x.isAmbientLight)
                                l += b.r * _,
                                c += b.g * _,
                                u += b.b * _;
                            else if (x.isDirectionalLight)
                                (T = t.get(x)).color.copy(x.color).multiplyScalar(x.intensity),
                                T.direction.setFromMatrixPosition(x.matrixWorld),
                                n.setFromMatrixPosition(x.target.matrixWorld),
                                T.direction.sub(n),
                                T.direction.transformDirection(v),
                                T.shadow = x.castShadow,
                                x.castShadow && (E = x.shadow,
                                T.shadowBias = E.bias,
                                T.shadowRadius = E.radius,
                                T.shadowMapSize = E.mapSize),
                                e.directionalShadowMap[h] = M,
                                e.directionalShadowMatrix[h] = x.shadow.matrix,
                                e.directional[h] = T,
                                h++;
                            else if (x.isSpotLight)
                                (T = t.get(x)).position.setFromMatrixPosition(x.matrixWorld),
                                T.position.applyMatrix4(v),
                                T.color.copy(b).multiplyScalar(_),
                                T.distance = w,
                                T.direction.setFromMatrixPosition(x.matrixWorld),
                                n.setFromMatrixPosition(x.target.matrixWorld),
                                T.direction.sub(n),
                                T.direction.transformDirection(v),
                                T.coneCos = Math.cos(x.angle),
                                T.penumbraCos = Math.cos(x.angle * (1 - x.penumbra)),
                                T.decay = 0 === x.distance ? 0 : x.decay,
                                T.shadow = x.castShadow,
                                x.castShadow && (E = x.shadow,
                                T.shadowBias = E.bias,
                                T.shadowRadius = E.radius,
                                T.shadowMapSize = E.mapSize),
                                e.spotShadowMap[p] = M,
                                e.spotShadowMatrix[p] = x.shadow.matrix,
                                e.spot[p] = T,
                                p++;
                            else if (x.isRectAreaLight)
                                (T = t.get(x)).color.copy(b).multiplyScalar(_ / (x.width * x.height)),
                                T.position.setFromMatrixPosition(x.matrixWorld),
                                T.position.applyMatrix4(v),
                                i.identity(),
                                r.copy(x.matrixWorld),
                                r.premultiply(v),
                                i.extractRotation(r),
                                T.halfWidth.set(.5 * x.width, 0, 0),
                                T.halfHeight.set(0, .5 * x.height, 0),
                                T.halfWidth.applyMatrix4(i),
                                T.halfHeight.applyMatrix4(i),
                                e.rectArea[f] = T,
                                f++;
                            else if (x.isPointLight) {
                                if ((T = t.get(x)).position.setFromMatrixPosition(x.matrixWorld),
                                T.position.applyMatrix4(v),
                                T.color.copy(x.color).multiplyScalar(x.intensity),
                                T.distance = x.distance,
                                T.decay = 0 === x.distance ? 0 : x.decay,
                                T.shadow = x.castShadow,
                                x.castShadow) {
                                    var E = x.shadow;
                                    T.shadowBias = E.bias,
                                    T.shadowRadius = E.radius,
                                    T.shadowMapSize = E.mapSize,
                                    T.shadowCameraNear = E.camera.near,
                                    T.shadowCameraFar = E.camera.far
                                }
                                e.pointShadowMap[d] = M,
                                e.pointShadowMatrix[d] = x.shadow.matrix,
                                e.point[d] = T,
                                d++
                            } else if (x.isHemisphereLight) {
                                var T = t.get(x);
                                T.direction.setFromMatrixPosition(x.matrixWorld),
                                T.direction.transformDirection(v),
                                T.direction.normalize(),
                                T.skyColor.copy(x.color).multiplyScalar(_),
                                T.groundColor.copy(x.groundColor).multiplyScalar(_),
                                e.hemi[m] = T,
                                m++
                            }
                        }
                        e.ambient[0] = l,
                        e.ambient[1] = c,
                        e.ambient[2] = u,
                        e.directional.length = h,
                        e.spot.length = p,
                        e.rectArea.length = f,
                        e.point.length = d,
                        e.hemi.length = m,
                        e.hash = h + "," + d + "," + p + "," + f + "," + m + "," + o.length
                    },
                    state: e
                }
            }
            function Jt(t, e) {
                var n = {};
                return {
                    update: function(r) {
                        var i = e.frame
                          , a = r.geometry
                          , o = t.get(r, a);
                        return n[o.id] !== i && (a.isGeometry && o.updateFromObject(r),
                        t.update(o),
                        n[o.id] = i),
                        o
                    },
                    clear: function() {
                        n = {}
                    }
                }
            }
            function Kt(t) {
                for (var e = t.split("\n"), n = 0; n < e.length; n++)
                    e[n] = n + 1 + ": " + e[n];
                return e.join("\n")
            }
            function Qt(t, e, n) {
                var r = t.createShader(e);
                return t.shaderSource(r, n),
                t.compileShader(r),
                !1 === t.getShaderParameter(r, t.COMPILE_STATUS) && console.error("THREE.WebGLShader: Shader couldn't compile."),
                "" !== t.getShaderInfoLog(r) && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", e === t.VERTEX_SHADER ? "vertex" : "fragment", t.getShaderInfoLog(r), Kt(n)),
                r
            }
            function te(t) {
                switch (t) {
                case No:
                    return ["Linear", "( value )"];
                case Do:
                    return ["sRGB", "( value )"];
                case ko:
                    return ["RGBE", "( value )"];
                case Bo:
                    return ["RGBM", "( value, 7.0 )"];
                case Fo:
                    return ["RGBM", "( value, 16.0 )"];
                case zo:
                    return ["RGBD", "( value, 256.0 )"];
                case Uo:
                    return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
                default:
                    throw new Error("unsupported encoding: " + t)
                }
            }
            function ee(t, e) {
                var n = te(e);
                return "vec4 " + t + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
            }
            function ne(t, e) {
                var n = te(e);
                return "vec4 " + t + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
            }
            function re(t, e) {
                var n;
                switch (e) {
                case Oa:
                    n = "Linear";
                    break;
                case Na:
                    n = "Reinhard";
                    break;
                case Da:
                    n = "Uncharted2";
                    break;
                case Ua:
                    n = "OptimizedCineon";
                    break;
                default:
                    throw new Error("unsupported toneMapping: " + e)
                }
                return "vec3 " + t + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
            }
            function ie(t, e, n) {
                return [(t = t || {}).derivatives || e.envMapCubeUV || e.bumpMap || e.normalMap || e.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (t.fragDepth || e.logarithmicDepthBuffer) && n.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", t.drawBuffers && n.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (t.shaderTextureLOD || e.envMap) && n.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(se).join("\n")
            }
            function ae(t) {
                var e = [];
                for (var n in t) {
                    var r = t[n];
                    !1 !== r && e.push("#define " + n + " " + r)
                }
                return e.join("\n")
            }
            function oe(t, e, n) {
                for (var r = {}, i = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), a = 0; a < i; a++) {
                    var o = t.getActiveAttrib(e, a).name;
                    r[o] = t.getAttribLocation(e, o)
                }
                return r
            }
            function se(t) {
                return "" !== t
            }
            function le(t, e) {
                return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
            }
            function ce(t) {
                var e = /^[ \t]*#include +<([\w\d.]+)>/gm;
                return t.replace(e, function(t, e) {
                    var n = es[e];
                    if (void 0 === n)
                        throw new Error("Can not resolve #include <" + e + ">");
                    return ce(n)
                })
            }
            function ue(t) {
                var e = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
                return t.replace(e, function(t, e, n, r) {
                    for (var i = "", a = parseInt(e); a < parseInt(n); a++)
                        i += r.replace(/\[ i \]/g, "[ " + a + " ]");
                    return i
                })
            }
            function he(t, e, n, r, i, a) {
                var o = t.context
                  , s = r.defines
                  , l = i.vertexShader
                  , c = i.fragmentShader
                  , u = "SHADOWMAP_TYPE_BASIC";
                a.shadowMapType === Wi ? u = "SHADOWMAP_TYPE_PCF" : a.shadowMapType === Xi && (u = "SHADOWMAP_TYPE_PCF_SOFT");
                var h = "ENVMAP_TYPE_CUBE"
                  , d = "ENVMAP_MODE_REFLECTION"
                  , p = "ENVMAP_BLENDING_MULTIPLY";
                if (a.envMap) {
                    switch (r.envMap.mapping) {
                    case ka:
                    case Ba:
                        h = "ENVMAP_TYPE_CUBE";
                        break;
                    case Ha:
                    case Ga:
                        h = "ENVMAP_TYPE_CUBE_UV";
                        break;
                    case Fa:
                    case za:
                        h = "ENVMAP_TYPE_EQUIREC";
                        break;
                    case ja:
                        h = "ENVMAP_TYPE_SPHERE"
                    }
                    switch (r.envMap.mapping) {
                    case Ba:
                    case za:
                        d = "ENVMAP_MODE_REFRACTION"
                    }
                    switch (r.combine) {
                    case Ra:
                        p = "ENVMAP_BLENDING_MULTIPLY";
                        break;
                    case Pa:
                        p = "ENVMAP_BLENDING_MIX";
                        break;
                    case Ca:
                        p = "ENVMAP_BLENDING_ADD"
                    }
                }
                var f, m, v = t.gammaFactor > 0 ? t.gammaFactor : 1, g = ie(r.extensions, a, e), y = ae(s), x = o.createProgram();
                r.isRawShaderMaterial ? (f = [y, "\n"].filter(se).join("\n"),
                m = [g, y, "\n"].filter(se).join("\n")) : (f = ["precision " + a.precision + " float;", "precision " + a.precision + " int;", "#define SHADER_NAME " + i.name, y, a.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + v, "#define MAX_BONES " + a.maxBones, a.useFog && a.fog ? "#define USE_FOG" : "", a.useFog && a.fogExp ? "#define FOG_EXP2" : "", a.map ? "#define USE_MAP" : "", a.envMap ? "#define USE_ENVMAP" : "", a.envMap ? "#define " + d : "", a.lightMap ? "#define USE_LIGHTMAP" : "", a.aoMap ? "#define USE_AOMAP" : "", a.emissiveMap ? "#define USE_EMISSIVEMAP" : "", a.bumpMap ? "#define USE_BUMPMAP" : "", a.normalMap ? "#define USE_NORMALMAP" : "", a.displacementMap && a.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", a.specularMap ? "#define USE_SPECULARMAP" : "", a.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", a.metalnessMap ? "#define USE_METALNESSMAP" : "", a.alphaMap ? "#define USE_ALPHAMAP" : "", a.vertexColors ? "#define USE_COLOR" : "", a.flatShading ? "#define FLAT_SHADED" : "", a.skinning ? "#define USE_SKINNING" : "", a.useVertexTexture ? "#define BONE_TEXTURE" : "", a.morphTargets ? "#define USE_MORPHTARGETS" : "", a.morphNormals && !1 === a.flatShading ? "#define USE_MORPHNORMALS" : "", a.doubleSided ? "#define DOUBLE_SIDED" : "", a.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + a.numClippingPlanes, a.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", a.shadowMapEnabled ? "#define " + u : "", a.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", a.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", a.logarithmicDepthBuffer && e.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(se).join("\n"),
                m = [g, "precision " + a.precision + " float;", "precision " + a.precision + " int;", "#define SHADER_NAME " + i.name, y, a.alphaTest ? "#define ALPHATEST " + a.alphaTest : "", "#define GAMMA_FACTOR " + v, a.useFog && a.fog ? "#define USE_FOG" : "", a.useFog && a.fogExp ? "#define FOG_EXP2" : "", a.map ? "#define USE_MAP" : "", a.envMap ? "#define USE_ENVMAP" : "", a.envMap ? "#define " + h : "", a.envMap ? "#define " + d : "", a.envMap ? "#define " + p : "", a.lightMap ? "#define USE_LIGHTMAP" : "", a.aoMap ? "#define USE_AOMAP" : "", a.emissiveMap ? "#define USE_EMISSIVEMAP" : "", a.bumpMap ? "#define USE_BUMPMAP" : "", a.normalMap ? "#define USE_NORMALMAP" : "", a.specularMap ? "#define USE_SPECULARMAP" : "", a.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", a.metalnessMap ? "#define USE_METALNESSMAP" : "", a.alphaMap ? "#define USE_ALPHAMAP" : "", a.vertexColors ? "#define USE_COLOR" : "", a.gradientMap ? "#define USE_GRADIENTMAP" : "", a.flatShading ? "#define FLAT_SHADED" : "", a.doubleSided ? "#define DOUBLE_SIDED" : "", a.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + a.numClippingPlanes, "#define UNION_CLIPPING_PLANES " + (a.numClippingPlanes - a.numClipIntersection), a.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", a.shadowMapEnabled ? "#define " + u : "", a.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", a.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", a.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", a.logarithmicDepthBuffer && e.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", a.envMap && e.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", a.toneMapping !== Ia ? "#define TONE_MAPPING" : "", a.toneMapping !== Ia ? es.tonemapping_pars_fragment : "", a.toneMapping !== Ia ? re("toneMapping", a.toneMapping) : "", a.dithering ? "#define DITHERING" : "", a.outputEncoding || a.mapEncoding || a.envMapEncoding || a.emissiveMapEncoding ? es.encodings_pars_fragment : "", a.mapEncoding ? ee("mapTexelToLinear", a.mapEncoding) : "", a.envMapEncoding ? ee("envMapTexelToLinear", a.envMapEncoding) : "", a.emissiveMapEncoding ? ee("emissiveMapTexelToLinear", a.emissiveMapEncoding) : "", a.outputEncoding ? ne("linearToOutputTexel", a.outputEncoding) : "", a.depthPacking ? "#define DEPTH_PACKING " + r.depthPacking : "", "\n"].filter(se).join("\n")),
                l = le(l = ce(l), a),
                c = le(c = ce(c), a),
                r.isShaderMaterial || (l = ue(l),
                c = ue(c));
                var b = f + l
                  , _ = m + c
                  , w = Qt(o, o.VERTEX_SHADER, b)
                  , M = Qt(o, o.FRAGMENT_SHADER, _);
                o.attachShader(x, w),
                o.attachShader(x, M),
                void 0 !== r.index0AttributeName ? o.bindAttribLocation(x, 0, r.index0AttributeName) : !0 === a.morphTargets && o.bindAttribLocation(x, 0, "position"),
                o.linkProgram(x);
                var E = o.getProgramInfoLog(x)
                  , T = o.getShaderInfoLog(w)
                  , S = o.getShaderInfoLog(M)
                  , A = !0
                  , L = !0;
                !1 === o.getProgramParameter(x, o.LINK_STATUS) ? (A = !1,
                console.error("THREE.WebGLProgram: shader error: ", o.getError(), "gl.VALIDATE_STATUS", o.getProgramParameter(x, o.VALIDATE_STATUS), "gl.getProgramInfoLog", E, T, S)) : "" !== E ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", E) : "" !== T && "" !== S || (L = !1),
                L && (this.diagnostics = {
                    runnable: A,
                    material: r,
                    programLog: E,
                    vertexShader: {
                        log: T,
                        prefix: f
                    },
                    fragmentShader: {
                        log: S,
                        prefix: m
                    }
                }),
                o.deleteShader(w),
                o.deleteShader(M);
                var R;
                this.getUniforms = function() {
                    return void 0 === R && (R = new W(o,x,t)),
                    R
                }
                ;
                var P;
                return this.getAttributes = function() {
                    return void 0 === P && (P = oe(o, x)),
                    P
                }
                ,
                this.destroy = function() {
                    o.deleteProgram(x),
                    this.program = void 0
                }
                ,
                Object.defineProperties(this, {
                    uniforms: {
                        get: function() {
                            return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),
                            this.getUniforms()
                        }
                    },
                    attributes: {
                        get: function() {
                            return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),
                            this.getAttributes()
                        }
                    }
                }),
                this.id = os++,
                this.code = n,
                this.usedTimes = 1,
                this.program = x,
                this.vertexShader = w,
                this.fragmentShader = M,
                this
            }
            function de(t, e, n) {
                function r(t) {
                    var e = t.skeleton.bones;
                    if (n.floatVertexTextures)
                        return 1024;
                    var r = n.maxVertexUniforms
                      , i = Math.floor((r - 20) / 4)
                      , a = Math.min(i, e.length);
                    return a < e.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + e.length + " bones. This GPU supports " + a + "."),
                    0) : a
                }
                function i(t, e) {
                    var n;
                    return t ? t.isTexture ? n = t.encoding : t.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),
                    n = t.texture.encoding) : n = No,
                    n === No && e && (n = Uo),
                    n
                }
                var a = []
                  , o = {
                    MeshDepthMaterial: "depth",
                    MeshDistanceMaterial: "distanceRGBA",
                    MeshNormalMaterial: "normal",
                    MeshBasicMaterial: "basic",
                    MeshLambertMaterial: "lambert",
                    MeshPhongMaterial: "phong",
                    MeshToonMaterial: "phong",
                    MeshStandardMaterial: "physical",
                    MeshPhysicalMaterial: "physical",
                    LineBasicMaterial: "basic",
                    LineDashedMaterial: "dashed",
                    PointsMaterial: "points",
                    ShadowMaterial: "shadow"
                }
                  , s = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering"];
                this.getParameters = function(e, a, s, l, c, u, h) {
                    var d = o[e.type]
                      , p = h.isSkinnedMesh ? r(h) : 0
                      , f = n.precision;
                    null !== e.precision && (f = n.getMaxPrecision(e.precision)) !== e.precision && console.warn("THREE.WebGLProgram.getParameters:", e.precision, "not supported, using", f, "instead.");
                    var m = t.getRenderTarget();
                    return {
                        shaderID: d,
                        precision: f,
                        supportsVertexTextures: n.vertexTextures,
                        outputEncoding: i(m ? m.texture : null, t.gammaOutput),
                        map: !!e.map,
                        mapEncoding: i(e.map, t.gammaInput),
                        envMap: !!e.envMap,
                        envMapMode: e.envMap && e.envMap.mapping,
                        envMapEncoding: i(e.envMap, t.gammaInput),
                        envMapCubeUV: !!e.envMap && (e.envMap.mapping === Ha || e.envMap.mapping === Ga),
                        lightMap: !!e.lightMap,
                        aoMap: !!e.aoMap,
                        emissiveMap: !!e.emissiveMap,
                        emissiveMapEncoding: i(e.emissiveMap, t.gammaInput),
                        bumpMap: !!e.bumpMap,
                        normalMap: !!e.normalMap,
                        displacementMap: !!e.displacementMap,
                        roughnessMap: !!e.roughnessMap,
                        metalnessMap: !!e.metalnessMap,
                        specularMap: !!e.specularMap,
                        alphaMap: !!e.alphaMap,
                        gradientMap: !!e.gradientMap,
                        combine: e.combine,
                        vertexColors: e.vertexColors,
                        fog: !!l,
                        useFog: e.fog,
                        fogExp: l && l.isFogExp2,
                        flatShading: e.flatShading,
                        sizeAttenuation: e.sizeAttenuation,
                        logarithmicDepthBuffer: n.logarithmicDepthBuffer,
                        skinning: e.skinning && p > 0,
                        maxBones: p,
                        useVertexTexture: n.floatVertexTextures,
                        morphTargets: e.morphTargets,
                        morphNormals: e.morphNormals,
                        maxMorphTargets: t.maxMorphTargets,
                        maxMorphNormals: t.maxMorphNormals,
                        numDirLights: a.directional.length,
                        numPointLights: a.point.length,
                        numSpotLights: a.spot.length,
                        numRectAreaLights: a.rectArea.length,
                        numHemiLights: a.hemi.length,
                        numClippingPlanes: c,
                        numClipIntersection: u,
                        dithering: e.dithering,
                        shadowMapEnabled: t.shadowMap.enabled && h.receiveShadow && s.length > 0,
                        shadowMapType: t.shadowMap.type,
                        toneMapping: t.toneMapping,
                        physicallyCorrectLights: t.physicallyCorrectLights,
                        premultipliedAlpha: e.premultipliedAlpha,
                        alphaTest: e.alphaTest,
                        doubleSided: e.side === $i,
                        flipSided: e.side === Yi,
                        depthPacking: void 0 !== e.depthPacking && e.depthPacking
                    }
                }
                ,
                this.getProgramCode = function(e, n) {
                    var r = [];
                    if (n.shaderID ? r.push(n.shaderID) : (r.push(e.fragmentShader),
                    r.push(e.vertexShader)),
                    void 0 !== e.defines)
                        for (var i in e.defines)
                            r.push(i),
                            r.push(e.defines[i]);
                    for (var a = 0; a < s.length; a++)
                        r.push(n[s[a]]);
                    return r.push(e.onBeforeCompile.toString()),
                    r.push(t.gammaOutput),
                    r.join()
                }
                ,
                this.acquireProgram = function(n, r, i, o) {
                    for (var s, l = 0, c = a.length; l < c; l++) {
                        var u = a[l];
                        if (u.code === o) {
                            ++(s = u).usedTimes;
                            break
                        }
                    }
                    return void 0 === s && (s = new he(t,e,o,n,r,i),
                    a.push(s)),
                    s
                }
                ,
                this.releaseProgram = function(t) {
                    if (0 == --t.usedTimes) {
                        var e = a.indexOf(t);
                        a[e] = a[a.length - 1],
                        a.pop(),
                        t.destroy()
                    }
                }
                ,
                this.programs = a
            }
            function pe(t, e, n, r, i, a, o) {
                function s(t, e) {
                    if (t.width > e || t.height > e) {
                        var n = e / Math.max(t.width, t.height)
                          , r = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                        return r.width = Math.floor(t.width * n),
                        r.height = Math.floor(t.height * n),
                        r.getContext("2d").drawImage(t, 0, 0, t.width, t.height, 0, 0, r.width, r.height),
                        console.warn("THREE.WebGLRenderer: image is too big (" + t.width + "x" + t.height + "). Resized to " + r.width + "x" + r.height, t),
                        r
                    }
                    return t
                }
                function l(t) {
                    return Go.isPowerOfTwo(t.width) && Go.isPowerOfTwo(t.height)
                }
                function c(t) {
                    if (t instanceof HTMLImageElement || t instanceof HTMLCanvasElement) {
                        var e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                        return e.width = Go.nearestPowerOfTwo(t.width),
                        e.height = Go.nearestPowerOfTwo(t.height),
                        e.getContext("2d").drawImage(t, 0, 0, e.width, e.height),
                        console.warn("THREE.WebGLRenderer: image is not power of two (" + t.width + "x" + t.height + "). Resized to " + e.width + "x" + e.height, t),
                        e
                    }
                    return t
                }
                function u(t) {
                    return t.wrapS !== Wa || t.wrapT !== Wa || t.minFilter !== qa && t.minFilter !== Za
                }
                function h(t, e) {
                    return t.generateMipmaps && e && t.minFilter !== qa && t.minFilter !== Za
                }
                function d(e) {
                    return e === qa || e === Ya || e === $a ? t.NEAREST : t.LINEAR
                }
                function p(t) {
                    var e = t.target;
                    e.removeEventListener("dispose", p),
                    m(e),
                    o.textures--
                }
                function f(t) {
                    var e = t.target;
                    e.removeEventListener("dispose", f),
                    v(e),
                    o.textures--
                }
                function m(e) {
                    var n = r.get(e);
                    if (e.image && n.__image__webglTextureCube)
                        t.deleteTexture(n.__image__webglTextureCube);
                    else {
                        if (void 0 === n.__webglInit)
                            return;
                        t.deleteTexture(n.__webglTexture)
                    }
                    r.remove(e)
                }
                function v(e) {
                    var n = r.get(e)
                      , i = r.get(e.texture);
                    if (e) {
                        if (void 0 !== i.__webglTexture && t.deleteTexture(i.__webglTexture),
                        e.depthTexture && e.depthTexture.dispose(),
                        e.isWebGLRenderTargetCube)
                            for (var a = 0; a < 6; a++)
                                t.deleteFramebuffer(n.__webglFramebuffer[a]),
                                n.__webglDepthbuffer && t.deleteRenderbuffer(n.__webglDepthbuffer[a]);
                        else
                            t.deleteFramebuffer(n.__webglFramebuffer),
                            n.__webglDepthbuffer && t.deleteRenderbuffer(n.__webglDepthbuffer);
                        r.remove(e.texture),
                        r.remove(e)
                    }
                }
                function g(e, i) {
                    var a = r.get(e);
                    if (e.version > 0 && a.__version !== e.version) {
                        var o = e.image;
                        if (void 0 === o)
                            console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined", e);
                        else {
                            if (!1 !== o.complete)
                                return void x(a, e, i);
                            console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete", e)
                        }
                    }
                    n.activeTexture(t.TEXTURE0 + i),
                    n.bindTexture(t.TEXTURE_2D, a.__webglTexture)
                }
                function y(n, o, s) {
                    var l;
                    if (s ? (t.texParameteri(n, t.TEXTURE_WRAP_S, a.convert(o.wrapS)),
                    t.texParameteri(n, t.TEXTURE_WRAP_T, a.convert(o.wrapT)),
                    t.texParameteri(n, t.TEXTURE_MAG_FILTER, a.convert(o.magFilter)),
                    t.texParameteri(n, t.TEXTURE_MIN_FILTER, a.convert(o.minFilter))) : (t.texParameteri(n, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
                    t.texParameteri(n, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
                    o.wrapS === Wa && o.wrapT === Wa || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.", o),
                    t.texParameteri(n, t.TEXTURE_MAG_FILTER, d(o.magFilter)),
                    t.texParameteri(n, t.TEXTURE_MIN_FILTER, d(o.minFilter)),
                    o.minFilter !== qa && o.minFilter !== Za && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.", o)),
                    l = e.get("EXT_texture_filter_anisotropic")) {
                        if (o.type === ao && null === e.get("OES_texture_float_linear"))
                            return;
                        if (o.type === oo && null === e.get("OES_texture_half_float_linear"))
                            return;
                        (o.anisotropy > 1 || r.get(o).__currentAnisotropy) && (t.texParameterf(n, l.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(o.anisotropy, i.getMaxAnisotropy())),
                        r.get(o).__currentAnisotropy = o.anisotropy)
                    }
                }
                function x(e, r, d) {
                    void 0 === e.__webglInit && (e.__webglInit = !0,
                    r.addEventListener("dispose", p),
                    e.__webglTexture = t.createTexture(),
                    o.textures++),
                    n.activeTexture(t.TEXTURE0 + d),
                    n.bindTexture(t.TEXTURE_2D, e.__webglTexture),
                    t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, r.flipY),
                    t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r.premultiplyAlpha),
                    t.pixelStorei(t.UNPACK_ALIGNMENT, r.unpackAlignment);
                    var f = s(r.image, i.maxTextureSize);
                    u(r) && !1 === l(f) && (f = c(f));
                    var m = l(f)
                      , v = a.convert(r.format)
                      , g = a.convert(r.type);
                    y(t.TEXTURE_2D, r, m);
                    var x, b = r.mipmaps;
                    if (r.isDepthTexture) {
                        var _ = t.DEPTH_COMPONENT;
                        if (r.type === ao) {
                            if (!E)
                                throw new Error("Float Depth Texture only supported in WebGL2.0");
                            _ = t.DEPTH_COMPONENT32F
                        } else
                            E && (_ = t.DEPTH_COMPONENT16);
                        r.format === yo && _ === t.DEPTH_COMPONENT && r.type !== no && r.type !== io && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),
                        r.type = no,
                        g = a.convert(r.type)),
                        r.format === xo && (_ = t.DEPTH_STENCIL,
                        r.type !== uo && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),
                        r.type = uo,
                        g = a.convert(r.type))),
                        n.texImage2D(t.TEXTURE_2D, 0, _, f.width, f.height, 0, v, g, null)
                    } else if (r.isDataTexture)
                        if (b.length > 0 && m) {
                            for (var w = 0, M = b.length; w < M; w++)
                                x = b[w],
                                n.texImage2D(t.TEXTURE_2D, w, v, x.width, x.height, 0, v, g, x.data);
                            r.generateMipmaps = !1
                        } else
                            n.texImage2D(t.TEXTURE_2D, 0, v, f.width, f.height, 0, v, g, f.data);
                    else if (r.isCompressedTexture)
                        for (var w = 0, M = b.length; w < M; w++)
                            x = b[w],
                            r.format !== fo && r.format !== po ? n.getCompressedTextureFormats().indexOf(v) > -1 ? n.compressedTexImage2D(t.TEXTURE_2D, w, v, x.width, x.height, 0, x.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(t.TEXTURE_2D, w, v, x.width, x.height, 0, v, g, x.data);
                    else if (b.length > 0 && m) {
                        for (var w = 0, M = b.length; w < M; w++)
                            x = b[w],
                            n.texImage2D(t.TEXTURE_2D, w, v, v, g, x);
                        r.generateMipmaps = !1
                    } else
                        n.texImage2D(t.TEXTURE_2D, 0, v, v, g, f);
                    h(r, m) && t.generateMipmap(t.TEXTURE_2D),
                    e.__version = r.version,
                    r.onUpdate && r.onUpdate(r)
                }
                function b(e, i, o, s) {
                    var l = a.convert(i.texture.format)
                      , c = a.convert(i.texture.type);
                    n.texImage2D(s, 0, l, i.width, i.height, 0, l, c, null),
                    t.bindFramebuffer(t.FRAMEBUFFER, e),
                    t.framebufferTexture2D(t.FRAMEBUFFER, o, s, r.get(i.texture).__webglTexture, 0),
                    t.bindFramebuffer(t.FRAMEBUFFER, null)
                }
                function _(e, n) {
                    t.bindRenderbuffer(t.RENDERBUFFER, e),
                    n.depthBuffer && !n.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_COMPONENT16, n.width, n.height),
                    t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.RENDERBUFFER, e)) : n.depthBuffer && n.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, n.width, n.height),
                    t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, e)) : t.renderbufferStorage(t.RENDERBUFFER, t.RGBA4, n.width, n.height),
                    t.bindRenderbuffer(t.RENDERBUFFER, null)
                }
                function w(e, n) {
                    if (n && n.isWebGLRenderTargetCube)
                        throw new Error("Depth Texture with cube render targets is not supported");
                    if (t.bindFramebuffer(t.FRAMEBUFFER, e),
                    !n.depthTexture || !n.depthTexture.isDepthTexture)
                        throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                    r.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width,
                    n.depthTexture.image.height = n.height,
                    n.depthTexture.needsUpdate = !0),
                    g(n.depthTexture, 0);
                    var i = r.get(n.depthTexture).__webglTexture;
                    if (n.depthTexture.format === yo)
                        t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, i, 0);
                    else {
                        if (n.depthTexture.format !== xo)
                            throw new Error("Unknown depthTexture format");
                        t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.TEXTURE_2D, i, 0)
                    }
                }
                function M(e) {
                    var n = r.get(e)
                      , i = !0 === e.isWebGLRenderTargetCube;
                    if (e.depthTexture) {
                        if (i)
                            throw new Error("target.depthTexture not supported in Cube render targets");
                        w(n.__webglFramebuffer, e)
                    } else if (i) {
                        n.__webglDepthbuffer = [];
                        for (var a = 0; a < 6; a++)
                            t.bindFramebuffer(t.FRAMEBUFFER, n.__webglFramebuffer[a]),
                            n.__webglDepthbuffer[a] = t.createRenderbuffer(),
                            _(n.__webglDepthbuffer[a], e)
                    } else
                        t.bindFramebuffer(t.FRAMEBUFFER, n.__webglFramebuffer),
                        n.__webglDepthbuffer = t.createRenderbuffer(),
                        _(n.__webglDepthbuffer, e);
                    t.bindFramebuffer(t.FRAMEBUFFER, null)
                }
                var E = "undefined" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext;
                this.setTexture2D = g,
                this.setTextureCube = function(e, c) {
                    var u = r.get(e);
                    if (6 === e.image.length)
                        if (e.version > 0 && u.__version !== e.version) {
                            u.__image__webglTextureCube || (e.addEventListener("dispose", p),
                            u.__image__webglTextureCube = t.createTexture(),
                            o.textures++),
                            n.activeTexture(t.TEXTURE0 + c),
                            n.bindTexture(t.TEXTURE_CUBE_MAP, u.__image__webglTextureCube),
                            t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY);
                            for (var d = e && e.isCompressedTexture, f = e.image[0] && e.image[0].isDataTexture, m = [], v = 0; v < 6; v++)
                                m[v] = d || f ? f ? e.image[v].image : e.image[v] : s(e.image[v], i.maxCubemapSize);
                            var g = l(m[0])
                              , x = a.convert(e.format)
                              , b = a.convert(e.type);
                            for (y(t.TEXTURE_CUBE_MAP, e, g),
                            v = 0; v < 6; v++)
                                if (d)
                                    for (var _, w = m[v].mipmaps, M = 0, E = w.length; M < E; M++)
                                        _ = w[M],
                                        e.format !== fo && e.format !== po ? n.getCompressedTextureFormats().indexOf(x) > -1 ? n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + v, M, x, _.width, _.height, 0, _.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + v, M, x, _.width, _.height, 0, x, b, _.data);
                                else
                                    f ? n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + v, 0, x, m[v].width, m[v].height, 0, x, b, m[v].data) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + v, 0, x, x, b, m[v]);
                            h(e, g) && t.generateMipmap(t.TEXTURE_CUBE_MAP),
                            u.__version = e.version,
                            e.onUpdate && e.onUpdate(e)
                        } else
                            n.activeTexture(t.TEXTURE0 + c),
                            n.bindTexture(t.TEXTURE_CUBE_MAP, u.__image__webglTextureCube)
                }
                ,
                this.setTextureCubeDynamic = function(e, i) {
                    n.activeTexture(t.TEXTURE0 + i),
                    n.bindTexture(t.TEXTURE_CUBE_MAP, r.get(e).__webglTexture)
                }
                ,
                this.setupRenderTarget = function(e) {
                    var i = r.get(e)
                      , a = r.get(e.texture);
                    e.addEventListener("dispose", f),
                    a.__webglTexture = t.createTexture(),
                    o.textures++;
                    var s = !0 === e.isWebGLRenderTargetCube
                      , c = l(e);
                    if (s)
                        for (i.__webglFramebuffer = [],
                        u = 0; u < 6; u++)
                            i.__webglFramebuffer[u] = t.createFramebuffer();
                    else
                        i.__webglFramebuffer = t.createFramebuffer();
                    if (s) {
                        n.bindTexture(t.TEXTURE_CUBE_MAP, a.__webglTexture),
                        y(t.TEXTURE_CUBE_MAP, e.texture, c);
                        for (var u = 0; u < 6; u++)
                            b(i.__webglFramebuffer[u], e, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + u);
                        h(e.texture, c) && t.generateMipmap(t.TEXTURE_CUBE_MAP),
                        n.bindTexture(t.TEXTURE_CUBE_MAP, null)
                    } else
                        n.bindTexture(t.TEXTURE_2D, a.__webglTexture),
                        y(t.TEXTURE_2D, e.texture, c),
                        b(i.__webglFramebuffer, e, t.COLOR_ATTACHMENT0, t.TEXTURE_2D),
                        h(e.texture, c) && t.generateMipmap(t.TEXTURE_2D),
                        n.bindTexture(t.TEXTURE_2D, null);
                    e.depthBuffer && M(e)
                }
                ,
                this.updateRenderTargetMipmap = function(e) {
                    var i = e.texture;
                    if (h(i, l(e))) {
                        var a = e.isWebGLRenderTargetCube ? t.TEXTURE_CUBE_MAP : t.TEXTURE_2D
                          , o = r.get(i).__webglTexture;
                        n.bindTexture(a, o),
                        t.generateMipmap(a),
                        n.bindTexture(a, null)
                    }
                }
            }
            function fe() {
                var t = {};
                return {
                    get: function(e) {
                        var n = e.uuid
                          , r = t[n];
                        return void 0 === r && (r = {},
                        t[n] = r),
                        r
                    },
                    remove: function(e) {
                        delete t[e.uuid]
                    },
                    clear: function() {
                        t = {}
                    }
                }
            }
            function me(t, e, n) {
                function r(e, n, r) {
                    var i = new Uint8Array(4)
                      , a = t.createTexture();
                    t.bindTexture(e, a),
                    t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.NEAREST),
                    t.texParameteri(e, t.TEXTURE_MAG_FILTER, t.NEAREST);
                    for (var o = 0; o < r; o++)
                        t.texImage2D(n + o, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, i);
                    return a
                }
                function a(e) {
                    !0 !== x[e] && (t.enable(e),
                    x[e] = !0)
                }
                function o(e) {
                    !1 !== x[e] && (t.disable(e),
                    x[e] = !1)
                }
                function s(e, r, i, s, l, c, u, h) {
                    if (e !== Qi ? a(t.BLEND) : o(t.BLEND),
                    e !== ia) {
                        if (e !== w || h !== R)
                            switch (e) {
                            case ea:
                                h ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                                t.blendFuncSeparate(t.ONE, t.ONE, t.ONE, t.ONE)) : (t.blendEquation(t.FUNC_ADD),
                                t.blendFunc(t.SRC_ALPHA, t.ONE));
                                break;
                            case na:
                                h ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                                t.blendFuncSeparate(t.ZERO, t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD),
                                t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR));
                                break;
                            case ra:
                                h ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                                t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD),
                                t.blendFunc(t.ZERO, t.SRC_COLOR));
                                break;
                            default:
                                h ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                                t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                                t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA))
                            }
                        M = null,
                        E = null,
                        T = null,
                        S = null,
                        A = null,
                        L = null
                    } else
                        l = l || r,
                        c = c || i,
                        u = u || s,
                        r === M && l === S || (t.blendEquationSeparate(n.convert(r), n.convert(l)),
                        M = r,
                        S = l),
                        i === E && s === T && c === A && u === L || (t.blendFuncSeparate(n.convert(i), n.convert(s), n.convert(c), n.convert(u)),
                        E = i,
                        T = s,
                        A = c,
                        L = u);
                    w = e,
                    R = h
                }
                function l(e) {
                    P !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW),
                    P = e)
                }
                function c(e) {
                    e !== ji ? (a(t.CULL_FACE),
                    e !== C && (e === Hi ? t.cullFace(t.BACK) : e === Gi ? t.cullFace(t.FRONT) : t.cullFace(t.FRONT_AND_BACK))) : o(t.CULL_FACE),
                    C = e
                }
                function u(e, n, r) {
                    e ? (a(t.POLYGON_OFFSET_FILL),
                    O === n && N === r || (t.polygonOffset(n, r),
                    O = n,
                    N = r)) : o(t.POLYGON_OFFSET_FILL)
                }
                function h(e) {
                    void 0 === e && (e = t.TEXTURE0 + D - 1),
                    B !== e && (t.activeTexture(e),
                    B = e)
                }
                var d = new function() {
                    var e = !1
                      , n = new i
                      , r = null
                      , a = new i(0,0,0,0);
                    return {
                        setMask: function(n) {
                            r === n || e || (t.colorMask(n, n, n, n),
                            r = n)
                        },
                        setLocked: function(t) {
                            e = t
                        },
                        setClear: function(e, r, i, o, s) {
                            !0 === s && (e *= o,
                            r *= o,
                            i *= o),
                            n.set(e, r, i, o),
                            !1 === a.equals(n) && (t.clearColor(e, r, i, o),
                            a.copy(n))
                        },
                        reset: function() {
                            e = !1,
                            r = null,
                            a.set(-1, 0, 0, 0)
                        }
                    }
                }
                  , p = new function() {
                    var e = !1
                      , n = null
                      , r = null
                      , i = null;
                    return {
                        setTest: function(e) {
                            e ? a(t.DEPTH_TEST) : o(t.DEPTH_TEST)
                        },
                        setMask: function(r) {
                            n === r || e || (t.depthMask(r),
                            n = r)
                        },
                        setFunc: function(e) {
                            if (r !== e) {
                                if (e)
                                    switch (e) {
                                    case _a:
                                        t.depthFunc(t.NEVER);
                                        break;
                                    case wa:
                                        t.depthFunc(t.ALWAYS);
                                        break;
                                    case Ma:
                                        t.depthFunc(t.LESS);
                                        break;
                                    case Ea:
                                        t.depthFunc(t.LEQUAL);
                                        break;
                                    case Ta:
                                        t.depthFunc(t.EQUAL);
                                        break;
                                    case Sa:
                                        t.depthFunc(t.GEQUAL);
                                        break;
                                    case Aa:
                                        t.depthFunc(t.GREATER);
                                        break;
                                    case La:
                                        t.depthFunc(t.NOTEQUAL);
                                        break;
                                    default:
                                        t.depthFunc(t.LEQUAL)
                                    }
                                else
                                    t.depthFunc(t.LEQUAL);
                                r = e
                            }
                        },
                        setLocked: function(t) {
                            e = t
                        },
                        setClear: function(e) {
                            i !== e && (t.clearDepth(e),
                            i = e)
                        },
                        reset: function() {
                            e = !1,
                            n = null,
                            r = null,
                            i = null
                        }
                    }
                }
                  , f = new function() {
                    var e = !1
                      , n = null
                      , r = null
                      , i = null
                      , s = null
                      , l = null
                      , c = null
                      , u = null
                      , h = null;
                    return {
                        setTest: function(e) {
                            e ? a(t.STENCIL_TEST) : o(t.STENCIL_TEST)
                        },
                        setMask: function(r) {
                            n === r || e || (t.stencilMask(r),
                            n = r)
                        },
                        setFunc: function(e, n, a) {
                            r === e && i === n && s === a || (t.stencilFunc(e, n, a),
                            r = e,
                            i = n,
                            s = a)
                        },
                        setOp: function(e, n, r) {
                            l === e && c === n && u === r || (t.stencilOp(e, n, r),
                            l = e,
                            c = n,
                            u = r)
                        },
                        setLocked: function(t) {
                            e = t
                        },
                        setClear: function(e) {
                            h !== e && (t.clearStencil(e),
                            h = e)
                        },
                        reset: function() {
                            e = !1,
                            n = null,
                            r = null,
                            i = null,
                            s = null,
                            l = null,
                            c = null,
                            u = null,
                            h = null
                        }
                    }
                }
                  , m = t.getParameter(t.MAX_VERTEX_ATTRIBS)
                  , v = new Uint8Array(m)
                  , g = new Uint8Array(m)
                  , y = new Uint8Array(m)
                  , x = {}
                  , b = null
                  , _ = null
                  , w = null
                  , M = null
                  , E = null
                  , T = null
                  , S = null
                  , A = null
                  , L = null
                  , R = !1
                  , P = null
                  , C = null
                  , I = null
                  , O = null
                  , N = null
                  , D = t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS)
                  , U = parseFloat(/^WebGL\ ([0-9])/.exec(t.getParameter(t.VERSION))[1])
                  , k = parseFloat(U) >= 1
                  , B = null
                  , F = {}
                  , z = new i
                  , j = new i
                  , H = {};
                return H[t.TEXTURE_2D] = r(t.TEXTURE_2D, t.TEXTURE_2D, 1),
                H[t.TEXTURE_CUBE_MAP] = r(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6),
                d.setClear(0, 0, 0, 1),
                p.setClear(1),
                f.setClear(0),
                a(t.DEPTH_TEST),
                p.setFunc(Ea),
                l(!1),
                c(Hi),
                a(t.CULL_FACE),
                a(t.BLEND),
                s(ta),
                {
                    buffers: {
                        color: d,
                        depth: p,
                        stencil: f
                    },
                    initAttributes: function() {
                        for (var t = 0, e = v.length; t < e; t++)
                            v[t] = 0
                    },
                    enableAttribute: function(n) {
                        v[n] = 1,
                        0 === g[n] && (t.enableVertexAttribArray(n),
                        g[n] = 1),
                        0 !== y[n] && (e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n, 0),
                        y[n] = 0)
                    },
                    enableAttributeAndDivisor: function(n, r) {
                        v[n] = 1,
                        0 === g[n] && (t.enableVertexAttribArray(n),
                        g[n] = 1),
                        y[n] !== r && (e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n, r),
                        y[n] = r)
                    },
                    disableUnusedAttributes: function() {
                        for (var e = 0, n = g.length; e !== n; ++e)
                            g[e] !== v[e] && (t.disableVertexAttribArray(e),
                            g[e] = 0)
                    },
                    enable: a,
                    disable: o,
                    getCompressedTextureFormats: function() {
                        if (null === b && (b = [],
                        e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1")))
                            for (var n = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS), r = 0; r < n.length; r++)
                                b.push(n[r]);
                        return b
                    },
                    useProgram: function(e) {
                        return _ !== e && (t.useProgram(e),
                        _ = e,
                        !0)
                    },
                    setBlending: s,
                    setMaterial: function(e) {
                        e.side === $i ? o(t.CULL_FACE) : a(t.CULL_FACE),
                        l(e.side === Yi),
                        !0 === e.transparent ? s(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha) : s(Qi),
                        p.setFunc(e.depthFunc),
                        p.setTest(e.depthTest),
                        p.setMask(e.depthWrite),
                        d.setMask(e.colorWrite),
                        u(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
                    },
                    setFlipSided: l,
                    setCullFace: c,
                    setLineWidth: function(e) {
                        e !== I && (k && t.lineWidth(e),
                        I = e)
                    },
                    setPolygonOffset: u,
                    setScissorTest: function(e) {
                        e ? a(t.SCISSOR_TEST) : o(t.SCISSOR_TEST)
                    },
                    activeTexture: h,
                    bindTexture: function(e, n) {
                        null === B && h();
                        var r = F[B];
                        void 0 === r && (r = {
                            type: void 0,
                            texture: void 0
                        },
                        F[B] = r),
                        r.type === e && r.texture === n || (t.bindTexture(e, n || H[e]),
                        r.type = e,
                        r.texture = n)
                    },
                    compressedTexImage2D: function() {
                        try {
                            t.compressedTexImage2D.apply(t, arguments)
                        } catch (t) {
                            console.error("THREE.WebGLState:", t)
                        }
                    },
                    texImage2D: function() {
                        try {
                            t.texImage2D.apply(t, arguments)
                        } catch (t) {
                            console.error("THREE.WebGLState:", t)
                        }
                    },
                    scissor: function(e) {
                        !1 === z.equals(e) && (t.scissor(e.x, e.y, e.z, e.w),
                        z.copy(e))
                    },
                    viewport: function(e) {
                        !1 === j.equals(e) && (t.viewport(e.x, e.y, e.z, e.w),
                        j.copy(e))
                    },
                    reset: function() {
                        for (var e = 0; e < g.length; e++)
                            1 === g[e] && (t.disableVertexAttribArray(e),
                            g[e] = 0);
                        x = {},
                        b = null,
                        B = null,
                        F = {},
                        _ = null,
                        w = null,
                        P = null,
                        C = null,
                        d.reset(),
                        p.reset(),
                        f.reset()
                    }
                }
            }
            function ve(t, e, n) {
                function r(e) {
                    if ("highp" === e) {
                        if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0)
                            return "highp";
                        e = "mediump"
                    }
                    return "mediump" === e && t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
                }
                var i, a = void 0 !== n.precision ? n.precision : "highp", o = r(a);
                o !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", o, "instead."),
                a = o);
                var s = !0 === n.logarithmicDepthBuffer && !!e.get("EXT_frag_depth")
                  , l = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)
                  , c = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)
                  , u = t.getParameter(t.MAX_TEXTURE_SIZE)
                  , h = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE)
                  , d = t.getParameter(t.MAX_VERTEX_ATTRIBS)
                  , p = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS)
                  , f = t.getParameter(t.MAX_VARYING_VECTORS)
                  , m = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS)
                  , v = c > 0
                  , g = !!e.get("OES_texture_float");
                return {
                    getMaxAnisotropy: function() {
                        if (void 0 !== i)
                            return i;
                        var n = e.get("EXT_texture_filter_anisotropic");
                        return i = null !== n ? t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
                    },
                    getMaxPrecision: r,
                    precision: a,
                    logarithmicDepthBuffer: s,
                    maxTextures: l,
                    maxVertexTextures: c,
                    maxTextureSize: u,
                    maxCubemapSize: h,
                    maxAttributes: d,
                    maxVertexUniforms: p,
                    maxVaryings: f,
                    maxFragmentUniforms: m,
                    vertexTextures: v,
                    floatFragmentTextures: g,
                    floatVertexTextures: v && g
                }
            }
            function ge(t) {
                pt.call(this),
                this.cameras = t || []
            }
            function ye(t) {
                function e() {
                    if (null !== r && r.isPresenting) {
                        var e = r.getEyeParameters("left")
                          , i = e.renderWidth
                          , a = e.renderHeight;
                        f = t.getPixelRatio(),
                        p = t.getSize(),
                        t.setDrawingBufferSize(2 * i, a, 1)
                    } else
                        n.enabled && t.setDrawingBufferSize(p.width, p.height, f)
                }
                var n = this
                  , r = null
                  , a = null;
                "VRFrameData"in window && (a = new window.VRFrameData);
                var o = new c
                  , s = new c
                  , l = new c
                  , u = new pt;
                u.bounds = new i(0,0,.5,1),
                u.layers.enable(1);
                var h = new pt;
                h.bounds = new i(.5,0,.5,1),
                h.layers.enable(2);
                var d = new ge([u, h]);
                d.layers.enable(1),
                d.layers.enable(2);
                var p, f;
                window.addEventListener("vrdisplaypresentchange", e, !1),
                this.enabled = !1,
                this.standing = !1,
                this.getDevice = function() {
                    return r
                }
                ,
                this.setDevice = function(t) {
                    void 0 !== t && (r = t)
                }
                ,
                this.getCamera = function(t) {
                    if (null === r)
                        return t;
                    r.depthNear = t.near,
                    r.depthFar = t.far,
                    r.getFrameData(a);
                    var e = a.pose;
                    null !== e.position ? t.position.fromArray(e.position) : t.position.set(0, 0, 0),
                    null !== e.orientation && t.quaternion.fromArray(e.orientation),
                    t.updateMatrixWorld();
                    var n = r.stageParameters;
                    if (this.standing && n && (s.fromArray(n.sittingToStandingTransform),
                    l.getInverse(s),
                    t.matrixWorld.multiply(s),
                    t.matrixWorldInverse.multiply(l)),
                    !1 === r.isPresenting)
                        return t;
                    u.near = t.near,
                    h.near = t.near,
                    u.far = t.far,
                    h.far = t.far,
                    d.matrixWorld.copy(t.matrixWorld),
                    d.matrixWorldInverse.copy(t.matrixWorldInverse),
                    u.matrixWorldInverse.fromArray(a.leftViewMatrix),
                    h.matrixWorldInverse.fromArray(a.rightViewMatrix),
                    this.standing && n && (u.matrixWorldInverse.multiply(l),
                    h.matrixWorldInverse.multiply(l));
                    var i = t.parent;
                    null !== i && (o.getInverse(i.matrixWorld),
                    u.matrixWorldInverse.multiply(o),
                    h.matrixWorldInverse.multiply(o)),
                    u.matrixWorld.getInverse(u.matrixWorldInverse),
                    h.matrixWorld.getInverse(h.matrixWorldInverse),
                    u.projectionMatrix.fromArray(a.leftProjectionMatrix),
                    h.projectionMatrix.fromArray(a.rightProjectionMatrix),
                    d.projectionMatrix.copy(u.projectionMatrix);
                    var c = r.getLayers();
                    if (c.length) {
                        var p = c[0];
                        null !== p.leftBounds && 4 === p.leftBounds.length && u.bounds.fromArray(p.leftBounds),
                        null !== p.rightBounds && 4 === p.rightBounds.length && h.bounds.fromArray(p.rightBounds)
                    }
                    return d
                }
                ,
                this.getStandingMatrix = function() {
                    return s
                }
                ,
                this.submitFrame = function() {
                    r && r.isPresenting && r.submitFrame()
                }
                ,
                this.dispose = function() {
                    window.removeEventListener("vrdisplaypresentchange", e)
                }
            }
            function xe(t) {
                var e = {};
                return {
                    get: function(n) {
                        if (void 0 !== e[n])
                            return e[n];
                        var r;
                        switch (n) {
                        case "WEBGL_depth_texture":
                            r = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                            break;
                        case "EXT_texture_filter_anisotropic":
                            r = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                            break;
                        case "WEBGL_compressed_texture_s3tc":
                            r = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                            break;
                        case "WEBGL_compressed_texture_pvrtc":
                            r = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                            break;
                        case "WEBGL_compressed_texture_etc1":
                            r = t.getExtension("WEBGL_compressed_texture_etc1");
                            break;
                        default:
                            r = t.getExtension(n)
                        }
                        return null === r && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."),
                        e[n] = r,
                        r
                    }
                }
            }
            function be() {
                function t() {
                    c.value !== r && (c.value = r,
                    c.needsUpdate = i > 0),
                    n.numPlanes = i,
                    n.numIntersection = 0
                }
                function e(t, e, r, i) {
                    var a = null !== t ? t.length : 0
                      , o = null;
                    if (0 !== a) {
                        if (o = c.value,
                        !0 !== i || null === o) {
                            var u = r + 4 * a
                              , h = e.matrixWorldInverse;
                            l.getNormalMatrix(h),
                            (null === o || o.length < u) && (o = new Float32Array(u));
                            for (var d = 0, p = r; d !== a; ++d,
                            p += 4)
                                s.copy(t[d]).applyMatrix4(h, l),
                                s.normal.toArray(o, p),
                                o[p + 3] = s.constant
                        }
                        c.value = o,
                        c.needsUpdate = !0
                    }
                    return n.numPlanes = a,
                    o
                }
                var n = this
                  , r = null
                  , i = 0
                  , a = !1
                  , o = !1
                  , s = new it
                  , l = new rt
                  , c = {
                    value: null,
                    needsUpdate: !1
                };
                this.uniform = c,
                this.numPlanes = 0,
                this.numIntersection = 0,
                this.init = function(t, n, o) {
                    var s = 0 !== t.length || n || 0 !== i || a;
                    return a = n,
                    r = e(t, o, 0),
                    i = t.length,
                    s
                }
                ,
                this.beginShadows = function() {
                    o = !0,
                    e(null)
                }
                ,
                this.endShadows = function() {
                    o = !1,
                    t()
                }
                ,
                this.setState = function(n, s, l, u, h, d) {
                    if (!a || null === n || 0 === n.length || o && !l)
                        o ? e(null) : t();
                    else {
                        var p = o ? 0 : i
                          , f = 4 * p
                          , m = h.clippingState || null;
                        c.value = m,
                        m = e(n, u, f, d);
                        for (var v = 0; v !== f; ++v)
                            m[v] = r[v];
                        h.clippingState = m,
                        this.numIntersection = s ? this.numPlanes : 0,
                        this.numPlanes += p
                    }
                }
            }
            function _e(t, e) {
                return {
                    convert: function(n) {
                        var r;
                        if (n === Va)
                            return t.REPEAT;
                        if (n === Wa)
                            return t.CLAMP_TO_EDGE;
                        if (n === Xa)
                            return t.MIRRORED_REPEAT;
                        if (n === qa)
                            return t.NEAREST;
                        if (n === Ya)
                            return t.NEAREST_MIPMAP_NEAREST;
                        if (n === $a)
                            return t.NEAREST_MIPMAP_LINEAR;
                        if (n === Za)
                            return t.LINEAR;
                        if (n === Ja)
                            return t.LINEAR_MIPMAP_NEAREST;
                        if (n === Ka)
                            return t.LINEAR_MIPMAP_LINEAR;
                        if (n === Qa)
                            return t.UNSIGNED_BYTE;
                        if (n === so)
                            return t.UNSIGNED_SHORT_4_4_4_4;
                        if (n === lo)
                            return t.UNSIGNED_SHORT_5_5_5_1;
                        if (n === co)
                            return t.UNSIGNED_SHORT_5_6_5;
                        if (n === to)
                            return t.BYTE;
                        if (n === eo)
                            return t.SHORT;
                        if (n === no)
                            return t.UNSIGNED_SHORT;
                        if (n === ro)
                            return t.INT;
                        if (n === io)
                            return t.UNSIGNED_INT;
                        if (n === ao)
                            return t.FLOAT;
                        if (n === oo && null !== (r = e.get("OES_texture_half_float")))
                            return r.HALF_FLOAT_OES;
                        if (n === ho)
                            return t.ALPHA;
                        if (n === po)
                            return t.RGB;
                        if (n === fo)
                            return t.RGBA;
                        if (n === mo)
                            return t.LUMINANCE;
                        if (n === vo)
                            return t.LUMINANCE_ALPHA;
                        if (n === yo)
                            return t.DEPTH_COMPONENT;
                        if (n === xo)
                            return t.DEPTH_STENCIL;
                        if (n === aa)
                            return t.FUNC_ADD;
                        if (n === oa)
                            return t.FUNC_SUBTRACT;
                        if (n === sa)
                            return t.FUNC_REVERSE_SUBTRACT;
                        if (n === ua)
                            return t.ZERO;
                        if (n === ha)
                            return t.ONE;
                        if (n === da)
                            return t.SRC_COLOR;
                        if (n === pa)
                            return t.ONE_MINUS_SRC_COLOR;
                        if (n === fa)
                            return t.SRC_ALPHA;
                        if (n === ma)
                            return t.ONE_MINUS_SRC_ALPHA;
                        if (n === va)
                            return t.DST_ALPHA;
                        if (n === ga)
                            return t.ONE_MINUS_DST_ALPHA;
                        if (n === ya)
                            return t.DST_COLOR;
                        if (n === xa)
                            return t.ONE_MINUS_DST_COLOR;
                        if (n === ba)
                            return t.SRC_ALPHA_SATURATE;
                        if ((n === bo || n === _o || n === wo || n === Mo) && null !== (r = e.get("WEBGL_compressed_texture_s3tc"))) {
                            if (n === bo)
                                return r.COMPRESSED_RGB_S3TC_DXT1_EXT;
                            if (n === _o)
                                return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                            if (n === wo)
                                return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                            if (n === Mo)
                                return r.COMPRESSED_RGBA_S3TC_DXT5_EXT
                        }
                        if ((n === Eo || n === To || n === So || n === Ao) && null !== (r = e.get("WEBGL_compressed_texture_pvrtc"))) {
                            if (n === Eo)
                                return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                            if (n === To)
                                return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                            if (n === So)
                                return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                            if (n === Ao)
                                return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                        }
                        if (n === Lo && null !== (r = e.get("WEBGL_compressed_texture_etc1")))
                            return r.COMPRESSED_RGB_ETC1_WEBGL;
                        if ((n === la || n === ca) && null !== (r = e.get("EXT_blend_minmax"))) {
                            if (n === la)
                                return r.MIN_EXT;
                            if (n === ca)
                                return r.MAX_EXT
                        }
                        return n === uo && null !== (r = e.get("WEBGL_depth_texture")) ? r.UNSIGNED_INT_24_8_WEBGL : 0
                    }
                }
            }
            function we(t) {
                function e() {
                    return null === Q ? ft : 1
                }
                function n() {
                    (Lt = new xe(St)).get("WEBGL_depth_texture"),
                    Lt.get("OES_texture_float"),
                    Lt.get("OES_texture_float_linear"),
                    Lt.get("OES_texture_half_float"),
                    Lt.get("OES_texture_half_float_linear"),
                    Lt.get("OES_standard_derivatives"),
                    Lt.get("ANGLE_instanced_arrays"),
                    Lt.get("OES_element_index_uint") && (Rt.MaxIndex = 4294967296),
                    te = new _e(St,Lt),
                    Pt = new ve(St,Lt,t),
                    (Ct = new me(St,Lt,te)).scissor(ct.copy(vt).multiplyScalar(ft)),
                    Ct.viewport(lt.copy(mt).multiplyScalar(ft)),
                    It = new fe,
                    Ot = new pe(St,Lt,Ct,It,Pt,te,Et),
                    Nt = new st(St),
                    Dt = new Yt(St,Nt,Et),
                    Ut = new Jt(Dt,Tt),
                    Ht = new Wt(St),
                    Bt = new de(J,Lt,Pt),
                    kt = new Zt,
                    zt = new Gt,
                    jt = new Ft(J,Ct,Dt,j),
                    Vt = new qt(St,Lt,Tt),
                    $t = new Xt(St,Lt,Tt),
                    Kt = new Y(J,St,Ct,Ot,Pt),
                    Qt = new Z(J,St,Ct,Ot,Pt),
                    J.info.programs = Bt.programs,
                    J.context = St,
                    J.capabilities = Pt,
                    J.extensions = Lt,
                    J.properties = It,
                    J.renderLists = zt,
                    J.state = Ct
                }
                function r(t) {
                    t.preventDefault(),
                    console.log("THREE.WebGLRenderer: Context Lost."),
                    K = !0
                }
                function a(t) {
                    console.log("THREE.WebGLRenderer: Context Restored."),
                    K = !1,
                    n()
                }
                function o(t) {
                    var e = t.target;
                    e.removeEventListener("dispose", o),
                    s(e)
                }
                function s(t) {
                    h(t),
                    It.remove(t)
                }
                function h(t) {
                    var e = It.get(t).program;
                    t.program = void 0,
                    void 0 !== e && Bt.releaseProgram(e)
                }
                function d(t, e, n) {
                    t.render(function(t) {
                        J.renderBufferImmediate(t, e, n)
                    })
                }
                function p(t, e, n, r) {
                    if (n && n.isInstancedBufferGeometry && null === Lt.get("ANGLE_instanced_arrays"))
                        console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                    else {
                        void 0 === r && (r = 0),
                        Ct.initAttributes();
                        var i = n.attributes
                          , a = e.getAttributes()
                          , o = t.defaultAttributeValues;
                        for (var s in a) {
                            var l = a[s];
                            if (l >= 0) {
                                var c = i[s];
                                if (void 0 !== c) {
                                    var u = c.normalized
                                      , h = c.itemSize
                                      , d = Nt.get(c);
                                    if (void 0 === d)
                                        continue;
                                    var p = d.buffer
                                      , f = d.type
                                      , m = d.bytesPerElement;
                                    if (c.isInterleavedBufferAttribute) {
                                        var v = c.data
                                          , g = v.stride
                                          , y = c.offset;
                                        v && v.isInstancedInterleavedBuffer ? (Ct.enableAttributeAndDivisor(l, v.meshPerAttribute),
                                        void 0 === n.maxInstancedCount && (n.maxInstancedCount = v.meshPerAttribute * v.count)) : Ct.enableAttribute(l),
                                        St.bindBuffer(St.ARRAY_BUFFER, p),
                                        St.vertexAttribPointer(l, h, f, u, g * m, (r * g + y) * m)
                                    } else
                                        c.isInstancedBufferAttribute ? (Ct.enableAttributeAndDivisor(l, c.meshPerAttribute),
                                        void 0 === n.maxInstancedCount && (n.maxInstancedCount = c.meshPerAttribute * c.count)) : Ct.enableAttribute(l),
                                        St.bindBuffer(St.ARRAY_BUFFER, p),
                                        St.vertexAttribPointer(l, h, f, u, 0, r * h * m)
                                } else if (void 0 !== o) {
                                    var x = o[s];
                                    if (void 0 !== x)
                                        switch (x.length) {
                                        case 2:
                                            St.vertexAttrib2fv(l, x);
                                            break;
                                        case 3:
                                            St.vertexAttrib3fv(l, x);
                                            break;
                                        case 4:
                                            St.vertexAttrib4fv(l, x);
                                            break;
                                        default:
                                            St.vertexAttrib1fv(l, x)
                                        }
                                }
                            }
                        }
                        Ct.disableUnusedAttributes()
                    }
                }
                function f() {
                    re || ((ee.getDevice() || window).requestAnimationFrame(m),
                    re = !0)
                }
                function m(t) {
                    null !== ie && ie(t),
                    (ee.getDevice() || window).requestAnimationFrame(m)
                }
                function v(t, e, n) {
                    if (t.visible) {
                        if (t.layers.test(e.layers))
                            if (t.isLight)
                                G.push(t),
                                t.castShadow && V.push(t);
                            else if (t.isSprite)
                                t.frustumCulled && !yt.intersectsSprite(t) || q.push(t);
                            else if (t.isLensFlare)
                                $.push(t);
                            else if (t.isImmediateRenderObject)
                                n && Mt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(wt),
                                X.push(t, null, t.material, Mt.z, null);
                            else if ((t.isMesh || t.isLine || t.isPoints) && (t.isSkinnedMesh && t.skeleton.update(),
                            !t.frustumCulled || yt.intersectsObject(t))) {
                                n && Mt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(wt);
                                var r = Ut.update(t)
                                  , i = t.material;
                                if (Array.isArray(i))
                                    for (var a = r.groups, o = 0, s = a.length; o < s; o++) {
                                        var l = a[o]
                                          , c = i[l.materialIndex];
                                        c && c.visible && X.push(t, r, c, Mt.z, l)
                                    }
                                else
                                    i.visible && X.push(t, r, i, Mt.z, null)
                            }
                        for (var u = t.children, o = 0, s = u.length; o < s; o++)
                            v(u[o], e, n)
                    }
                }
                function g(t, e, n, r) {
                    for (var i = 0, a = t.length; i < a; i++) {
                        var o = t[i]
                          , s = o.object
                          , l = o.geometry
                          , c = void 0 === r ? o.material : r
                          , u = o.group;
                        if (n.isArrayCamera) {
                            it = n;
                            for (var h = n.cameras, d = 0, p = h.length; d < p; d++) {
                                var f = h[d];
                                if (s.layers.test(f.layers)) {
                                    var m = f.bounds
                                      , v = m.x * dt
                                      , g = m.y * pt
                                      , x = m.z * dt
                                      , b = m.w * pt;
                                    Ct.viewport(lt.set(v, g, x, b).multiplyScalar(ft)),
                                    y(s, e, f, l, c, u)
                                }
                            }
                        } else
                            it = null,
                            y(s, e, n, l, c, u)
                    }
                }
                function y(t, e, n, r, i, a) {
                    if (t.onBeforeRender(J, e, n, r, i, a),
                    t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, t.matrixWorld),
                    t.normalMatrix.getNormalMatrix(t.modelViewMatrix),
                    t.isImmediateRenderObject) {
                        Ct.setMaterial(i);
                        var o = b(n, e.fog, i, t);
                        nt = "",
                        d(t, o, i)
                    } else
                        J.renderBufferDirect(n, e.fog, r, i, t, a);
                    t.onAfterRender(J, e, n, r, i, a)
                }
                function x(t, e, n) {
                    var r = It.get(t)
                      , i = Bt.getParameters(t, kt.state, V, e, xt.numPlanes, xt.numIntersection, n)
                      , a = Bt.getProgramCode(t, i)
                      , s = r.program
                      , l = !0;
                    if (void 0 === s)
                        t.addEventListener("dispose", o);
                    else if (s.code !== a)
                        h(t);
                    else {
                        if (void 0 !== i.shaderID)
                            return;
                        l = !1
                    }
                    if (l) {
                        if (i.shaderID) {
                            var c = ns[i.shaderID];
                            r.shader = {
                                name: t.type,
                                uniforms: ts.clone(c.uniforms),
                                vertexShader: c.vertexShader,
                                fragmentShader: c.fragmentShader
                            }
                        } else
                            r.shader = {
                                name: t.type,
                                uniforms: t.uniforms,
                                vertexShader: t.vertexShader,
                                fragmentShader: t.fragmentShader
                            };
                        t.onBeforeCompile(r.shader),
                        s = Bt.acquireProgram(t, r.shader, i, a),
                        r.program = s,
                        t.program = s
                    }
                    var u = s.getAttributes();
                    if (t.morphTargets) {
                        t.numSupportedMorphTargets = 0;
                        for (d = 0; d < J.maxMorphTargets; d++)
                            u["morphTarget" + d] >= 0 && t.numSupportedMorphTargets++
                    }
                    if (t.morphNormals) {
                        t.numSupportedMorphNormals = 0;
                        for (var d = 0; d < J.maxMorphNormals; d++)
                            u["morphNormal" + d] >= 0 && t.numSupportedMorphNormals++
                    }
                    var p = r.shader.uniforms;
                    (t.isShaderMaterial || t.isRawShaderMaterial) && !0 !== t.clipping || (r.numClippingPlanes = xt.numPlanes,
                    r.numIntersection = xt.numIntersection,
                    p.clippingPlanes = xt.uniform),
                    r.fog = e,
                    r.lightsHash = kt.state.hash,
                    t.lights && (p.ambientLightColor.value = kt.state.ambient,
                    p.directionalLights.value = kt.state.directional,
                    p.spotLights.value = kt.state.spot,
                    p.rectAreaLights.value = kt.state.rectArea,
                    p.pointLights.value = kt.state.point,
                    p.hemisphereLights.value = kt.state.hemi,
                    p.directionalShadowMap.value = kt.state.directionalShadowMap,
                    p.directionalShadowMatrix.value = kt.state.directionalShadowMatrix,
                    p.spotShadowMap.value = kt.state.spotShadowMap,
                    p.spotShadowMatrix.value = kt.state.spotShadowMatrix,
                    p.pointShadowMap.value = kt.state.pointShadowMap,
                    p.pointShadowMatrix.value = kt.state.pointShadowMatrix);
                    var f = r.program.getUniforms()
                      , m = W.seqWithValue(f.seq, p);
                    r.uniformsList = m
                }
                function b(t, e, n, r) {
                    ht = 0;
                    var i = It.get(n);
                    if (bt && (_t || t !== rt)) {
                        var a = t === rt && n.id === et;
                        xt.setState(n.clippingPlanes, n.clipIntersection, n.clipShadows, t, i, a)
                    }
                    !1 === n.needsUpdate && (void 0 === i.program ? n.needsUpdate = !0 : n.fog && i.fog !== e ? n.needsUpdate = !0 : n.lights && i.lightsHash !== kt.state.hash ? n.needsUpdate = !0 : void 0 === i.numClippingPlanes || i.numClippingPlanes === xt.numPlanes && i.numIntersection === xt.numIntersection || (n.needsUpdate = !0)),
                    n.needsUpdate && (x(n, e, r),
                    n.needsUpdate = !1);
                    var o = !1
                      , s = !1
                      , l = !1
                      , c = i.program
                      , h = c.getUniforms()
                      , d = i.shader.uniforms;
                    if (Ct.useProgram(c.program) && (o = !0,
                    s = !0,
                    l = !0),
                    n.id !== et && (et = n.id,
                    s = !0),
                    o || t !== rt) {
                        if (h.setValue(St, "projectionMatrix", t.projectionMatrix),
                        Pt.logarithmicDepthBuffer && h.setValue(St, "logDepthBufFC", 2 / (Math.log(t.far + 1) / Math.LN2)),
                        rt !== (it || t) && (rt = it || t,
                        s = !0,
                        l = !0),
                        n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshStandardMaterial || n.envMap) {
                            var p = h.map.cameraPosition;
                            void 0 !== p && p.setValue(St, Mt.setFromMatrixPosition(t.matrixWorld))
                        }
                        (n.isMeshPhongMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.skinning) && h.setValue(St, "viewMatrix", t.matrixWorldInverse)
                    }
                    if (n.skinning) {
                        h.setOptional(St, r, "bindMatrix"),
                        h.setOptional(St, r, "bindMatrixInverse");
                        var f = r.skeleton;
                        if (f) {
                            var m = f.bones;
                            if (Pt.floatVertexTextures) {
                                if (void 0 === f.boneTexture) {
                                    var v = Math.sqrt(4 * m.length);
                                    v = Go.nextPowerOfTwo(Math.ceil(v)),
                                    v = Math.max(v, 4);
                                    var g = new Float32Array(v * v * 4);
                                    g.set(f.boneMatrices);
                                    var y = new u(g,v,v,fo,ao);
                                    f.boneMatrices = g,
                                    f.boneTexture = y,
                                    f.boneTextureSize = v
                                }
                                h.setValue(St, "boneTexture", f.boneTexture),
                                h.setValue(St, "boneTextureSize", f.boneTextureSize)
                            } else
                                h.setOptional(St, f, "boneMatrices")
                        }
                    }
                    return s && (h.setValue(St, "toneMappingExposure", J.toneMappingExposure),
                    h.setValue(St, "toneMappingWhitePoint", J.toneMappingWhitePoint),
                    n.lights && N(d, l),
                    e && n.fog && T(d, e),
                    n.isMeshBasicMaterial ? _(d, n) : n.isMeshLambertMaterial ? (_(d, n),
                    S(d, n)) : n.isMeshPhongMaterial ? (_(d, n),
                    n.isMeshToonMaterial ? L(d, n) : A(d, n)) : n.isMeshStandardMaterial ? (_(d, n),
                    n.isMeshPhysicalMaterial ? P(d, n) : R(d, n)) : n.isMeshDepthMaterial ? (_(d, n),
                    C(d, n)) : n.isMeshDistanceMaterial ? (_(d, n),
                    I(d, n)) : n.isMeshNormalMaterial ? (_(d, n),
                    O(d, n)) : n.isLineBasicMaterial ? (w(d, n),
                    n.isLineDashedMaterial && M(d, n)) : n.isPointsMaterial ? E(d, n) : n.isShadowMaterial && (d.color.value = n.color,
                    d.opacity.value = n.opacity),
                    void 0 !== d.ltcMat && (d.ltcMat.value = Qo.LTC_MAT_TEXTURE),
                    void 0 !== d.ltcMag && (d.ltcMag.value = Qo.LTC_MAG_TEXTURE),
                    W.upload(St, i.uniformsList, d, J)),
                    h.setValue(St, "modelViewMatrix", r.modelViewMatrix),
                    h.setValue(St, "normalMatrix", r.normalMatrix),
                    h.setValue(St, "modelMatrix", r.matrixWorld),
                    c
                }
                function _(t, e) {
                    t.opacity.value = e.opacity,
                    e.color && (t.diffuse.value = e.color),
                    e.emissive && t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),
                    e.map && (t.map.value = e.map),
                    e.alphaMap && (t.alphaMap.value = e.alphaMap),
                    e.specularMap && (t.specularMap.value = e.specularMap),
                    e.envMap && (t.envMap.value = e.envMap,
                    t.flipEnvMap.value = e.envMap && e.envMap.isCubeTexture ? -1 : 1,
                    t.reflectivity.value = e.reflectivity,
                    t.refractionRatio.value = e.refractionRatio),
                    e.lightMap && (t.lightMap.value = e.lightMap,
                    t.lightMapIntensity.value = e.lightMapIntensity),
                    e.aoMap && (t.aoMap.value = e.aoMap,
                    t.aoMapIntensity.value = e.aoMapIntensity);
                    var n;
                    if (e.map ? n = e.map : e.specularMap ? n = e.specularMap : e.displacementMap ? n = e.displacementMap : e.normalMap ? n = e.normalMap : e.bumpMap ? n = e.bumpMap : e.roughnessMap ? n = e.roughnessMap : e.metalnessMap ? n = e.metalnessMap : e.alphaMap ? n = e.alphaMap : e.emissiveMap && (n = e.emissiveMap),
                    void 0 !== n) {
                        n.isWebGLRenderTarget && (n = n.texture);
                        var r = n.offset
                          , i = n.repeat;
                        t.offsetRepeat.value.set(r.x, r.y, i.x, i.y)
                    }
                }
                function w(t, e) {
                    t.diffuse.value = e.color,
                    t.opacity.value = e.opacity
                }
                function M(t, e) {
                    t.dashSize.value = e.dashSize,
                    t.totalSize.value = e.dashSize + e.gapSize,
                    t.scale.value = e.scale
                }
                function E(t, e) {
                    if (t.diffuse.value = e.color,
                    t.opacity.value = e.opacity,
                    t.size.value = e.size * ft,
                    t.scale.value = .5 * pt,
                    t.map.value = e.map,
                    null !== e.map) {
                        var n = e.map.offset
                          , r = e.map.repeat;
                        t.offsetRepeat.value.set(n.x, n.y, r.x, r.y)
                    }
                }
                function T(t, e) {
                    t.fogColor.value = e.color,
                    e.isFog ? (t.fogNear.value = e.near,
                    t.fogFar.value = e.far) : e.isFogExp2 && (t.fogDensity.value = e.density)
                }
                function S(t, e) {
                    e.emissiveMap && (t.emissiveMap.value = e.emissiveMap)
                }
                function A(t, e) {
                    t.specular.value = e.specular,
                    t.shininess.value = Math.max(e.shininess, 1e-4),
                    e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
                    e.bumpMap && (t.bumpMap.value = e.bumpMap,
                    t.bumpScale.value = e.bumpScale),
                    e.normalMap && (t.normalMap.value = e.normalMap,
                    t.normalScale.value.copy(e.normalScale)),
                    e.displacementMap && (t.displacementMap.value = e.displacementMap,
                    t.displacementScale.value = e.displacementScale,
                    t.displacementBias.value = e.displacementBias)
                }
                function L(t, e) {
                    A(t, e),
                    e.gradientMap && (t.gradientMap.value = e.gradientMap)
                }
                function R(t, e) {
                    t.roughness.value = e.roughness,
                    t.metalness.value = e.metalness,
                    e.roughnessMap && (t.roughnessMap.value = e.roughnessMap),
                    e.metalnessMap && (t.metalnessMap.value = e.metalnessMap),
                    e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
                    e.bumpMap && (t.bumpMap.value = e.bumpMap,
                    t.bumpScale.value = e.bumpScale),
                    e.normalMap && (t.normalMap.value = e.normalMap,
                    t.normalScale.value.copy(e.normalScale)),
                    e.displacementMap && (t.displacementMap.value = e.displacementMap,
                    t.displacementScale.value = e.displacementScale,
                    t.displacementBias.value = e.displacementBias),
                    e.envMap && (t.envMapIntensity.value = e.envMapIntensity)
                }
                function P(t, e) {
                    t.clearCoat.value = e.clearCoat,
                    t.clearCoatRoughness.value = e.clearCoatRoughness,
                    R(t, e)
                }
                function C(t, e) {
                    e.displacementMap && (t.displacementMap.value = e.displacementMap,
                    t.displacementScale.value = e.displacementScale,
                    t.displacementBias.value = e.displacementBias)
                }
                function I(t, e) {
                    e.displacementMap && (t.displacementMap.value = e.displacementMap,
                    t.displacementScale.value = e.displacementScale,
                    t.displacementBias.value = e.displacementBias),
                    t.referencePosition.value.copy(e.referencePosition),
                    t.nearDistance.value = e.nearDistance,
                    t.farDistance.value = e.farDistance
                }
                function O(t, e) {
                    e.bumpMap && (t.bumpMap.value = e.bumpMap,
                    t.bumpScale.value = e.bumpScale),
                    e.normalMap && (t.normalMap.value = e.normalMap,
                    t.normalScale.value.copy(e.normalScale)),
                    e.displacementMap && (t.displacementMap.value = e.displacementMap,
                    t.displacementScale.value = e.displacementScale,
                    t.displacementBias.value = e.displacementBias)
                }
                function N(t, e) {
                    t.ambientLightColor.needsUpdate = e,
                    t.directionalLights.needsUpdate = e,
                    t.pointLights.needsUpdate = e,
                    t.spotLights.needsUpdate = e,
                    t.rectAreaLights.needsUpdate = e,
                    t.hemisphereLights.needsUpdate = e
                }
                console.log("THREE.WebGLRenderer", Fi);
                var D = void 0 !== (t = t || {}).canvas ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
                  , U = void 0 !== t.context ? t.context : null
                  , k = void 0 !== t.alpha && t.alpha
                  , B = void 0 === t.depth || t.depth
                  , F = void 0 === t.stencil || t.stencil
                  , z = void 0 !== t.antialias && t.antialias
                  , j = void 0 === t.premultipliedAlpha || t.premultipliedAlpha
                  , H = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer
                  , G = []
                  , V = []
                  , X = null
                  , q = []
                  , $ = [];
                this.domElement = D,
                this.context = null,
                this.autoClear = !0,
                this.autoClearColor = !0,
                this.autoClearDepth = !0,
                this.autoClearStencil = !0,
                this.sortObjects = !0,
                this.clippingPlanes = [],
                this.localClippingEnabled = !1,
                this.gammaFactor = 2,
                this.gammaInput = !1,
                this.gammaOutput = !1,
                this.physicallyCorrectLights = !1,
                this.toneMapping = Oa,
                this.toneMappingExposure = 1,
                this.toneMappingWhitePoint = 1,
                this.maxMorphTargets = 8,
                this.maxMorphNormals = 4;
                var J = this
                  , K = !1
                  , Q = null
                  , tt = null
                  , et = -1
                  , nt = ""
                  , rt = null
                  , it = null
                  , lt = new i
                  , ct = new i
                  , ut = null
                  , ht = 0
                  , dt = D.width
                  , pt = D.height
                  , ft = 1
                  , mt = new i(0,0,dt,pt)
                  , vt = new i(0,0,dt,pt)
                  , gt = !1
                  , yt = new at
                  , xt = new be
                  , bt = !1
                  , _t = !1
                  , wt = new c
                  , Mt = new l
                  , Et = {
                    geometries: 0,
                    textures: 0
                }
                  , Tt = {
                    frame: 0,
                    calls: 0,
                    vertices: 0,
                    faces: 0,
                    points: 0
                };
                this.info = {
                    render: Tt,
                    memory: Et,
                    programs: null
                };
                var St;
                try {
                    var At = {
                        alpha: k,
                        depth: B,
                        stencil: F,
                        antialias: z,
                        premultipliedAlpha: j,
                        preserveDrawingBuffer: H
                    };
                    if (null === (St = U || D.getContext("webgl", At) || D.getContext("experimental-webgl", At)))
                        throw null !== D.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context.";
                    void 0 === St.getShaderPrecisionFormat && (St.getShaderPrecisionFormat = function() {
                        return {
                            rangeMin: 1,
                            rangeMax: 1,
                            precision: 1
                        }
                    }
                    ),
                    D.addEventListener("webglcontextlost", r, !1),
                    D.addEventListener("webglcontextrestored", a, !1)
                } catch (t) {
                    console.error("THREE.WebGLRenderer: " + t)
                }
                var Lt, Pt, Ct, It, Ot, Nt, Dt, Ut, kt, Bt, zt, jt, Ht, Vt, $t, Kt, Qt, te;
                n();
                var ee = new ye(J);
                this.vr = ee;
                var ne = new ot(J,Ut,Pt.maxTextureSize);
                this.shadowMap = ne,
                this.getContext = function() {
                    return St
                }
                ,
                this.getContextAttributes = function() {
                    return St.getContextAttributes()
                }
                ,
                this.forceContextLoss = function() {
                    var t = Lt.get("WEBGL_lose_context");
                    t && t.loseContext()
                }
                ,
                this.forceContextRestore = function() {
                    var t = Lt.get("WEBGL_lose_context");
                    t && t.restoreContext()
                }
                ,
                this.getPixelRatio = function() {
                    return ft
                }
                ,
                this.setPixelRatio = function(t) {
                    void 0 !== t && (ft = t,
                    this.setSize(dt, pt, !1))
                }
                ,
                this.getSize = function() {
                    return {
                        width: dt,
                        height: pt
                    }
                }
                ,
                this.setSize = function(t, e, n) {
                    var r = ee.getDevice();
                    r && r.isPresenting ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (dt = t,
                    pt = e,
                    D.width = t * ft,
                    D.height = e * ft,
                    !1 !== n && (D.style.width = t + "px",
                    D.style.height = e + "px"),
                    this.setViewport(0, 0, t, e))
                }
                ,
                this.getDrawingBufferSize = function() {
                    return {
                        width: dt * ft,
                        height: pt * ft
                    }
                }
                ,
                this.setDrawingBufferSize = function(t, e, n) {
                    dt = t,
                    pt = e,
                    ft = n,
                    D.width = t * n,
                    D.height = e * n,
                    this.setViewport(0, 0, t, e)
                }
                ,
                this.setViewport = function(t, e, n, r) {
                    mt.set(t, pt - e - r, n, r),
                    Ct.viewport(lt.copy(mt).multiplyScalar(ft))
                }
                ,
                this.setScissor = function(t, e, n, r) {
                    vt.set(t, pt - e - r, n, r),
                    Ct.scissor(ct.copy(vt).multiplyScalar(ft))
                }
                ,
                this.setScissorTest = function(t) {
                    Ct.setScissorTest(gt = t)
                }
                ,
                this.getClearColor = jt.getClearColor,
                this.setClearColor = jt.setClearColor,
                this.getClearAlpha = jt.getClearAlpha,
                this.setClearAlpha = jt.setClearAlpha,
                this.clear = function(t, e, n) {
                    var r = 0;
                    (void 0 === t || t) && (r |= St.COLOR_BUFFER_BIT),
                    (void 0 === e || e) && (r |= St.DEPTH_BUFFER_BIT),
                    (void 0 === n || n) && (r |= St.STENCIL_BUFFER_BIT),
                    St.clear(r)
                }
                ,
                this.clearColor = function() {
                    this.clear(!0, !1, !1)
                }
                ,
                this.clearDepth = function() {
                    this.clear(!1, !0, !1)
                }
                ,
                this.clearStencil = function() {
                    this.clear(!1, !1, !0)
                }
                ,
                this.clearTarget = function(t, e, n, r) {
                    this.setRenderTarget(t),
                    this.clear(e, n, r)
                }
                ,
                this.dispose = function() {
                    D.removeEventListener("webglcontextlost", r, !1),
                    D.removeEventListener("webglcontextrestored", a, !1),
                    zt.dispose(),
                    ee.dispose()
                }
                ,
                this.renderBufferImmediate = function(t, e, n) {
                    Ct.initAttributes();
                    var r = It.get(t);
                    t.hasPositions && !r.position && (r.position = St.createBuffer()),
                    t.hasNormals && !r.normal && (r.normal = St.createBuffer()),
                    t.hasUvs && !r.uv && (r.uv = St.createBuffer()),
                    t.hasColors && !r.color && (r.color = St.createBuffer());
                    var i = e.getAttributes();
                    if (t.hasPositions && (St.bindBuffer(St.ARRAY_BUFFER, r.position),
                    St.bufferData(St.ARRAY_BUFFER, t.positionArray, St.DYNAMIC_DRAW),
                    Ct.enableAttribute(i.position),
                    St.vertexAttribPointer(i.position, 3, St.FLOAT, !1, 0, 0)),
                    t.hasNormals) {
                        if (St.bindBuffer(St.ARRAY_BUFFER, r.normal),
                        !n.isMeshPhongMaterial && !n.isMeshStandardMaterial && !n.isMeshNormalMaterial && !0 === n.flatShading)
                            for (var a = 0, o = 3 * t.count; a < o; a += 9) {
                                var s = t.normalArray
                                  , l = (s[a + 0] + s[a + 3] + s[a + 6]) / 3
                                  , c = (s[a + 1] + s[a + 4] + s[a + 7]) / 3
                                  , u = (s[a + 2] + s[a + 5] + s[a + 8]) / 3;
                                s[a + 0] = l,
                                s[a + 1] = c,
                                s[a + 2] = u,
                                s[a + 3] = l,
                                s[a + 4] = c,
                                s[a + 5] = u,
                                s[a + 6] = l,
                                s[a + 7] = c,
                                s[a + 8] = u
                            }
                        St.bufferData(St.ARRAY_BUFFER, t.normalArray, St.DYNAMIC_DRAW),
                        Ct.enableAttribute(i.normal),
                        St.vertexAttribPointer(i.normal, 3, St.FLOAT, !1, 0, 0)
                    }
                    t.hasUvs && n.map && (St.bindBuffer(St.ARRAY_BUFFER, r.uv),
                    St.bufferData(St.ARRAY_BUFFER, t.uvArray, St.DYNAMIC_DRAW),
                    Ct.enableAttribute(i.uv),
                    St.vertexAttribPointer(i.uv, 2, St.FLOAT, !1, 0, 0)),
                    t.hasColors && n.vertexColors !== Zi && (St.bindBuffer(St.ARRAY_BUFFER, r.color),
                    St.bufferData(St.ARRAY_BUFFER, t.colorArray, St.DYNAMIC_DRAW),
                    Ct.enableAttribute(i.color),
                    St.vertexAttribPointer(i.color, 3, St.FLOAT, !1, 0, 0)),
                    Ct.disableUnusedAttributes(),
                    St.drawArrays(St.TRIANGLES, 0, t.count),
                    t.count = 0
                }
                ,
                this.renderBufferDirect = function(t, n, r, i, a, o) {
                    Ct.setMaterial(i);
                    var s = b(t, n, i, a)
                      , l = r.id + "_" + s.id + "_" + (!0 === i.wireframe)
                      , c = !1;
                    l !== nt && (nt = l,
                    c = !0),
                    a.morphTargetInfluences && (Ht.update(a, r, i, s),
                    c = !0);
                    var u = r.index
                      , h = r.attributes.position
                      , d = 1;
                    !0 === i.wireframe && (u = Dt.getWireframeAttribute(r),
                    d = 2);
                    var f, m = Vt;
                    null !== u && (f = Nt.get(u),
                    (m = $t).setIndex(f)),
                    c && (p(i, s, r),
                    null !== u && St.bindBuffer(St.ELEMENT_ARRAY_BUFFER, f.buffer));
                    var v = 0;
                    null !== u ? v = u.count : void 0 !== h && (v = h.count);
                    var g = r.drawRange.start * d
                      , y = r.drawRange.count * d
                      , x = null !== o ? o.start * d : 0
                      , _ = null !== o ? o.count * d : 1 / 0
                      , w = Math.max(g, x)
                      , M = Math.min(v, g + y, x + _) - 1
                      , E = Math.max(0, M - w + 1);
                    if (0 !== E) {
                        if (a.isMesh)
                            if (!0 === i.wireframe)
                                Ct.setLineWidth(i.wireframeLinewidth * e()),
                                m.setMode(St.LINES);
                            else
                                switch (a.drawMode) {
                                case Co:
                                    m.setMode(St.TRIANGLES);
                                    break;
                                case Io:
                                    m.setMode(St.TRIANGLE_STRIP);
                                    break;
                                case Oo:
                                    m.setMode(St.TRIANGLE_FAN)
                                }
                        else if (a.isLine) {
                            var T = i.linewidth;
                            void 0 === T && (T = 1),
                            Ct.setLineWidth(T * e()),
                            a.isLineSegments ? m.setMode(St.LINES) : a.isLineLoop ? m.setMode(St.LINE_LOOP) : m.setMode(St.LINE_STRIP)
                        } else
                            a.isPoints && m.setMode(St.POINTS);
                        r && r.isInstancedBufferGeometry ? r.maxInstancedCount > 0 && m.renderInstances(r, w, E) : m.render(w, E)
                    }
                }
                ,
                this.compile = function(t, e) {
                    G.length = 0,
                    V.length = 0,
                    t.traverse(function(t) {
                        t.isLight && (G.push(t),
                        t.castShadow && V.push(t))
                    }),
                    kt.setup(G, V, e),
                    t.traverse(function(e) {
                        if (e.material)
                            if (Array.isArray(e.material))
                                for (var n = 0; n < e.material.length; n++)
                                    x(e.material[n], t.fog, e);
                            else
                                x(e.material, t.fog, e)
                    })
                }
                ;
                var re = !1
                  , ie = null;
                this.animate = function(t) {
                    ie = t,
                    f()
                }
                ,
                this.render = function(t, e, n, r) {
                    if (e && e.isCamera) {
                        if (!K) {
                            nt = "",
                            et = -1,
                            rt = null,
                            !0 === t.autoUpdate && t.updateMatrixWorld(),
                            null === e.parent && e.updateMatrixWorld(),
                            ee.enabled && (e = ee.getCamera(e)),
                            wt.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
                            yt.setFromMatrix(wt),
                            G.length = 0,
                            V.length = 0,
                            q.length = 0,
                            $.length = 0,
                            _t = this.localClippingEnabled,
                            bt = xt.init(this.clippingPlanes, _t, e),
                            (X = zt.get(t, e)).init(),
                            v(t, e, J.sortObjects),
                            !0 === J.sortObjects && X.sort(),
                            bt && xt.beginShadows(),
                            ne.render(V, t, e),
                            kt.setup(G, V, e),
                            bt && xt.endShadows(),
                            Tt.frame++,
                            Tt.calls = 0,
                            Tt.vertices = 0,
                            Tt.faces = 0,
                            Tt.points = 0,
                            void 0 === n && (n = null),
                            this.setRenderTarget(n),
                            jt.render(X, t, e, r);
                            var i = X.opaque
                              , a = X.transparent;
                            if (t.overrideMaterial) {
                                var o = t.overrideMaterial;
                                i.length && g(i, t, e, o),
                                a.length && g(a, t, e, o)
                            } else
                                i.length && g(i, t, e),
                                a.length && g(a, t, e);
                            Qt.render(q, t, e),
                            Kt.render($, t, e, lt),
                            n && Ot.updateRenderTargetMipmap(n),
                            Ct.buffers.depth.setTest(!0),
                            Ct.buffers.depth.setMask(!0),
                            Ct.buffers.color.setMask(!0),
                            Ct.setPolygonOffset(!1),
                            ee.enabled && ee.submitFrame()
                        }
                    } else
                        console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
                }
                ,
                this.setFaceCulling = function(t, e) {
                    Ct.setCullFace(t),
                    Ct.setFlipSided(e === Vi)
                }
                ,
                this.allocTextureUnit = function() {
                    var t = ht;
                    return t >= Pt.maxTextures && console.warn("THREE.WebGLRenderer: Trying to use " + t + " texture units while this GPU supports only " + Pt.maxTextures),
                    ht += 1,
                    t
                }
                ,
                this.setTexture2D = function() {
                    var t = !1;
                    return function(e, n) {
                        e && e.isWebGLRenderTarget && (t || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),
                        t = !0),
                        e = e.texture),
                        Ot.setTexture2D(e, n)
                    }
                }(),
                this.setTexture = function() {
                    var t = !1;
                    return function(e, n) {
                        t || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),
                        t = !0),
                        Ot.setTexture2D(e, n)
                    }
                }(),
                this.setTextureCube = function() {
                    var t = !1;
                    return function(e, n) {
                        e && e.isWebGLRenderTargetCube && (t || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),
                        t = !0),
                        e = e.texture),
                        e && e.isCubeTexture || Array.isArray(e.image) && 6 === e.image.length ? Ot.setTextureCube(e, n) : Ot.setTextureCubeDynamic(e, n)
                    }
                }(),
                this.getRenderTarget = function() {
                    return Q
                }
                ,
                this.setRenderTarget = function(t) {
                    Q = t,
                    t && void 0 === It.get(t).__webglFramebuffer && Ot.setupRenderTarget(t);
                    var e = null
                      , n = !1;
                    if (t) {
                        var r = It.get(t).__webglFramebuffer;
                        t.isWebGLRenderTargetCube ? (e = r[t.activeCubeFace],
                        n = !0) : e = r,
                        lt.copy(t.viewport),
                        ct.copy(t.scissor),
                        ut = t.scissorTest
                    } else
                        lt.copy(mt).multiplyScalar(ft),
                        ct.copy(vt).multiplyScalar(ft),
                        ut = gt;
                    if (tt !== e && (St.bindFramebuffer(St.FRAMEBUFFER, e),
                    tt = e),
                    Ct.viewport(lt),
                    Ct.scissor(ct),
                    Ct.setScissorTest(ut),
                    n) {
                        var i = It.get(t.texture);
                        St.framebufferTexture2D(St.FRAMEBUFFER, St.COLOR_ATTACHMENT0, St.TEXTURE_CUBE_MAP_POSITIVE_X + t.activeCubeFace, i.__webglTexture, t.activeMipMapLevel)
                    }
                }
                ,
                this.readRenderTargetPixels = function(t, e, n, r, i, a) {
                    if (t && t.isWebGLRenderTarget) {
                        var o = It.get(t).__webglFramebuffer;
                        if (o) {
                            var s = !1;
                            o !== tt && (St.bindFramebuffer(St.FRAMEBUFFER, o),
                            s = !0);
                            try {
                                var l = t.texture
                                  , c = l.format
                                  , u = l.type;
                                if (c !== fo && te.convert(c) !== St.getParameter(St.IMPLEMENTATION_COLOR_READ_FORMAT))
                                    return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                                if (!(u === Qa || te.convert(u) === St.getParameter(St.IMPLEMENTATION_COLOR_READ_TYPE) || u === ao && (Lt.get("OES_texture_float") || Lt.get("WEBGL_color_buffer_float")) || u === oo && Lt.get("EXT_color_buffer_half_float")))
                                    return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                                St.checkFramebufferStatus(St.FRAMEBUFFER) === St.FRAMEBUFFER_COMPLETE ? e >= 0 && e <= t.width - r && n >= 0 && n <= t.height - i && St.readPixels(e, n, r, i, te.convert(c), te.convert(u), a) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                            } finally {
                                s && St.bindFramebuffer(St.FRAMEBUFFER, tt)
                            }
                        }
                    } else
                        console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")
                }
            }
            function Me(t, e) {
                this.name = "",
                this.color = new X(t),
                this.density = void 0 !== e ? e : 25e-5
            }
            function Ee(t, e, n) {
                this.name = "",
                this.color = new X(t),
                this.near = void 0 !== e ? e : 1,
                this.far = void 0 !== n ? n : 1e3
            }
            function Te() {
                ut.call(this),
                this.type = "Scene",
                this.background = null,
                this.fog = null,
                this.overrideMaterial = null,
                this.autoUpdate = !0
            }
            function Se(t, e, n, r, i) {
                ut.call(this),
                this.lensFlares = [],
                this.positionScreen = new l,
                this.customUpdateCallback = void 0,
                void 0 !== t && this.add(t, e, n, r, i)
            }
            function Ae(t) {
                J.call(this),
                this.type = "SpriteMaterial",
                this.color = new X(16777215),
                this.map = null,
                this.rotation = 0,
                this.fog = !1,
                this.lights = !1,
                this.setValues(t)
            }
            function Le(t) {
                ut.call(this),
                this.type = "Sprite",
                this.material = void 0 !== t ? t : new Ae
            }
            function Re() {
                ut.call(this),
                this.type = "LOD",
                Object.defineProperties(this, {
                    levels: {
                        enumerable: !0,
                        value: []
                    }
                })
            }
            function Pe(t, e) {
                if (t = t || [],
                this.bones = t.slice(0),
                this.boneMatrices = new Float32Array(16 * this.bones.length),
                void 0 === e)
                    this.calculateInverses();
                else if (this.bones.length === e.length)
                    this.boneInverses = e.slice(0);
                else {
                    console.warn("THREE.Skeleton boneInverses is the wrong length."),
                    this.boneInverses = [];
                    for (var n = 0, r = this.bones.length; n < r; n++)
                        this.boneInverses.push(new c)
                }
            }
            function Ce() {
                ut.call(this),
                this.type = "Bone"
            }
            function Ie(t, e) {
                Bt.call(this, t, e),
                this.type = "SkinnedMesh",
                this.bindMode = "attached",
                this.bindMatrix = new c,
                this.bindMatrixInverse = new c;
                var n = new Pe(this.initBones());
                this.bind(n, this.matrixWorld),
                this.normalizeSkinWeights()
            }
            function Oe(t) {
                J.call(this),
                this.type = "LineBasicMaterial",
                this.color = new X(16777215),
                this.linewidth = 1,
                this.linecap = "round",
                this.linejoin = "round",
                this.lights = !1,
                this.setValues(t)
            }
            function Ne(t, e, n) {
                if (1 === n)
                    return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),
                    new De(t,e);
                ut.call(this),
                this.type = "Line",
                this.geometry = void 0 !== t ? t : new Rt,
                this.material = void 0 !== e ? e : new Oe({
                    color: 16777215 * Math.random()
                })
            }
            function De(t, e) {
                Ne.call(this, t, e),
                this.type = "LineSegments"
            }
            function Ue(t, e) {
                Ne.call(this, t, e),
                this.type = "LineLoop"
            }
            function ke(t) {
                J.call(this),
                this.type = "PointsMaterial",
                this.color = new X(16777215),
                this.map = null,
                this.size = 1,
                this.sizeAttenuation = !0,
                this.lights = !1,
                this.setValues(t)
            }
            function Be(t, e) {
                ut.call(this),
                this.type = "Points",
                this.geometry = void 0 !== t ? t : new Rt,
                this.material = void 0 !== e ? e : new ke({
                    color: 16777215 * Math.random()
                })
            }
            function Fe() {
                ut.call(this),
                this.type = "Group"
            }
            function ze(t, e, n, i, a, o, s, l, c) {
                function u() {
                    requestAnimationFrame(u),
                    t.readyState >= t.HAVE_CURRENT_DATA && (h.needsUpdate = !0)
                }
                r.call(this, t, e, n, i, a, o, s, l, c),
                this.generateMipmaps = !1;
                var h = this;
                u()
            }
            function je(t, e, n, i, a, o, s, l, c, u, h, d) {
                r.call(this, null, o, s, l, c, u, i, a, h, d),
                this.image = {
                    width: e,
                    height: n
                },
                this.mipmaps = t,
                this.flipY = !1,
                this.generateMipmaps = !1
            }
            function He(t, e, n, i, a, o, s, l, c, u) {
                if ((u = void 0 !== u ? u : yo) !== yo && u !== xo)
                    throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
                void 0 === n && u === yo && (n = no),
                void 0 === n && u === xo && (n = uo),
                r.call(this, null, i, a, o, s, l, u, n, c),
                this.image = {
                    width: t,
                    height: e
                },
                this.magFilter = void 0 !== s ? s : qa,
                this.minFilter = void 0 !== l ? l : qa,
                this.flipY = !1,
                this.generateMipmaps = !1
            }
            function Ge(t) {
                Rt.call(this),
                this.type = "WireframeGeometry";
                var e, n, r, i, a, o, s, c, u, h, d = [], p = [0, 0], f = {}, m = ["a", "b", "c"];
                if (t && t.isGeometry) {
                    var v = t.faces;
                    for (e = 0,
                    r = v.length; e < r; e++) {
                        var g = v[e];
                        for (n = 0; n < 3; n++)
                            s = g[m[n]],
                            c = g[m[(n + 1) % 3]],
                            p[0] = Math.min(s, c),
                            p[1] = Math.max(s, c),
                            void 0 === f[u = p[0] + "," + p[1]] && (f[u] = {
                                index1: p[0],
                                index2: p[1]
                            })
                    }
                    for (u in f)
                        o = f[u],
                        h = t.vertices[o.index1],
                        d.push(h.x, h.y, h.z),
                        h = t.vertices[o.index2],
                        d.push(h.x, h.y, h.z)
                } else if (t && t.isBufferGeometry) {
                    var y, x, b, _, w, M, E;
                    if (h = new l,
                    null !== t.index) {
                        for (y = t.attributes.position,
                        x = t.index,
                        0 === (b = t.groups).length && (b = [{
                            start: 0,
                            count: x.count,
                            materialIndex: 0
                        }]),
                        i = 0,
                        a = b.length; i < a; ++i)
                            for (e = w = (_ = b[i]).start,
                            r = w + _.count; e < r; e += 3)
                                for (n = 0; n < 3; n++)
                                    s = x.getX(e + n),
                                    c = x.getX(e + (n + 1) % 3),
                                    p[0] = Math.min(s, c),
                                    p[1] = Math.max(s, c),
                                    void 0 === f[u = p[0] + "," + p[1]] && (f[u] = {
                                        index1: p[0],
                                        index2: p[1]
                                    });
                        for (u in f)
                            o = f[u],
                            h.fromBufferAttribute(y, o.index1),
                            d.push(h.x, h.y, h.z),
                            h.fromBufferAttribute(y, o.index2),
                            d.push(h.x, h.y, h.z)
                    } else
                        for (e = 0,
                        r = (y = t.attributes.position).count / 3; e < r; e++)
                            for (n = 0; n < 3; n++)
                                M = 3 * e + n,
                                h.fromBufferAttribute(y, M),
                                d.push(h.x, h.y, h.z),
                                E = 3 * e + (n + 1) % 3,
                                h.fromBufferAttribute(y, E),
                                d.push(h.x, h.y, h.z)
                }
                this.addAttribute("position", new Tt(d,3))
            }
            function Ve(t, e, n) {
                vt.call(this),
                this.type = "ParametricGeometry",
                this.parameters = {
                    func: t,
                    slices: e,
                    stacks: n
                },
                this.fromBufferGeometry(new We(t,e,n)),
                this.mergeVertices()
            }
            function We(t, e, n) {
                Rt.call(this),
                this.type = "ParametricBufferGeometry",
                this.parameters = {
                    func: t,
                    slices: e,
                    stacks: n
                };
                var r, i, a = [], o = [], s = [], c = [], u = new l, h = new l, d = new l, p = new l, f = new l, m = e + 1;
                for (r = 0; r <= n; r++) {
                    var v = r / n;
                    for (i = 0; i <= e; i++) {
                        var g = i / e;
                        h = t(g, v, h),
                        o.push(h.x, h.y, h.z),
                        g - 1e-5 >= 0 ? (d = t(g - 1e-5, v, d),
                        p.subVectors(h, d)) : (d = t(g + 1e-5, v, d),
                        p.subVectors(d, h)),
                        v - 1e-5 >= 0 ? (d = t(g, v - 1e-5, d),
                        f.subVectors(h, d)) : (d = t(g, v + 1e-5, d),
                        f.subVectors(d, h)),
                        u.crossVectors(p, f).normalize(),
                        s.push(u.x, u.y, u.z),
                        c.push(g, v)
                    }
                }
                for (r = 0; r < n; r++)
                    for (i = 0; i < e; i++) {
                        var y = r * m + i
                          , x = r * m + i + 1
                          , b = (r + 1) * m + i + 1
                          , _ = (r + 1) * m + i;
                        a.push(y, x, _),
                        a.push(x, b, _)
                    }
                this.setIndex(a),
                this.addAttribute("position", new Tt(o,3)),
                this.addAttribute("normal", new Tt(s,3)),
                this.addAttribute("uv", new Tt(c,2))
            }
            function Xe(t, e, n, r) {
                vt.call(this),
                this.type = "PolyhedronGeometry",
                this.parameters = {
                    vertices: t,
                    indices: e,
                    radius: n,
                    detail: r
                },
                this.fromBufferGeometry(new qe(t,e,n,r)),
                this.mergeVertices()
            }
            function qe(t, e, r, i) {
                function a(t, e, n, r) {
                    var i, a, o = Math.pow(2, r), l = [];
                    for (i = 0; i <= o; i++) {
                        l[i] = [];
                        var c = t.clone().lerp(n, i / o)
                          , u = e.clone().lerp(n, i / o)
                          , h = o - i;
                        for (a = 0; a <= h; a++)
                            l[i][a] = 0 === a && i === o ? c : c.clone().lerp(u, a / h)
                    }
                    for (i = 0; i < o; i++)
                        for (a = 0; a < 2 * (o - i) - 1; a++) {
                            var d = Math.floor(a / 2);
                            a % 2 == 0 ? (s(l[i][d + 1]),
                            s(l[i + 1][d]),
                            s(l[i][d])) : (s(l[i][d + 1]),
                            s(l[i + 1][d + 1]),
                            s(l[i + 1][d]))
                        }
                }
                function o() {
                    for (var t = 0; t < m.length; t += 6) {
                        var e = m[t + 0]
                          , n = m[t + 2]
                          , r = m[t + 4]
                          , i = Math.max(e, n, r)
                          , a = Math.min(e, n, r);
                        i > .9 && a < .1 && (e < .2 && (m[t + 0] += 1),
                        n < .2 && (m[t + 2] += 1),
                        r < .2 && (m[t + 4] += 1))
                    }
                }
                function s(t) {
                    f.push(t.x, t.y, t.z)
                }
                function c(e, n) {
                    var r = 3 * e;
                    n.x = t[r + 0],
                    n.y = t[r + 1],
                    n.z = t[r + 2]
                }
                function u() {
                    for (var t = new l, e = new l, r = new l, i = new l, a = new n, o = new n, s = new n, c = 0, u = 0; c < f.length; c += 9,
                    u += 6) {
                        t.set(f[c + 0], f[c + 1], f[c + 2]),
                        e.set(f[c + 3], f[c + 4], f[c + 5]),
                        r.set(f[c + 6], f[c + 7], f[c + 8]),
                        a.set(m[u + 0], m[u + 1]),
                        o.set(m[u + 2], m[u + 3]),
                        s.set(m[u + 4], m[u + 5]),
                        i.copy(t).add(e).add(r).divideScalar(3);
                        var p = d(i);
                        h(a, u + 0, t, p),
                        h(o, u + 2, e, p),
                        h(s, u + 4, r, p)
                    }
                }
                function h(t, e, n, r) {
                    r < 0 && 1 === t.x && (m[e] = t.x - 1),
                    0 === n.x && 0 === n.z && (m[e] = r / 2 / Math.PI + .5)
                }
                function d(t) {
                    return Math.atan2(t.z, -t.x)
                }
                function p(t) {
                    return Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z))
                }
                Rt.call(this),
                this.type = "PolyhedronBufferGeometry",
                this.parameters = {
                    vertices: t,
                    indices: e,
                    radius: r,
                    detail: i
                },
                r = r || 1;
                var f = []
                  , m = [];
                !function(t) {
                    for (var n = new l, r = new l, i = new l, o = 0; o < e.length; o += 3)
                        c(e[o + 0], n),
                        c(e[o + 1], r),
                        c(e[o + 2], i),
                        a(n, r, i, t)
                }(i = i || 0),
                function(t) {
                    for (var e = new l, n = 0; n < f.length; n += 3)
                        e.x = f[n + 0],
                        e.y = f[n + 1],
                        e.z = f[n + 2],
                        e.normalize().multiplyScalar(t),
                        f[n + 0] = e.x,
                        f[n + 1] = e.y,
                        f[n + 2] = e.z
                }(r),
                function() {
                    for (var t = new l, e = 0; e < f.length; e += 3) {
                        t.x = f[e + 0],
                        t.y = f[e + 1],
                        t.z = f[e + 2];
                        var n = d(t) / 2 / Math.PI + .5
                          , r = p(t) / Math.PI + .5;
                        m.push(n, 1 - r)
                    }
                    u(),
                    o()
                }(),
                this.addAttribute("position", new Tt(f,3)),
                this.addAttribute("normal", new Tt(f.slice(),3)),
                this.addAttribute("uv", new Tt(m,2)),
                0 === i ? this.computeVertexNormals() : this.normalizeNormals()
            }
            function Ye(t, e) {
                vt.call(this),
                this.type = "TetrahedronGeometry",
                this.parameters = {
                    radius: t,
                    detail: e
                },
                this.fromBufferGeometry(new $e(t,e)),
                this.mergeVertices()
            }
            function $e(t, e) {
                var n = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1]
                  , r = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
                qe.call(this, n, r, t, e),
                this.type = "TetrahedronBufferGeometry",
                this.parameters = {
                    radius: t,
                    detail: e
                }
            }
            function Ze(t, e) {
                vt.call(this),
                this.type = "OctahedronGeometry",
                this.parameters = {
                    radius: t,
                    detail: e
                },
                this.fromBufferGeometry(new Je(t,e)),
                this.mergeVertices()
            }
            function Je(t, e) {
                var n = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1]
                  , r = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
                qe.call(this, n, r, t, e),
                this.type = "OctahedronBufferGeometry",
                this.parameters = {
                    radius: t,
                    detail: e
                }
            }
            function Ke(t, e) {
                vt.call(this),
                this.type = "IcosahedronGeometry",
                this.parameters = {
                    radius: t,
                    detail: e
                },
                this.fromBufferGeometry(new Qe(t,e)),
                this.mergeVertices()
            }
            function Qe(t, e) {
                var n = (1 + Math.sqrt(5)) / 2
                  , r = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1]
                  , i = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
                qe.call(this, r, i, t, e),
                this.type = "IcosahedronBufferGeometry",
                this.parameters = {
                    radius: t,
                    detail: e
                }
            }
            function tn(t, e) {
                vt.call(this),
                this.type = "DodecahedronGeometry",
                this.parameters = {
                    radius: t,
                    detail: e
                },
                this.fromBufferGeometry(new en(t,e)),
                this.mergeVertices()
            }
            function en(t, e) {
                var n = (1 + Math.sqrt(5)) / 2
                  , r = 1 / n
                  , i = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, 0, -n, 0, -r, n, 0, -r, -n, 0, r, n, 0, r]
                  , a = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
                qe.call(this, i, a, t, e),
                this.type = "DodecahedronBufferGeometry",
                this.parameters = {
                    radius: t,
                    detail: e
                }
            }
            function nn(t, e, n, r, i, a) {
                vt.call(this),
                this.type = "TubeGeometry",
                this.parameters = {
                    path: t,
                    tubularSegments: e,
                    radius: n,
                    radialSegments: r,
                    closed: i
                },
                void 0 !== a && console.warn("THREE.TubeGeometry: taper has been removed.");
                var o = new rn(t,e,n,r,i);
                this.tangents = o.tangents,
                this.normals = o.normals,
                this.binormals = o.binormals,
                this.fromBufferGeometry(o),
                this.mergeVertices()
            }
            function rn(t, e, r, i, a) {
                function o(n) {
                    var a = t.getPointAt(n / e)
                      , o = u.normals[n]
                      , s = u.binormals[n];
                    for (d = 0; d <= i; d++) {
                        var l = d / i * Math.PI * 2
                          , c = Math.sin(l)
                          , h = -Math.cos(l);
                        f.x = h * o.x + c * s.x,
                        f.y = h * o.y + c * s.y,
                        f.z = h * o.z + c * s.z,
                        f.normalize(),
                        g.push(f.x, f.y, f.z),
                        p.x = a.x + r * f.x,
                        p.y = a.y + r * f.y,
                        p.z = a.z + r * f.z,
                        v.push(p.x, p.y, p.z)
                    }
                }
                function s() {
                    for (d = 1; d <= e; d++)
                        for (h = 1; h <= i; h++) {
                            var t = (i + 1) * (d - 1) + (h - 1)
                              , n = (i + 1) * d + (h - 1)
                              , r = (i + 1) * d + h
                              , a = (i + 1) * (d - 1) + h;
                            x.push(t, n, a),
                            x.push(n, r, a)
                        }
                }
                function c() {
                    for (h = 0; h <= e; h++)
                        for (d = 0; d <= i; d++)
                            m.x = h / e,
                            m.y = d / i,
                            y.push(m.x, m.y)
                }
                Rt.call(this),
                this.type = "TubeBufferGeometry",
                this.parameters = {
                    path: t,
                    tubularSegments: e,
                    radius: r,
                    radialSegments: i,
                    closed: a
                },
                e = e || 64,
                r = r || 1,
                i = i || 8,
                a = a || !1;
                var u = t.computeFrenetFrames(e, a);
                this.tangents = u.tangents,
                this.normals = u.normals,
                this.binormals = u.binormals;
                var h, d, p = new l, f = new l, m = new n, v = [], g = [], y = [], x = [];
                !function() {
                    for (h = 0; h < e; h++)
                        o(h);
                    o(!1 === a ? e : 0),
                    c(),
                    s()
                }(),
                this.setIndex(x),
                this.addAttribute("position", new Tt(v,3)),
                this.addAttribute("normal", new Tt(g,3)),
                this.addAttribute("uv", new Tt(y,2))
            }
            function an(t, e, n, r, i, a, o) {
                vt.call(this),
                this.type = "TorusKnotGeometry",
                this.parameters = {
                    radius: t,
                    tube: e,
                    tubularSegments: n,
                    radialSegments: r,
                    p: i,
                    q: a
                },
                void 0 !== o && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),
                this.fromBufferGeometry(new on(t,e,n,r,i,a)),
                this.mergeVertices()
            }
            function on(t, e, n, r, i, a) {
                function o(t, e, n, r, i) {
                    var a = Math.cos(t)
                      , o = Math.sin(t)
                      , s = n / e * t
                      , l = Math.cos(s);
                    i.x = r * (2 + l) * .5 * a,
                    i.y = r * (2 + l) * o * .5,
                    i.z = r * Math.sin(s) * .5
                }
                Rt.call(this),
                this.type = "TorusKnotBufferGeometry",
                this.parameters = {
                    radius: t,
                    tube: e,
                    tubularSegments: n,
                    radialSegments: r,
                    p: i,
                    q: a
                },
                t = t || 100,
                e = e || 40,
                n = Math.floor(n) || 64,
                r = Math.floor(r) || 8,
                i = i || 2,
                a = a || 3;
                var s, c, u = [], h = [], d = [], p = [], f = new l, m = new l, v = new l, g = new l, y = new l, x = new l, b = new l;
                for (s = 0; s <= n; ++s) {
                    var _ = s / n * i * Math.PI * 2;
                    for (o(_, i, a, t, v),
                    o(_ + .01, i, a, t, g),
                    x.subVectors(g, v),
                    b.addVectors(g, v),
                    y.crossVectors(x, b),
                    b.crossVectors(y, x),
                    y.normalize(),
                    b.normalize(),
                    c = 0; c <= r; ++c) {
                        var w = c / r * Math.PI * 2
                          , M = -e * Math.cos(w)
                          , E = e * Math.sin(w);
                        f.x = v.x + (M * b.x + E * y.x),
                        f.y = v.y + (M * b.y + E * y.y),
                        f.z = v.z + (M * b.z + E * y.z),
                        h.push(f.x, f.y, f.z),
                        m.subVectors(f, v).normalize(),
                        d.push(m.x, m.y, m.z),
                        p.push(s / n),
                        p.push(c / r)
                    }
                }
                for (c = 1; c <= n; c++)
                    for (s = 1; s <= r; s++) {
                        var T = (r + 1) * (c - 1) + (s - 1)
                          , S = (r + 1) * c + (s - 1)
                          , A = (r + 1) * c + s
                          , L = (r + 1) * (c - 1) + s;
                        u.push(T, S, L),
                        u.push(S, A, L)
                    }
                this.setIndex(u),
                this.addAttribute("position", new Tt(h,3)),
                this.addAttribute("normal", new Tt(d,3)),
                this.addAttribute("uv", new Tt(p,2))
            }
            function sn(t, e, n, r, i) {
                vt.call(this),
                this.type = "TorusGeometry",
                this.parameters = {
                    radius: t,
                    tube: e,
                    radialSegments: n,
                    tubularSegments: r,
                    arc: i
                },
                this.fromBufferGeometry(new ln(t,e,n,r,i)),
                this.mergeVertices()
            }
            function ln(t, e, n, r, i) {
                Rt.call(this),
                this.type = "TorusBufferGeometry",
                this.parameters = {
                    radius: t,
                    tube: e,
                    radialSegments: n,
                    tubularSegments: r,
                    arc: i
                },
                t = t || 100,
                e = e || 40,
                n = Math.floor(n) || 8,
                r = Math.floor(r) || 6,
                i = i || 2 * Math.PI;
                var a, o, s = [], c = [], u = [], h = [], d = new l, p = new l, f = new l;
                for (a = 0; a <= n; a++)
                    for (o = 0; o <= r; o++) {
                        var m = o / r * i
                          , v = a / n * Math.PI * 2;
                        p.x = (t + e * Math.cos(v)) * Math.cos(m),
                        p.y = (t + e * Math.cos(v)) * Math.sin(m),
                        p.z = e * Math.sin(v),
                        c.push(p.x, p.y, p.z),
                        d.x = t * Math.cos(m),
                        d.y = t * Math.sin(m),
                        f.subVectors(p, d).normalize(),
                        u.push(f.x, f.y, f.z),
                        h.push(o / r),
                        h.push(a / n)
                    }
                for (a = 1; a <= n; a++)
                    for (o = 1; o <= r; o++) {
                        var g = (r + 1) * a + o - 1
                          , y = (r + 1) * (a - 1) + o - 1
                          , x = (r + 1) * (a - 1) + o
                          , b = (r + 1) * a + o;
                        s.push(g, y, b),
                        s.push(y, x, b)
                    }
                this.setIndex(s),
                this.addAttribute("position", new Tt(c,3)),
                this.addAttribute("normal", new Tt(u,3)),
                this.addAttribute("uv", new Tt(h,2))
            }
            function cn(t, e) {
                vt.call(this),
                this.type = "ExtrudeGeometry",
                this.parameters = {
                    shapes: t,
                    options: e
                },
                this.fromBufferGeometry(new un(t,e)),
                this.mergeVertices()
            }
            function un(t, e) {
                void 0 !== t && (Rt.call(this),
                this.type = "ExtrudeBufferGeometry",
                t = Array.isArray(t) ? t : [t],
                this.addShapeList(t, e),
                this.computeVertexNormals())
            }
            function hn(t, e) {
                vt.call(this),
                this.type = "TextGeometry",
                this.parameters = {
                    text: t,
                    parameters: e
                },
                this.fromBufferGeometry(new dn(t,e)),
                this.mergeVertices()
            }
            function dn(t, e) {
                var n = (e = e || {}).font;
                if (!n || !n.isFont)
                    return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),
                    new vt;
                var r = n.generateShapes(t, e.size, e.curveSegments);
                e.amount = void 0 !== e.height ? e.height : 50,
                void 0 === e.bevelThickness && (e.bevelThickness = 10),
                void 0 === e.bevelSize && (e.bevelSize = 8),
                void 0 === e.bevelEnabled && (e.bevelEnabled = !1),
                un.call(this, r, e),
                this.type = "TextBufferGeometry"
            }
            function pn(t, e, n, r, i, a, o) {
                vt.call(this),
                this.type = "SphereGeometry",
                this.parameters = {
                    radius: t,
                    widthSegments: e,
                    heightSegments: n,
                    phiStart: r,
                    phiLength: i,
                    thetaStart: a,
                    thetaLength: o
                },
                this.fromBufferGeometry(new fn(t,e,n,r,i,a,o)),
                this.mergeVertices()
            }
            function fn(t, e, n, r, i, a, o) {
                Rt.call(this),
                this.type = "SphereBufferGeometry",
                this.parameters = {
                    radius: t,
                    widthSegments: e,
                    heightSegments: n,
                    phiStart: r,
                    phiLength: i,
                    thetaStart: a,
                    thetaLength: o
                },
                t = t || 50,
                e = Math.max(3, Math.floor(e) || 8),
                n = Math.max(2, Math.floor(n) || 6),
                r = void 0 !== r ? r : 0,
                i = void 0 !== i ? i : 2 * Math.PI;
                var s, c, u = (a = void 0 !== a ? a : 0) + (o = void 0 !== o ? o : Math.PI), h = 0, d = [], p = new l, f = new l, m = [], v = [], g = [], y = [];
                for (c = 0; c <= n; c++) {
                    var x = []
                      , b = c / n;
                    for (s = 0; s <= e; s++) {
                        var _ = s / e;
                        p.x = -t * Math.cos(r + _ * i) * Math.sin(a + b * o),
                        p.y = t * Math.cos(a + b * o),
                        p.z = t * Math.sin(r + _ * i) * Math.sin(a + b * o),
                        v.push(p.x, p.y, p.z),
                        f.set(p.x, p.y, p.z).normalize(),
                        g.push(f.x, f.y, f.z),
                        y.push(_, 1 - b),
                        x.push(h++)
                    }
                    d.push(x)
                }
                for (c = 0; c < n; c++)
                    for (s = 0; s < e; s++) {
                        var w = d[c][s + 1]
                          , M = d[c][s]
                          , E = d[c + 1][s]
                          , T = d[c + 1][s + 1];
                        (0 !== c || a > 0) && m.push(w, M, T),
                        (c !== n - 1 || u < Math.PI) && m.push(M, E, T)
                    }
                this.setIndex(m),
                this.addAttribute("position", new Tt(v,3)),
                this.addAttribute("normal", new Tt(g,3)),
                this.addAttribute("uv", new Tt(y,2))
            }
            function mn(t, e, n, r, i, a) {
                vt.call(this),
                this.type = "RingGeometry",
                this.parameters = {
                    innerRadius: t,
                    outerRadius: e,
                    thetaSegments: n,
                    phiSegments: r,
                    thetaStart: i,
                    thetaLength: a
                },
                this.fromBufferGeometry(new vn(t,e,n,r,i,a)),
                this.mergeVertices()
            }
            function vn(t, e, r, i, a, o) {
                Rt.call(this),
                this.type = "RingBufferGeometry",
                this.parameters = {
                    innerRadius: t,
                    outerRadius: e,
                    thetaSegments: r,
                    phiSegments: i,
                    thetaStart: a,
                    thetaLength: o
                },
                t = t || 20,
                e = e || 50,
                a = void 0 !== a ? a : 0,
                o = void 0 !== o ? o : 2 * Math.PI,
                r = void 0 !== r ? Math.max(3, r) : 8;
                var s, c, u, h = [], d = [], p = [], f = [], m = t, v = (e - t) / (i = void 0 !== i ? Math.max(1, i) : 1), g = new l, y = new n;
                for (c = 0; c <= i; c++) {
                    for (u = 0; u <= r; u++)
                        s = a + u / r * o,
                        g.x = m * Math.cos(s),
                        g.y = m * Math.sin(s),
                        d.push(g.x, g.y, g.z),
                        p.push(0, 0, 1),
                        y.x = (g.x / e + 1) / 2,
                        y.y = (g.y / e + 1) / 2,
                        f.push(y.x, y.y);
                    m += v
                }
                for (c = 0; c < i; c++) {
                    var x = c * (r + 1);
                    for (u = 0; u < r; u++) {
                        var b = s = u + x
                          , _ = s + r + 1
                          , w = s + r + 2
                          , M = s + 1;
                        h.push(b, _, M),
                        h.push(_, w, M)
                    }
                }
                this.setIndex(h),
                this.addAttribute("position", new Tt(d,3)),
                this.addAttribute("normal", new Tt(p,3)),
                this.addAttribute("uv", new Tt(f,2))
            }
            function gn(t, e, n, r) {
                vt.call(this),
                this.type = "LatheGeometry",
                this.parameters = {
                    points: t,
                    segments: e,
                    phiStart: n,
                    phiLength: r
                },
                this.fromBufferGeometry(new yn(t,e,n,r)),
                this.mergeVertices()
            }
            function yn(t, e, r, i) {
                Rt.call(this),
                this.type = "LatheBufferGeometry",
                this.parameters = {
                    points: t,
                    segments: e,
                    phiStart: r,
                    phiLength: i
                },
                e = Math.floor(e) || 12,
                r = r || 0,
                i = i || 2 * Math.PI,
                i = Go.clamp(i, 0, 2 * Math.PI);
                var a, o, s, c = [], u = [], h = [], d = 1 / e, p = new l, f = new n;
                for (o = 0; o <= e; o++) {
                    var m = r + o * d * i
                      , v = Math.sin(m)
                      , g = Math.cos(m);
                    for (s = 0; s <= t.length - 1; s++)
                        p.x = t[s].x * v,
                        p.y = t[s].y,
                        p.z = t[s].x * g,
                        u.push(p.x, p.y, p.z),
                        f.x = o / e,
                        f.y = s / (t.length - 1),
                        h.push(f.x, f.y)
                }
                for (o = 0; o < e; o++)
                    for (s = 0; s < t.length - 1; s++) {
                        var y = a = s + o * t.length
                          , x = a + t.length
                          , b = a + t.length + 1
                          , _ = a + 1;
                        c.push(y, x, _),
                        c.push(x, b, _)
                    }
                if (this.setIndex(c),
                this.addAttribute("position", new Tt(u,3)),
                this.addAttribute("uv", new Tt(h,2)),
                this.computeVertexNormals(),
                i === 2 * Math.PI) {
                    var w = this.attributes.normal.array
                      , M = new l
                      , E = new l
                      , T = new l;
                    for (a = e * t.length * 3,
                    o = 0,
                    s = 0; o < t.length; o++,
                    s += 3)
                        M.x = w[s + 0],
                        M.y = w[s + 1],
                        M.z = w[s + 2],
                        E.x = w[a + s + 0],
                        E.y = w[a + s + 1],
                        E.z = w[a + s + 2],
                        T.addVectors(M, E).normalize(),
                        w[s + 0] = w[a + s + 0] = T.x,
                        w[s + 1] = w[a + s + 1] = T.y,
                        w[s + 2] = w[a + s + 2] = T.z
                }
            }
            function xn(t, e) {
                vt.call(this),
                this.type = "ShapeGeometry",
                "object" == typeof e && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."),
                e = e.curveSegments),
                this.parameters = {
                    shapes: t,
                    curveSegments: e
                },
                this.fromBufferGeometry(new bn(t,e)),
                this.mergeVertices()
            }
            function bn(t, e) {
                function n(t) {
                    var n, s, c, u = i.length / 3, h = t.extractPoints(e), d = h.shape, p = h.holes;
                    if (!1 === ss.isClockWise(d))
                        for (d = d.reverse(),
                        n = 0,
                        s = p.length; n < s; n++)
                            c = p[n],
                            !0 === ss.isClockWise(c) && (p[n] = c.reverse());
                    var f = ss.triangulateShape(d, p);
                    for (n = 0,
                    s = p.length; n < s; n++)
                        c = p[n],
                        d = d.concat(c);
                    for (n = 0,
                    s = d.length; n < s; n++) {
                        var m = d[n];
                        i.push(m.x, m.y, 0),
                        a.push(0, 0, 1),
                        o.push(m.x, m.y)
                    }
                    for (n = 0,
                    s = f.length; n < s; n++) {
                        var v = f[n]
                          , g = v[0] + u
                          , y = v[1] + u
                          , x = v[2] + u;
                        r.push(g, y, x),
                        l += 3
                    }
                }
                Rt.call(this),
                this.type = "ShapeBufferGeometry",
                this.parameters = {
                    shapes: t,
                    curveSegments: e
                },
                e = e || 12;
                var r = []
                  , i = []
                  , a = []
                  , o = []
                  , s = 0
                  , l = 0;
                if (!1 === Array.isArray(t))
                    n(t);
                else
                    for (var c = 0; c < t.length; c++)
                        n(t[c]),
                        this.addGroup(s, l, c),
                        s += l,
                        l = 0;
                this.setIndex(r),
                this.addAttribute("position", new Tt(i,3)),
                this.addAttribute("normal", new Tt(a,3)),
                this.addAttribute("uv", new Tt(o,2))
            }
            function _n(t, e) {
                Rt.call(this),
                this.type = "EdgesGeometry",
                this.parameters = {
                    thresholdAngle: e
                },
                e = void 0 !== e ? e : 1;
                var n, r, i, a, o = [], s = Math.cos(Go.DEG2RAD * e), l = [0, 0], c = {}, u = ["a", "b", "c"];
                t.isBufferGeometry ? (a = new vt).fromBufferGeometry(t) : a = t.clone(),
                a.mergeVertices(),
                a.computeFaceNormals();
                for (var h = a.vertices, d = a.faces, p = 0, f = d.length; p < f; p++)
                    for (var m = d[p], v = 0; v < 3; v++)
                        n = m[u[v]],
                        r = m[u[(v + 1) % 3]],
                        l[0] = Math.min(n, r),
                        l[1] = Math.max(n, r),
                        void 0 === c[i = l[0] + "," + l[1]] ? c[i] = {
                            index1: l[0],
                            index2: l[1],
                            face1: p,
                            face2: void 0
                        } : c[i].face2 = p;
                for (i in c) {
                    var g = c[i];
                    if (void 0 === g.face2 || d[g.face1].normal.dot(d[g.face2].normal) <= s) {
                        var y = h[g.index1];
                        o.push(y.x, y.y, y.z),
                        y = h[g.index2],
                        o.push(y.x, y.y, y.z)
                    }
                }
                this.addAttribute("position", new Tt(o,3))
            }
            function wn(t, e, n, r, i, a, o, s) {
                vt.call(this),
                this.type = "CylinderGeometry",
                this.parameters = {
                    radiusTop: t,
                    radiusBottom: e,
                    height: n,
                    radialSegments: r,
                    heightSegments: i,
                    openEnded: a,
                    thetaStart: o,
                    thetaLength: s
                },
                this.fromBufferGeometry(new Mn(t,e,n,r,i,a,o,s)),
                this.mergeVertices()
            }
            function Mn(t, e, r, i, a, o, s, c) {
                function u(r) {
                    var a, o, u, g = new n, b = new l, _ = 0, w = !0 === r ? t : e, M = !0 === r ? 1 : -1;
                    for (o = v,
                    a = 1; a <= i; a++)
                        p.push(0, y * M, 0),
                        f.push(0, M, 0),
                        m.push(.5, .5),
                        v++;
                    for (u = v,
                    a = 0; a <= i; a++) {
                        var E = a / i * c + s
                          , T = Math.cos(E)
                          , S = Math.sin(E);
                        b.x = w * S,
                        b.y = y * M,
                        b.z = w * T,
                        p.push(b.x, b.y, b.z),
                        f.push(0, M, 0),
                        g.x = .5 * T + .5,
                        g.y = .5 * S * M + .5,
                        m.push(g.x, g.y),
                        v++
                    }
                    for (a = 0; a < i; a++) {
                        var A = o + a
                          , L = u + a;
                        !0 === r ? d.push(L, L + 1, A) : d.push(L + 1, L, A),
                        _ += 3
                    }
                    h.addGroup(x, _, !0 === r ? 1 : 2),
                    x += _
                }
                Rt.call(this),
                this.type = "CylinderBufferGeometry",
                this.parameters = {
                    radiusTop: t,
                    radiusBottom: e,
                    height: r,
                    radialSegments: i,
                    heightSegments: a,
                    openEnded: o,
                    thetaStart: s,
                    thetaLength: c
                };
                var h = this;
                t = void 0 !== t ? t : 20,
                e = void 0 !== e ? e : 20,
                r = void 0 !== r ? r : 100,
                i = Math.floor(i) || 8,
                a = Math.floor(a) || 1,
                o = void 0 !== o && o,
                s = void 0 !== s ? s : 0,
                c = void 0 !== c ? c : 2 * Math.PI;
                var d = []
                  , p = []
                  , f = []
                  , m = []
                  , v = 0
                  , g = []
                  , y = r / 2
                  , x = 0;
                !function() {
                    var n, o, u = new l, b = new l, _ = 0, w = (e - t) / r;
                    for (o = 0; o <= a; o++) {
                        var M = []
                          , E = o / a
                          , T = E * (e - t) + t;
                        for (n = 0; n <= i; n++) {
                            var S = n / i
                              , A = S * c + s
                              , L = Math.sin(A)
                              , R = Math.cos(A);
                            b.x = T * L,
                            b.y = -E * r + y,
                            b.z = T * R,
                            p.push(b.x, b.y, b.z),
                            u.set(L, w, R).normalize(),
                            f.push(u.x, u.y, u.z),
                            m.push(S, 1 - E),
                            M.push(v++)
                        }
                        g.push(M)
                    }
                    for (n = 0; n < i; n++)
                        for (o = 0; o < a; o++) {
                            var P = g[o][n]
                              , C = g[o + 1][n]
                              , I = g[o + 1][n + 1]
                              , O = g[o][n + 1];
                            d.push(P, C, O),
                            d.push(C, I, O),
                            _ += 6
                        }
                    h.addGroup(x, _, 0),
                    x += _
                }(),
                !1 === o && (t > 0 && u(!0),
                e > 0 && u(!1)),
                this.setIndex(d),
                this.addAttribute("position", new Tt(p,3)),
                this.addAttribute("normal", new Tt(f,3)),
                this.addAttribute("uv", new Tt(m,2))
            }
            function En(t, e, n, r, i, a, o) {
                wn.call(this, 0, t, e, n, r, i, a, o),
                this.type = "ConeGeometry",
                this.parameters = {
                    radius: t,
                    height: e,
                    radialSegments: n,
                    heightSegments: r,
                    openEnded: i,
                    thetaStart: a,
                    thetaLength: o
                }
            }
            function Tn(t, e, n, r, i, a, o) {
                Mn.call(this, 0, t, e, n, r, i, a, o),
                this.type = "ConeBufferGeometry",
                this.parameters = {
                    radius: t,
                    height: e,
                    radialSegments: n,
                    heightSegments: r,
                    openEnded: i,
                    thetaStart: a,
                    thetaLength: o
                }
            }
            function Sn(t, e, n, r) {
                vt.call(this),
                this.type = "CircleGeometry",
                this.parameters = {
                    radius: t,
                    segments: e,
                    thetaStart: n,
                    thetaLength: r
                },
                this.fromBufferGeometry(new An(t,e,n,r)),
                this.mergeVertices()
            }
            function An(t, e, r, i) {
                Rt.call(this),
                this.type = "CircleBufferGeometry",
                this.parameters = {
                    radius: t,
                    segments: e,
                    thetaStart: r,
                    thetaLength: i
                },
                t = t || 50,
                e = void 0 !== e ? Math.max(3, e) : 8,
                r = void 0 !== r ? r : 0,
                i = void 0 !== i ? i : 2 * Math.PI;
                var a, o, s = [], c = [], u = [], h = [], d = new l, p = new n;
                for (c.push(0, 0, 0),
                u.push(0, 0, 1),
                h.push(.5, .5),
                o = 0,
                a = 3; o <= e; o++,
                a += 3) {
                    var f = r + o / e * i;
                    d.x = t * Math.cos(f),
                    d.y = t * Math.sin(f),
                    c.push(d.x, d.y, d.z),
                    u.push(0, 0, 1),
                    p.x = (c[a] / t + 1) / 2,
                    p.y = (c[a + 1] / t + 1) / 2,
                    h.push(p.x, p.y)
                }
                for (a = 1; a <= e; a++)
                    s.push(a, a + 1, 0);
                this.setIndex(s),
                this.addAttribute("position", new Tt(c,3)),
                this.addAttribute("normal", new Tt(u,3)),
                this.addAttribute("uv", new Tt(h,2))
            }
            function Ln(t) {
                J.call(this),
                this.type = "ShadowMaterial",
                this.color = new X(0),
                this.opacity = 1,
                this.lights = !0,
                this.transparent = !0,
                this.setValues(t)
            }
            function Rn(t) {
                K.call(this, t),
                this.type = "RawShaderMaterial"
            }
            function Pn(t) {
                J.call(this),
                this.defines = {
                    STANDARD: ""
                },
                this.type = "MeshStandardMaterial",
                this.color = new X(16777215),
                this.roughness = .5,
                this.metalness = .5,
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new X(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalScale = new n(1,1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.roughnessMap = null,
                this.metalnessMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.envMapIntensity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(t)
            }
            function Cn(t) {
                Pn.call(this),
                this.defines = {
                    PHYSICAL: ""
                },
                this.type = "MeshPhysicalMaterial",
                this.reflectivity = .5,
                this.clearCoat = 0,
                this.clearCoatRoughness = 0,
                this.setValues(t)
            }
            function In(t) {
                J.call(this),
                this.type = "MeshPhongMaterial",
                this.color = new X(16777215),
                this.specular = new X(1118481),
                this.shininess = 30,
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new X(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalScale = new n(1,1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = Ra,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(t)
            }
            function On(t) {
                In.call(this),
                this.defines = {
                    TOON: ""
                },
                this.type = "MeshToonMaterial",
                this.gradientMap = null,
                this.setValues(t)
            }
            function Nn(t) {
                J.call(this),
                this.type = "MeshNormalMaterial",
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalScale = new n(1,1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.lights = !1,
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(t)
            }
            function Dn(t) {
                J.call(this),
                this.type = "MeshLambertMaterial",
                this.color = new X(16777215),
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new X(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = Ra,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(t)
            }
            function Un(t) {
                Oe.call(this),
                this.type = "LineDashedMaterial",
                this.scale = 1,
                this.dashSize = 3,
                this.gapSize = 1,
                this.setValues(t)
            }
            function kn(t, e, n) {
                var r = this
                  , i = !1
                  , a = 0
                  , o = 0;
                this.onStart = void 0,
                this.onLoad = t,
                this.onProgress = e,
                this.onError = n,
                this.itemStart = function(t) {
                    o++,
                    !1 === i && void 0 !== r.onStart && r.onStart(t, a, o),
                    i = !0
                }
                ,
                this.itemEnd = function(t) {
                    a++,
                    void 0 !== r.onProgress && r.onProgress(t, a, o),
                    a === o && (i = !1,
                    void 0 !== r.onLoad && r.onLoad())
                }
                ,
                this.itemError = function(t) {
                    void 0 !== r.onError && r.onError(t)
                }
            }
            function Bn(t) {
                this.manager = void 0 !== t ? t : hs
            }
            function Fn(t) {
                this.manager = void 0 !== t ? t : hs,
                this._parser = null
            }
            function zn(t) {
                this.manager = void 0 !== t ? t : hs,
                this._parser = null
            }
            function jn(t) {
                this.manager = void 0 !== t ? t : hs
            }
            function Hn(t) {
                this.manager = void 0 !== t ? t : hs
            }
            function Gn(t) {
                this.manager = void 0 !== t ? t : hs
            }
            function Vn(t, e) {
                ut.call(this),
                this.type = "Light",
                this.color = new X(t),
                this.intensity = void 0 !== e ? e : 1,
                this.receiveShadow = void 0
            }
            function Wn(t, e, n) {
                Vn.call(this, t, n),
                this.type = "HemisphereLight",
                this.castShadow = void 0,
                this.position.copy(ut.DefaultUp),
                this.updateMatrix(),
                this.groundColor = new X(e)
            }
            function Xn(t) {
                this.camera = t,
                this.bias = 0,
                this.radius = 1,
                this.mapSize = new n(512,512),
                this.map = null,
                this.matrix = new c
            }
            function qn() {
                Xn.call(this, new pt(50,1,.5,500))
            }
            function Yn(t, e, n, r, i, a) {
                Vn.call(this, t, e),
                this.type = "SpotLight",
                this.position.copy(ut.DefaultUp),
                this.updateMatrix(),
                this.target = new ut,
                Object.defineProperty(this, "power", {
                    get: function() {
                        return this.intensity * Math.PI
                    },
                    set: function(t) {
                        this.intensity = t / Math.PI
                    }
                }),
                this.distance = void 0 !== n ? n : 0,
                this.angle = void 0 !== r ? r : Math.PI / 3,
                this.penumbra = void 0 !== i ? i : 0,
                this.decay = void 0 !== a ? a : 1,
                this.shadow = new qn
            }
            function $n(t, e, n, r) {
                Vn.call(this, t, e),
                this.type = "PointLight",
                Object.defineProperty(this, "power", {
                    get: function() {
                        return 4 * this.intensity * Math.PI
                    },
                    set: function(t) {
                        this.intensity = t / (4 * Math.PI)
                    }
                }),
                this.distance = void 0 !== n ? n : 0,
                this.decay = void 0 !== r ? r : 1,
                this.shadow = new Xn(new pt(90,1,.5,500))
            }
            function Zn() {
                Xn.call(this, new dt(-5,5,5,-5,.5,500))
            }
            function Jn(t, e) {
                Vn.call(this, t, e),
                this.type = "DirectionalLight",
                this.position.copy(ut.DefaultUp),
                this.updateMatrix(),
                this.target = new ut,
                this.shadow = new Zn
            }
            function Kn(t, e) {
                Vn.call(this, t, e),
                this.type = "AmbientLight",
                this.castShadow = void 0
            }
            function Qn(t, e, n, r) {
                Vn.call(this, t, e),
                this.type = "RectAreaLight",
                this.position.set(0, 1, 0),
                this.updateMatrix(),
                this.width = void 0 !== n ? n : 10,
                this.height = void 0 !== r ? r : 10
            }
            function tr(t, e, n, r) {
                this.parameterPositions = t,
                this._cachedIndex = 0,
                this.resultBuffer = void 0 !== r ? r : new e.constructor(n),
                this.sampleValues = e,
                this.valueSize = n
            }
            function er(t, e, n, r) {
                tr.call(this, t, e, n, r),
                this._weightPrev = -0,
                this._offsetPrev = -0,
                this._weightNext = -0,
                this._offsetNext = -0
            }
            function nr(t, e, n, r) {
                tr.call(this, t, e, n, r)
            }
            function rr(t, e, n, r) {
                tr.call(this, t, e, n, r)
            }
            function ir(t, e, n, r) {
                if (void 0 === t)
                    throw new Error("track name is undefined");
                if (void 0 === e || 0 === e.length)
                    throw new Error("no keyframes in track named " + t);
                this.name = t,
                this.times = ds.convertArray(e, this.TimeBufferType),
                this.values = ds.convertArray(n, this.ValueBufferType),
                this.setInterpolation(r || this.DefaultInterpolation),
                this.validate(),
                this.optimize()
            }
            function ar(t, e, n, r) {
                ir.call(this, t, e, n, r)
            }
            function or(t, e, n, r) {
                tr.call(this, t, e, n, r)
            }
            function sr(t, e, n, r) {
                ir.call(this, t, e, n, r)
            }
            function lr(t, e, n, r) {
                ir.call(this, t, e, n, r)
            }
            function cr(t, e, n, r) {
                ir.call(this, t, e, n, r)
            }
            function ur(t, e, n) {
                ir.call(this, t, e, n)
            }
            function hr(t, e, n, r) {
                ir.call(this, t, e, n, r)
            }
            function dr(t, e, n, r) {
                ir.apply(this, arguments)
            }
            function pr(t, e, n) {
                this.name = t,
                this.tracks = n,
                this.duration = void 0 !== e ? e : -1,
                this.uuid = Go.generateUUID(),
                this.duration < 0 && this.resetDuration(),
                this.optimize()
            }
            function fr(t) {
                this.manager = void 0 !== t ? t : hs,
                this.textures = {}
            }
            function mr(t) {
                this.manager = void 0 !== t ? t : hs
            }
            function vr() {
                this.onLoadStart = function() {}
                ,
                this.onLoadProgress = function() {}
                ,
                this.onLoadComplete = function() {}
            }
            function gr(t) {
                "boolean" == typeof t && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),
                t = void 0),
                this.manager = void 0 !== t ? t : hs,
                this.withCredentials = !1
            }
            function yr(t) {
                this.manager = void 0 !== t ? t : hs,
                this.texturePath = ""
            }
            function xr(t, e, n, r, i) {
                var a = .5 * (r - e)
                  , o = .5 * (i - n)
                  , s = t * t;
                return (2 * n - 2 * r + a + o) * (t * s) + (-3 * n + 3 * r - 2 * a - o) * s + a * t + n
            }
            function br(t, e) {
                var n = 1 - t;
                return n * n * e
            }
            function _r(t, e) {
                return 2 * (1 - t) * t * e
            }
            function wr(t, e) {
                return t * t * e
            }
            function Mr(t, e, n, r) {
                return br(t, e) + _r(t, n) + wr(t, r)
            }
            function Er(t, e) {
                var n = 1 - t;
                return n * n * n * e
            }
            function Tr(t, e) {
                var n = 1 - t;
                return 3 * n * n * t * e
            }
            function Sr(t, e) {
                return 3 * (1 - t) * t * t * e
            }
            function Ar(t, e) {
                return t * t * t * e
            }
            function Lr(t, e, n, r, i) {
                return Er(t, e) + Tr(t, n) + Sr(t, r) + Ar(t, i)
            }
            function Rr() {
                this.arcLengthDivisions = 200
            }
            function Pr(t, e) {
                Rr.call(this),
                this.v1 = t,
                this.v2 = e
            }
            function Cr() {
                Rr.call(this),
                this.curves = [],
                this.autoClose = !1
            }
            function Ir(t, e, n, r, i, a, o, s) {
                Rr.call(this),
                this.aX = t,
                this.aY = e,
                this.xRadius = n,
                this.yRadius = r,
                this.aStartAngle = i,
                this.aEndAngle = a,
                this.aClockwise = o,
                this.aRotation = s || 0
            }
            function Or(t) {
                Rr.call(this),
                this.points = void 0 === t ? [] : t
            }
            function Nr(t, e, n, r) {
                Rr.call(this),
                this.v0 = t,
                this.v1 = e,
                this.v2 = n,
                this.v3 = r
            }
            function Dr(t, e, n) {
                Rr.call(this),
                this.v0 = t,
                this.v1 = e,
                this.v2 = n
            }
            function Ur(t) {
                Cr.call(this),
                this.currentPoint = new n,
                t && this.fromPoints(t)
            }
            function kr() {
                Ur.apply(this, arguments),
                this.holes = []
            }
            function Br() {
                this.subPaths = [],
                this.currentPath = null
            }
            function Fr(t) {
                this.data = t
            }
            function zr(t) {
                this.manager = void 0 !== t ? t : hs
            }
            function jr(t) {
                this.manager = void 0 !== t ? t : hs
            }
            function Hr() {
                this.type = "StereoCamera",
                this.aspect = 1,
                this.eyeSep = .064,
                this.cameraL = new pt,
                this.cameraL.layers.enable(1),
                this.cameraL.matrixAutoUpdate = !1,
                this.cameraR = new pt,
                this.cameraR.layers.enable(2),
                this.cameraR.matrixAutoUpdate = !1
            }
            function Gr(t, e, n) {
                ut.call(this),
                this.type = "CubeCamera";
                var r = new pt(90,1,t,e);
                r.up.set(0, -1, 0),
                r.lookAt(new l(1,0,0)),
                this.add(r);
                var i = new pt(90,1,t,e);
                i.up.set(0, -1, 0),
                i.lookAt(new l(-1,0,0)),
                this.add(i);
                var a = new pt(90,1,t,e);
                a.up.set(0, 0, 1),
                a.lookAt(new l(0,1,0)),
                this.add(a);
                var s = new pt(90,1,t,e);
                s.up.set(0, 0, -1),
                s.lookAt(new l(0,-1,0)),
                this.add(s);
                var c = new pt(90,1,t,e);
                c.up.set(0, -1, 0),
                c.lookAt(new l(0,0,1)),
                this.add(c);
                var u = new pt(90,1,t,e);
                u.up.set(0, -1, 0),
                u.lookAt(new l(0,0,-1)),
                this.add(u);
                var h = {
                    format: po,
                    magFilter: Za,
                    minFilter: Za
                };
                this.renderTarget = new o(n,n,h),
                this.renderTarget.texture.name = "CubeCamera",
                this.update = function(t, e) {
                    null === this.parent && this.updateMatrixWorld();
                    var n = this.renderTarget
                      , o = n.texture.generateMipmaps;
                    n.texture.generateMipmaps = !1,
                    n.activeCubeFace = 0,
                    t.render(e, r, n),
                    n.activeCubeFace = 1,
                    t.render(e, i, n),
                    n.activeCubeFace = 2,
                    t.render(e, a, n),
                    n.activeCubeFace = 3,
                    t.render(e, s, n),
                    n.activeCubeFace = 4,
                    t.render(e, c, n),
                    n.texture.generateMipmaps = o,
                    n.activeCubeFace = 5,
                    t.render(e, u, n),
                    t.setRenderTarget(null)
                }
                ,
                this.clear = function(t, e, n, r) {
                    for (var i = this.renderTarget, a = 0; a < 6; a++)
                        i.activeCubeFace = a,
                        t.setRenderTarget(i),
                        t.clear(e, n, r);
                    t.setRenderTarget(null)
                }
            }
            function Vr() {
                ut.call(this),
                this.type = "AudioListener",
                this.context = bs.getContext(),
                this.gain = this.context.createGain(),
                this.gain.connect(this.context.destination),
                this.filter = null
            }
            function Wr(t) {
                ut.call(this),
                this.type = "Audio",
                this.context = t.context,
                this.gain = this.context.createGain(),
                this.gain.connect(t.getInput()),
                this.autoplay = !1,
                this.buffer = null,
                this.loop = !1,
                this.startTime = 0,
                this.playbackRate = 1,
                this.isPlaying = !1,
                this.hasPlaybackControl = !0,
                this.sourceType = "empty",
                this.filters = []
            }
            function Xr(t) {
                Wr.call(this, t),
                this.panner = this.context.createPanner(),
                this.panner.connect(this.gain)
            }
            function qr(t, e) {
                this.analyser = t.context.createAnalyser(),
                this.analyser.fftSize = void 0 !== e ? e : 2048,
                this.data = new Uint8Array(this.analyser.frequencyBinCount),
                t.getOutput().connect(this.analyser)
            }
            function Yr(t, e, n) {
                this.binding = t,
                this.valueSize = n;
                var r, i = Float64Array;
                switch (e) {
                case "quaternion":
                    r = this._slerp;
                    break;
                case "string":
                case "bool":
                    i = Array,
                    r = this._select;
                    break;
                default:
                    r = this._lerp
                }
                this.buffer = new i(4 * n),
                this._mixBufferRegion = r,
                this.cumulativeWeight = 0,
                this.useCount = 0,
                this.referenceCount = 0
            }
            function $r(t, e, n) {
                var r = n || Zr.parseTrackName(e);
                this._targetGroup = t,
                this._bindings = t.subscribe_(e, r)
            }
            function Zr(t, e, n) {
                this.path = e,
                this.parsedPath = n || Zr.parseTrackName(e),
                this.node = Zr.findNode(t, this.parsedPath.nodeName) || t,
                this.rootNode = t
            }
            function Jr(t) {
                this.uuid = Go.generateUUID(),
                this._objects = Array.prototype.slice.call(arguments),
                this.nCachedObjects_ = 0;
                var e = {};
                this._indicesByUUID = e;
                for (var n = 0, r = arguments.length; n !== r; ++n)
                    e[arguments[n].uuid] = n;
                this._paths = [],
                this._parsedPaths = [],
                this._bindings = [],
                this._bindingsIndicesByPath = {};
                var i = this;
                this.stats = {
                    objects: {
                        get total() {
                            return i._objects.length
                        },
                        get inUse() {
                            return this.total - i.nCachedObjects_
                        }
                    },
                    get bindingsPerObject() {
                        return i._bindings.length
                    }
                }
            }
            function Kr(t, e, n) {
                this._mixer = t,
                this._clip = e,
                this._localRoot = n || null;
                for (var r = e.tracks, i = r.length, a = new Array(i), o = {
                    endingStart: Po,
                    endingEnd: Po
                }, s = 0; s !== i; ++s) {
                    var l = r[s].createInterpolant(null);
                    a[s] = l,
                    l.settings = o
                }
                this._interpolantSettings = o,
                this._interpolants = a,
                this._propertyBindings = new Array(i),
                this._cacheIndex = null,
                this._byClipCacheIndex = null,
                this._timeScaleInterpolant = null,
                this._weightInterpolant = null,
                this.loop = Ro,
                this._loopCount = -1,
                this._startTime = null,
                this.time = 0,
                this.timeScale = 1,
                this._effectiveTimeScale = 1,
                this.weight = 1,
                this._effectiveWeight = 1,
                this.repetitions = 1 / 0,
                this.paused = !1,
                this.enabled = !0,
                this.clampWhenFinished = !1,
                this.zeroSlopeAtStart = !0,
                this.zeroSlopeAtEnd = !0
            }
            function Qr(t) {
                this._root = t,
                this._initMemoryManager(),
                this._accuIndex = 0,
                this.time = 0,
                this.timeScale = 1
            }
            function ti(t) {
                "string" == typeof t && (console.warn("THREE.Uniform: Type parameter is no longer needed."),
                t = arguments[1]),
                this.value = t
            }
            function ei() {
                Rt.call(this),
                this.type = "InstancedBufferGeometry",
                this.maxInstancedCount = void 0
            }
            function ni(t, e, n, r) {
                this.uuid = Go.generateUUID(),
                this.data = t,
                this.itemSize = e,
                this.offset = n,
                this.normalized = !0 === r
            }
            function ri(t, e) {
                this.uuid = Go.generateUUID(),
                this.array = t,
                this.stride = e,
                this.count = void 0 !== t ? t.length / e : 0,
                this.dynamic = !1,
                this.updateRange = {
                    offset: 0,
                    count: -1
                },
                this.onUploadCallback = function() {}
                ,
                this.version = 0
            }
            function ii(t, e, n) {
                ri.call(this, t, e),
                this.meshPerAttribute = n || 1
            }
            function ai(t, e, n) {
                gt.call(this, t, e),
                this.meshPerAttribute = n || 1
            }
            function oi(t, e, n, r) {
                this.ray = new Dt(t,e),
                this.near = n || 0,
                this.far = r || 1 / 0,
                this.params = {
                    Mesh: {},
                    Line: {},
                    LOD: {},
                    Points: {
                        threshold: 1
                    },
                    Sprite: {}
                },
                Object.defineProperties(this.params, {
                    PointCloud: {
                        get: function() {
                            return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),
                            this.Points
                        }
                    }
                })
            }
            function si(t, e) {
                return t.distance - e.distance
            }
            function li(t, e, n, r) {
                if (!1 !== t.visible && (t.raycast(e, n),
                !0 === r))
                    for (var i = t.children, a = 0, o = i.length; a < o; a++)
                        li(i[a], e, n, !0)
            }
            function ci(t) {
                this.autoStart = void 0 === t || t,
                this.startTime = 0,
                this.oldTime = 0,
                this.elapsedTime = 0,
                this.running = !1
            }
            function ui(t, e, n) {
                return this.radius = void 0 !== t ? t : 1,
                this.phi = void 0 !== e ? e : 0,
                this.theta = void 0 !== n ? n : 0,
                this
            }
            function hi(t, e, n) {
                return this.radius = void 0 !== t ? t : 1,
                this.theta = void 0 !== e ? e : 0,
                this.y = void 0 !== n ? n : 0,
                this
            }
            function di(t) {
                ut.call(this),
                this.material = t,
                this.render = function(t) {}
            }
            function pi(t, e, n, r) {
                this.object = t,
                this.size = void 0 !== e ? e : 1;
                var i = void 0 !== n ? n : 16711680
                  , a = void 0 !== r ? r : 1
                  , o = 0
                  , s = this.object.geometry;
                s && s.isGeometry ? o = 3 * s.faces.length : s && s.isBufferGeometry && (o = s.attributes.normal.count);
                var l = new Rt
                  , c = new Tt(2 * o * 3,3);
                l.addAttribute("position", c),
                De.call(this, l, new Oe({
                    color: i,
                    linewidth: a
                })),
                this.matrixAutoUpdate = !1,
                this.update()
            }
            function fi(t, e) {
                ut.call(this),
                this.light = t,
                this.light.updateMatrixWorld(),
                this.matrix = t.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.color = e;
                for (var n = new Rt, r = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], i = 0, a = 1; i < 32; i++,
                a++) {
                    var o = i / 32 * Math.PI * 2
                      , s = a / 32 * Math.PI * 2;
                    r.push(Math.cos(o), Math.sin(o), 1, Math.cos(s), Math.sin(s), 1)
                }
                n.addAttribute("position", new Tt(r,3));
                var l = new Oe({
                    fog: !1
                });
                this.cone = new De(n,l),
                this.add(this.cone),
                this.update()
            }
            function mi(t) {
                var e = [];
                t && t.isBone && e.push(t);
                for (var n = 0; n < t.children.length; n++)
                    e.push.apply(e, mi(t.children[n]));
                return e
            }
            function vi(t) {
                for (var e = mi(t), n = new Rt, r = [], i = [], a = new X(0,0,1), o = new X(0,1,0), s = 0; s < e.length; s++) {
                    var l = e[s];
                    l.parent && l.parent.isBone && (r.push(0, 0, 0),
                    r.push(0, 0, 0),
                    i.push(a.r, a.g, a.b),
                    i.push(o.r, o.g, o.b))
                }
                n.addAttribute("position", new Tt(r,3)),
                n.addAttribute("color", new Tt(i,3));
                var c = new Oe({
                    vertexColors: Ki,
                    depthTest: !1,
                    depthWrite: !1,
                    transparent: !0
                });
                De.call(this, n, c),
                this.root = t,
                this.bones = e,
                this.matrix = t.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.onBeforeRender()
            }
            function gi(t, e, n) {
                this.light = t,
                this.light.updateMatrixWorld(),
                this.color = n;
                var r = new fn(e,4,2)
                  , i = new Nt({
                    wireframe: !0,
                    fog: !1
                });
                Bt.call(this, r, i),
                this.matrix = this.light.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.update()
            }
            function yi(t, e) {
                ut.call(this),
                this.light = t,
                this.light.updateMatrixWorld(),
                this.matrix = t.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.color = e;
                var n = new Oe({
                    fog: !1
                })
                  , r = new Rt;
                r.addAttribute("position", new gt(new Float32Array(15),3)),
                this.line = new Ne(r,n),
                this.add(this.line),
                this.update()
            }
            function xi(t, e, n) {
                ut.call(this),
                this.light = t,
                this.light.updateMatrixWorld(),
                this.matrix = t.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.color = n;
                var r = new Je(e);
                r.rotateY(.5 * Math.PI),
                this.material = new Nt({
                    wireframe: !0,
                    fog: !1
                }),
                void 0 === this.color && (this.material.vertexColors = Ki);
                var i = r.getAttribute("position")
                  , a = new Float32Array(3 * i.count);
                r.addAttribute("color", new gt(a,3)),
                this.add(new Bt(r,this.material)),
                this.update()
            }
            function bi(t, e, n, r) {
                t = t || 10,
                e = e || 10,
                n = new X(void 0 !== n ? n : 4473924),
                r = new X(void 0 !== r ? r : 8947848);
                for (var i = e / 2, a = t / e, o = t / 2, s = [], l = [], c = 0, u = 0, h = -o; c <= e; c++,
                h += a) {
                    s.push(-o, 0, h, o, 0, h),
                    s.push(h, 0, -o, h, 0, o);
                    var d = c === i ? n : r;
                    d.toArray(l, u),
                    u += 3,
                    d.toArray(l, u),
                    u += 3,
                    d.toArray(l, u),
                    u += 3,
                    d.toArray(l, u),
                    u += 3
                }
                var p = new Rt;
                p.addAttribute("position", new Tt(s,3)),
                p.addAttribute("color", new Tt(l,3));
                var f = new Oe({
                    vertexColors: Ki
                });
                De.call(this, p, f)
            }
            function _i(t, e, n, r, i, a) {
                t = t || 10,
                e = e || 16,
                n = n || 8,
                r = r || 64,
                i = new X(void 0 !== i ? i : 4473924),
                a = new X(void 0 !== a ? a : 8947848);
                var o, s, l, c, u, h, d, p = [], f = [];
                for (c = 0; c <= e; c++)
                    l = c / e * (2 * Math.PI),
                    o = Math.sin(l) * t,
                    s = Math.cos(l) * t,
                    p.push(0, 0, 0),
                    p.push(o, 0, s),
                    d = 1 & c ? i : a,
                    f.push(d.r, d.g, d.b),
                    f.push(d.r, d.g, d.b);
                for (c = 0; c <= n; c++)
                    for (d = 1 & c ? i : a,
                    h = t - t / n * c,
                    u = 0; u < r; u++)
                        l = u / r * (2 * Math.PI),
                        o = Math.sin(l) * h,
                        s = Math.cos(l) * h,
                        p.push(o, 0, s),
                        f.push(d.r, d.g, d.b),
                        l = (u + 1) / r * (2 * Math.PI),
                        o = Math.sin(l) * h,
                        s = Math.cos(l) * h,
                        p.push(o, 0, s),
                        f.push(d.r, d.g, d.b);
                var m = new Rt;
                m.addAttribute("position", new Tt(p,3)),
                m.addAttribute("color", new Tt(f,3));
                var v = new Oe({
                    vertexColors: Ki
                });
                De.call(this, m, v)
            }
            function wi(t, e, n, r) {
                this.object = t,
                this.size = void 0 !== e ? e : 1;
                var i = void 0 !== n ? n : 16776960
                  , a = void 0 !== r ? r : 1
                  , o = 0
                  , s = this.object.geometry;
                s && s.isGeometry ? o = s.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
                var l = new Rt
                  , c = new Tt(2 * o * 3,3);
                l.addAttribute("position", c),
                De.call(this, l, new Oe({
                    color: i,
                    linewidth: a
                })),
                this.matrixAutoUpdate = !1,
                this.update()
            }
            function Mi(t, e, n) {
                ut.call(this),
                this.light = t,
                this.light.updateMatrixWorld(),
                this.matrix = t.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.color = n,
                void 0 === e && (e = 1);
                var r = new Rt;
                r.addAttribute("position", new Tt([-e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0],3));
                var i = new Oe({
                    fog: !1
                });
                this.lightPlane = new Ne(r,i),
                this.add(this.lightPlane),
                (r = new Rt).addAttribute("position", new Tt([0, 0, 0, 0, 0, 1],3)),
                this.targetLine = new Ne(r,i),
                this.add(this.targetLine),
                this.update()
            }
            function Ei(t) {
                function e(t, e, r) {
                    n(t, r),
                    n(e, r)
                }
                function n(t, e) {
                    a.push(0, 0, 0),
                    o.push(e.r, e.g, e.b),
                    void 0 === s[t] && (s[t] = []),
                    s[t].push(a.length / 3 - 1)
                }
                var r = new Rt
                  , i = new Oe({
                    color: 16777215,
                    vertexColors: Ji
                })
                  , a = []
                  , o = []
                  , s = {}
                  , l = new X(16755200)
                  , c = new X(16711680)
                  , u = new X(43775)
                  , h = new X(16777215)
                  , d = new X(3355443);
                e("n1", "n2", l),
                e("n2", "n4", l),
                e("n4", "n3", l),
                e("n3", "n1", l),
                e("f1", "f2", l),
                e("f2", "f4", l),
                e("f4", "f3", l),
                e("f3", "f1", l),
                e("n1", "f1", l),
                e("n2", "f2", l),
                e("n3", "f3", l),
                e("n4", "f4", l),
                e("p", "n1", c),
                e("p", "n2", c),
                e("p", "n3", c),
                e("p", "n4", c),
                e("u1", "u2", u),
                e("u2", "u3", u),
                e("u3", "u1", u),
                e("c", "t", h),
                e("p", "c", d),
                e("cn1", "cn2", d),
                e("cn3", "cn4", d),
                e("cf1", "cf2", d),
                e("cf3", "cf4", d),
                r.addAttribute("position", new Tt(a,3)),
                r.addAttribute("color", new Tt(o,3)),
                De.call(this, r, i),
                this.camera = t,
                this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
                this.matrix = t.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.pointMap = s,
                this.update()
            }
            function Ti(t, e) {
                this.object = t,
                void 0 === e && (e = 16776960);
                var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
                  , r = new Float32Array(24)
                  , i = new Rt;
                i.setIndex(new gt(n,1)),
                i.addAttribute("position", new gt(r,3)),
                De.call(this, i, new Oe({
                    color: e
                })),
                this.matrixAutoUpdate = !1,
                this.update()
            }
            function Si(t, e) {
                this.type = "Box3Helper",
                this.box = t;
                var n = void 0 !== e ? e : 16776960
                  , r = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
                  , i = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1]
                  , a = new Rt;
                a.setIndex(new gt(r,1)),
                a.addAttribute("position", new Tt(i,3)),
                De.call(this, a, new Oe({
                    color: n
                })),
                this.geometry.computeBoundingSphere(),
                this.onBeforeRender()
            }
            function Ai(t, e, n) {
                this.type = "PlaneHelper",
                this.plane = t,
                this.size = void 0 === e ? 1 : e;
                var r = void 0 !== n ? n : 16776960
                  , i = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]
                  , a = new Rt;
                a.addAttribute("position", new Tt(i,3)),
                a.computeBoundingSphere(),
                Ne.call(this, a, new Oe({
                    color: r
                }));
                var o = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1]
                  , s = new Rt;
                s.addAttribute("position", new Tt(o,3)),
                s.computeBoundingSphere(),
                this.add(new Bt(s,new Nt({
                    color: r,
                    opacity: .2,
                    transparent: !0,
                    depthWrite: !1
                }))),
                this.onBeforeRender()
            }
            function Li(t, e, n, r, i, a) {
                ut.call(this),
                void 0 === r && (r = 16776960),
                void 0 === n && (n = 1),
                void 0 === i && (i = .2 * n),
                void 0 === a && (a = .2 * i),
                void 0 === _s && ((_s = new Rt).addAttribute("position", new Tt([0, 0, 0, 0, 1, 0],3)),
                (ws = new Mn(0,.5,1,5,1)).translate(0, -.5, 0)),
                this.position.copy(e),
                this.line = new Ne(_s,new Oe({
                    color: r
                })),
                this.line.matrixAutoUpdate = !1,
                this.add(this.line),
                this.cone = new Bt(ws,new Nt({
                    color: r
                })),
                this.cone.matrixAutoUpdate = !1,
                this.add(this.cone),
                this.setDirection(t),
                this.setLength(n, i, a)
            }
            function Ri(t) {
                var e = [0, 0, 0, t = t || 1, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t]
                  , n = [1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1]
                  , r = new Rt;
                r.addAttribute("position", new Tt(e,3)),
                r.addAttribute("color", new Tt(n,3));
                var i = new Oe({
                    vertexColors: Ki
                });
                De.call(this, r, i)
            }
            function Pi() {
                function t(t, a, o, s) {
                    e = t,
                    n = o,
                    r = -3 * t + 3 * a - 2 * o - s,
                    i = 2 * t - 2 * a + o + s
                }
                var e = 0
                  , n = 0
                  , r = 0
                  , i = 0;
                return {
                    initCatmullRom: function(e, n, r, i, a) {
                        t(n, r, a * (r - e), a * (i - n))
                    },
                    initNonuniformCatmullRom: function(e, n, r, i, a, o, s) {
                        var l = (n - e) / a - (r - e) / (a + o) + (r - n) / o
                          , c = (r - n) / o - (i - n) / (o + s) + (i - r) / s;
                        t(n, r, l *= o, c *= o)
                    },
                    calc: function(t) {
                        var a = t * t;
                        return e + n * t + r * a + i * (a * t)
                    }
                }
            }
            function Ci(t) {
                Rr.call(this),
                t.length < 2 && console.warn("THREE.CatmullRomCurve3: Points array needs at least two entries."),
                this.points = t || [],
                this.closed = !1
            }
            function Ii(t, e, n, r) {
                Rr.call(this),
                this.v0 = t,
                this.v1 = e,
                this.v2 = n,
                this.v3 = r
            }
            function Oi(t, e, n) {
                Rr.call(this),
                this.v0 = t,
                this.v1 = e,
                this.v2 = n
            }
            function Ni(t, e) {
                Rr.call(this),
                this.v1 = t,
                this.v2 = e
            }
            function Di(t, e, n, r, i, a) {
                Ir.call(this, t, e, n, n, r, i, a)
            }
            function Ui(t) {
                console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
                Ci.call(this, t),
                this.type = "catmullrom",
                this.closed = !0
            }
            function ki(t) {
                console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
                Ci.call(this, t),
                this.type = "catmullrom"
            }
            function Bi(t) {
                console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),
                Ci.call(this, t),
                this.type = "catmullrom"
            }
            void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
            void 0 === Number.isInteger && (Number.isInteger = function(t) {
                return "number" == typeof t && isFinite(t) && Math.floor(t) === t
            }
            ),
            void 0 === Math.sign && (Math.sign = function(t) {
                return t < 0 ? -1 : t > 0 ? 1 : +t
            }
            ),
            void 0 === Function.prototype.name && Object.defineProperty(Function.prototype, "name", {
                get: function() {
                    return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
                }
            }),
            void 0 === Object.assign && (Object.assign = function(t) {
                if (void 0 === t || null === t)
                    throw new TypeError("Cannot convert undefined or null to object");
                for (var e = Object(t), n = 1; n < arguments.length; n++) {
                    var r = arguments[n];
                    if (void 0 !== r && null !== r)
                        for (var i in r)
                            Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i])
                }
                return e
            }
            ),
            Object.assign(e.prototype, {
                addEventListener: function(t, e) {
                    void 0 === this._listeners && (this._listeners = {});
                    var n = this._listeners;
                    void 0 === n[t] && (n[t] = []),
                    -1 === n[t].indexOf(e) && n[t].push(e)
                },
                hasEventListener: function(t, e) {
                    if (void 0 === this._listeners)
                        return !1;
                    var n = this._listeners;
                    return void 0 !== n[t] && -1 !== n[t].indexOf(e)
                },
                removeEventListener: function(t, e) {
                    if (void 0 !== this._listeners) {
                        var n = this._listeners[t];
                        if (void 0 !== n) {
                            var r = n.indexOf(e);
                            -1 !== r && n.splice(r, 1)
                        }
                    }
                },
                dispatchEvent: function(t) {
                    if (void 0 !== this._listeners) {
                        var e = this._listeners[t.type];
                        if (void 0 !== e) {
                            t.target = this;
                            for (var n = e.slice(0), r = 0, i = n.length; r < i; r++)
                                n[r].call(this, t)
                        }
                    }
                }
            });
            var Fi = "87"
              , zi = {
                LEFT: 0,
                MIDDLE: 1,
                RIGHT: 2
            }
              , ji = 0
              , Hi = 1
              , Gi = 2
              , Vi = 0
              , Wi = 1
              , Xi = 2
              , qi = 0
              , Yi = 1
              , $i = 2
              , Zi = 0
              , Ji = 1
              , Ki = 2
              , Qi = 0
              , ta = 1
              , ea = 2
              , na = 3
              , ra = 4
              , ia = 5
              , aa = 100
              , oa = 101
              , sa = 102
              , la = 103
              , ca = 104
              , ua = 200
              , ha = 201
              , da = 202
              , pa = 203
              , fa = 204
              , ma = 205
              , va = 206
              , ga = 207
              , ya = 208
              , xa = 209
              , ba = 210
              , _a = 0
              , wa = 1
              , Ma = 2
              , Ea = 3
              , Ta = 4
              , Sa = 5
              , Aa = 6
              , La = 7
              , Ra = 0
              , Pa = 1
              , Ca = 2
              , Ia = 0
              , Oa = 1
              , Na = 2
              , Da = 3
              , Ua = 4
              , ka = 301
              , Ba = 302
              , Fa = 303
              , za = 304
              , ja = 305
              , Ha = 306
              , Ga = 307
              , Va = 1e3
              , Wa = 1001
              , Xa = 1002
              , qa = 1003
              , Ya = 1004
              , $a = 1005
              , Za = 1006
              , Ja = 1007
              , Ka = 1008
              , Qa = 1009
              , to = 1010
              , eo = 1011
              , no = 1012
              , ro = 1013
              , io = 1014
              , ao = 1015
              , oo = 1016
              , so = 1017
              , lo = 1018
              , co = 1019
              , uo = 1020
              , ho = 1021
              , po = 1022
              , fo = 1023
              , mo = 1024
              , vo = 1025
              , go = fo
              , yo = 1026
              , xo = 1027
              , bo = 2001
              , _o = 2002
              , wo = 2003
              , Mo = 2004
              , Eo = 2100
              , To = 2101
              , So = 2102
              , Ao = 2103
              , Lo = 2151
              , Ro = 2201
              , Po = 2400
              , Co = 0
              , Io = 1
              , Oo = 2
              , No = 3e3
              , Do = 3001
              , Uo = 3007
              , ko = 3002
              , Bo = 3004
              , Fo = 3005
              , zo = 3006
              , jo = 3200
              , Ho = 3201
              , Go = {
                DEG2RAD: Math.PI / 180,
                RAD2DEG: 180 / Math.PI,
                generateUUID: function() {
                    var t, e = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), n = new Array(36), r = 0;
                    return function() {
                        for (var i = 0; i < 36; i++)
                            8 === i || 13 === i || 18 === i || 23 === i ? n[i] = "-" : 14 === i ? n[i] = "4" : (r <= 2 && (r = 33554432 + 16777216 * Math.random() | 0),
                            t = 15 & r,
                            r >>= 4,
                            n[i] = e[19 === i ? 3 & t | 8 : t]);
                        return n.join("")
                    }
                }(),
                clamp: function(t, e, n) {
                    return Math.max(e, Math.min(n, t))
                },
                euclideanModulo: function(t, e) {
                    return (t % e + e) % e
                },
                mapLinear: function(t, e, n, r, i) {
                    return r + (t - e) * (i - r) / (n - e)
                },
                lerp: function(t, e, n) {
                    return (1 - n) * t + n * e
                },
                smoothstep: function(t, e, n) {
                    return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e)) * t * (3 - 2 * t)
                },
                smootherstep: function(t, e, n) {
                    return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e)) * t * t * (t * (6 * t - 15) + 10)
                },
                randInt: function(t, e) {
                    return t + Math.floor(Math.random() * (e - t + 1))
                },
                randFloat: function(t, e) {
                    return t + Math.random() * (e - t)
                },
                randFloatSpread: function(t) {
                    return t * (.5 - Math.random())
                },
                degToRad: function(t) {
                    return t * Go.DEG2RAD
                },
                radToDeg: function(t) {
                    return t * Go.RAD2DEG
                },
                isPowerOfTwo: function(t) {
                    return 0 == (t & t - 1) && 0 !== t
                },
                nearestPowerOfTwo: function(t) {
                    return Math.pow(2, Math.round(Math.log(t) / Math.LN2))
                },
                nextPowerOfTwo: function(t) {
                    return t--,
                    t |= t >> 1,
                    t |= t >> 2,
                    t |= t >> 4,
                    t |= t >> 8,
                    t |= t >> 16,
                    ++t
                }
            };
            Object.defineProperties(n.prototype, {
                width: {
                    get: function() {
                        return this.x
                    },
                    set: function(t) {
                        this.x = t
                    }
                },
                height: {
                    get: function() {
                        return this.y
                    },
                    set: function(t) {
                        this.y = t
                    }
                }
            }),
            Object.assign(n.prototype, {
                isVector2: !0,
                set: function(t, e) {
                    return this.x = t,
                    this.y = e,
                    this
                },
                setScalar: function(t) {
                    return this.x = t,
                    this.y = t,
                    this
                },
                setX: function(t) {
                    return this.x = t,
                    this
                },
                setY: function(t) {
                    return this.y = t,
                    this
                },
                setComponent: function(t, e) {
                    switch (t) {
                    case 0:
                        this.x = e;
                        break;
                    case 1:
                        this.y = e;
                        break;
                    default:
                        throw new Error("index is out of range: " + t)
                    }
                    return this
                },
                getComponent: function(t) {
                    switch (t) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    default:
                        throw new Error("index is out of range: " + t)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x,this.y)
                },
                copy: function(t) {
                    return this.x = t.x,
                    this.y = t.y,
                    this
                },
                add: function(t, e) {
                    return void 0 !== e ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
                    this.addVectors(t, e)) : (this.x += t.x,
                    this.y += t.y,
                    this)
                },
                addScalar: function(t) {
                    return this.x += t,
                    this.y += t,
                    this
                },
                addVectors: function(t, e) {
                    return this.x = t.x + e.x,
                    this.y = t.y + e.y,
                    this
                },
                addScaledVector: function(t, e) {
                    return this.x += t.x * e,
                    this.y += t.y * e,
                    this
                },
                sub: function(t, e) {
                    return void 0 !== e ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
                    this.subVectors(t, e)) : (this.x -= t.x,
                    this.y -= t.y,
                    this)
                },
                subScalar: function(t) {
                    return this.x -= t,
                    this.y -= t,
                    this
                },
                subVectors: function(t, e) {
                    return this.x = t.x - e.x,
                    this.y = t.y - e.y,
                    this
                },
                multiply: function(t) {
                    return this.x *= t.x,
                    this.y *= t.y,
                    this
                },
                multiplyScalar: function(t) {
                    return this.x *= t,
                    this.y *= t,
                    this
                },
                divide: function(t) {
                    return this.x /= t.x,
                    this.y /= t.y,
                    this
                },
                divideScalar: function(t) {
                    return this.multiplyScalar(1 / t)
                },
                min: function(t) {
                    return this.x = Math.min(this.x, t.x),
                    this.y = Math.min(this.y, t.y),
                    this
                },
                max: function(t) {
                    return this.x = Math.max(this.x, t.x),
                    this.y = Math.max(this.y, t.y),
                    this
                },
                clamp: function(t, e) {
                    return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                    this.y = Math.max(t.y, Math.min(e.y, this.y)),
                    this
                },
                clampScalar: function() {
                    var t = new n
                      , e = new n;
                    return function(n, r) {
                        return t.set(n, n),
                        e.set(r, r),
                        this.clamp(t, e)
                    }
                }(),
                clampLength: function(t, e) {
                    var n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
                },
                floor: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this
                },
                round: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this
                },
                negate: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this
                },
                dot: function(t) {
                    return this.x * t.x + this.y * t.y
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y)
                },
                lengthManhattan: function() {
                    return Math.abs(this.x) + Math.abs(this.y)
                },
                normalize: function() {
                    return this.divideScalar(this.length() || 1)
                },
                angle: function() {
                    var t = Math.atan2(this.y, this.x);
                    return t < 0 && (t += 2 * Math.PI),
                    t
                },
                distanceTo: function(t) {
                    return Math.sqrt(this.distanceToSquared(t))
                },
                distanceToSquared: function(t) {
                    var e = this.x - t.x
                      , n = this.y - t.y;
                    return e * e + n * n
                },
                distanceToManhattan: function(t) {
                    return Math.abs(this.x - t.x) + Math.abs(this.y - t.y)
                },
                setLength: function(t) {
                    return this.normalize().multiplyScalar(t)
                },
                lerp: function(t, e) {
                    return this.x += (t.x - this.x) * e,
                    this.y += (t.y - this.y) * e,
                    this
                },
                lerpVectors: function(t, e, n) {
                    return this.subVectors(e, t).multiplyScalar(n).add(t)
                },
                equals: function(t) {
                    return t.x === this.x && t.y === this.y
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0),
                    this.x = t[e],
                    this.y = t[e + 1],
                    this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                    t[e] = this.x,
                    t[e + 1] = this.y,
                    t
                },
                fromBufferAttribute: function(t, e, n) {
                    return void 0 !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),
                    this.x = t.getX(e),
                    this.y = t.getY(e),
                    this
                },
                rotateAround: function(t, e) {
                    var n = Math.cos(e)
                      , r = Math.sin(e)
                      , i = this.x - t.x
                      , a = this.y - t.y;
                    return this.x = i * n - a * r + t.x,
                    this.y = i * r + a * n + t.y,
                    this
                }
            });
            var Vo = 0;
            r.DEFAULT_IMAGE = void 0,
            r.DEFAULT_MAPPING = 300,
            Object.defineProperty(r.prototype, "needsUpdate", {
                set: function(t) {
                    !0 === t && this.version++
                }
            }),
            Object.assign(r.prototype, e.prototype, {
                constructor: r,
                isTexture: !0,
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.name = t.name,
                    this.image = t.image,
                    this.mipmaps = t.mipmaps.slice(0),
                    this.mapping = t.mapping,
                    this.wrapS = t.wrapS,
                    this.wrapT = t.wrapT,
                    this.magFilter = t.magFilter,
                    this.minFilter = t.minFilter,
                    this.anisotropy = t.anisotropy,
                    this.format = t.format,
                    this.type = t.type,
                    this.offset.copy(t.offset),
                    this.repeat.copy(t.repeat),
                    this.generateMipmaps = t.generateMipmaps,
                    this.premultiplyAlpha = t.premultiplyAlpha,
                    this.flipY = t.flipY,
                    this.unpackAlignment = t.unpackAlignment,
                    this.encoding = t.encoding,
                    this
                },
                toJSON: function(t) {
                    if (void 0 !== t.textures[this.uuid])
                        return t.textures[this.uuid];
                    var e = {
                        metadata: {
                            version: 4.5,
                            type: "Texture",
                            generator: "Texture.toJSON"
                        },
                        uuid: this.uuid,
                        name: this.name,
                        mapping: this.mapping,
                        repeat: [this.repeat.x, this.repeat.y],
                        offset: [this.offset.x, this.offset.y],
                        wrap: [this.wrapS, this.wrapT],
                        minFilter: this.minFilter,
                        magFilter: this.magFilter,
                        anisotropy: this.anisotropy,
                        flipY: this.flipY
                    };
                    if (void 0 !== this.image) {
                        var n = this.image;
                        void 0 === n.uuid && (n.uuid = Go.generateUUID()),
                        void 0 === t.images[n.uuid] && (t.images[n.uuid] = {
                            uuid: n.uuid,
                            url: function(t) {
                                var e;
                                if (t instanceof HTMLCanvasElement)
                                    e = t;
                                else {
                                    (e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")).width = t.width,
                                    e.height = t.height;
                                    var n = e.getContext("2d");
                                    t instanceof ImageData ? n.putImageData(t, 0, 0) : n.drawImage(t, 0, 0, t.width, t.height)
                                }
                                return e.width > 2048 || e.height > 2048 ? e.toDataURL("image/jpeg", .6) : e.toDataURL("image/png")
                            }(n)
                        }),
                        e.image = n.uuid
                    }
                    return t.textures[this.uuid] = e,
                    e
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                },
                transformUv: function(t) {
                    if (300 === this.mapping) {
                        if (t.multiply(this.repeat),
                        t.add(this.offset),
                        t.x < 0 || t.x > 1)
                            switch (this.wrapS) {
                            case Va:
                                t.x = t.x - Math.floor(t.x);
                                break;
                            case Wa:
                                t.x = t.x < 0 ? 0 : 1;
                                break;
                            case Xa:
                                1 === Math.abs(Math.floor(t.x) % 2) ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x)
                            }
                        if (t.y < 0 || t.y > 1)
                            switch (this.wrapT) {
                            case Va:
                                t.y = t.y - Math.floor(t.y);
                                break;
                            case Wa:
                                t.y = t.y < 0 ? 0 : 1;
                                break;
                            case Xa:
                                1 === Math.abs(Math.floor(t.y) % 2) ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y)
                            }
                        this.flipY && (t.y = 1 - t.y)
                    }
                }
            }),
            Object.assign(i.prototype, {
                isVector4: !0,
                set: function(t, e, n, r) {
                    return this.x = t,
                    this.y = e,
                    this.z = n,
                    this.w = r,
                    this
                },
                setScalar: function(t) {
                    return this.x = t,
                    this.y = t,
                    this.z = t,
                    this.w = t,
                    this
                },
                setX: function(t) {
                    return this.x = t,
                    this
                },
                setY: function(t) {
                    return this.y = t,
                    this
                },
                setZ: function(t) {
                    return this.z = t,
                    this
                },
                setW: function(t) {
                    return this.w = t,
                    this
                },
                setComponent: function(t, e) {
                    switch (t) {
                    case 0:
                        this.x = e;
                        break;
                    case 1:
                        this.y = e;
                        break;
                    case 2:
                        this.z = e;
                        break;
                    case 3:
                        this.w = e;
                        break;
                    default:
                        throw new Error("index is out of range: " + t)
                    }
                    return this
                },
                getComponent: function(t) {
                    switch (t) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    case 3:
                        return this.w;
                    default:
                        throw new Error("index is out of range: " + t)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x,this.y,this.z,this.w)
                },
                copy: function(t) {
                    return this.x = t.x,
                    this.y = t.y,
                    this.z = t.z,
                    this.w = void 0 !== t.w ? t.w : 1,
                    this
                },
                add: function(t, e) {
                    return void 0 !== e ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
                    this.addVectors(t, e)) : (this.x += t.x,
                    this.y += t.y,
                    this.z += t.z,
                    this.w += t.w,
                    this)
                },
                addScalar: function(t) {
                    return this.x += t,
                    this.y += t,
                    this.z += t,
                    this.w += t,
                    this
                },
                addVectors: function(t, e) {
                    return this.x = t.x + e.x,
                    this.y = t.y + e.y,
                    this.z = t.z + e.z,
                    this.w = t.w + e.w,
                    this
                },
                addScaledVector: function(t, e) {
                    return this.x += t.x * e,
                    this.y += t.y * e,
                    this.z += t.z * e,
                    this.w += t.w * e,
                    this
                },
                sub: function(t, e) {
                    return void 0 !== e ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
                    this.subVectors(t, e)) : (this.x -= t.x,
                    this.y -= t.y,
                    this.z -= t.z,
                    this.w -= t.w,
                    this)
                },
                subScalar: function(t) {
                    return this.x -= t,
                    this.y -= t,
                    this.z -= t,
                    this.w -= t,
                    this
                },
                subVectors: function(t, e) {
                    return this.x = t.x - e.x,
                    this.y = t.y - e.y,
                    this.z = t.z - e.z,
                    this.w = t.w - e.w,
                    this
                },
                multiplyScalar: function(t) {
                    return this.x *= t,
                    this.y *= t,
                    this.z *= t,
                    this.w *= t,
                    this
                },
                applyMatrix4: function(t) {
                    var e = this.x
                      , n = this.y
                      , r = this.z
                      , i = this.w
                      , a = t.elements;
                    return this.x = a[0] * e + a[4] * n + a[8] * r + a[12] * i,
                    this.y = a[1] * e + a[5] * n + a[9] * r + a[13] * i,
                    this.z = a[2] * e + a[6] * n + a[10] * r + a[14] * i,
                    this.w = a[3] * e + a[7] * n + a[11] * r + a[15] * i,
                    this
                },
                divideScalar: function(t) {
                    return this.multiplyScalar(1 / t)
                },
                setAxisAngleFromQuaternion: function(t) {
                    this.w = 2 * Math.acos(t.w);
                    var e = Math.sqrt(1 - t.w * t.w);
                    return e < 1e-4 ? (this.x = 1,
                    this.y = 0,
                    this.z = 0) : (this.x = t.x / e,
                    this.y = t.y / e,
                    this.z = t.z / e),
                    this
                },
                setAxisAngleFromRotationMatrix: function(t) {
                    var e, n, r, i, a = t.elements, o = a[0], s = a[4], l = a[8], c = a[1], u = a[5], h = a[9], d = a[2], p = a[6], f = a[10];
                    if (Math.abs(s - c) < .01 && Math.abs(l - d) < .01 && Math.abs(h - p) < .01) {
                        if (Math.abs(s + c) < .1 && Math.abs(l + d) < .1 && Math.abs(h + p) < .1 && Math.abs(o + u + f - 3) < .1)
                            return this.set(1, 0, 0, 0),
                            this;
                        e = Math.PI;
                        var m = (o + 1) / 2
                          , v = (u + 1) / 2
                          , g = (f + 1) / 2
                          , y = (s + c) / 4
                          , x = (l + d) / 4
                          , b = (h + p) / 4;
                        return m > v && m > g ? m < .01 ? (n = 0,
                        r = .707106781,
                        i = .707106781) : (r = y / (n = Math.sqrt(m)),
                        i = x / n) : v > g ? v < .01 ? (n = .707106781,
                        r = 0,
                        i = .707106781) : (n = y / (r = Math.sqrt(v)),
                        i = b / r) : g < .01 ? (n = .707106781,
                        r = .707106781,
                        i = 0) : (n = x / (i = Math.sqrt(g)),
                        r = b / i),
                        this.set(n, r, i, e),
                        this
                    }
                    var _ = Math.sqrt((p - h) * (p - h) + (l - d) * (l - d) + (c - s) * (c - s));
                    return Math.abs(_) < .001 && (_ = 1),
                    this.x = (p - h) / _,
                    this.y = (l - d) / _,
                    this.z = (c - s) / _,
                    this.w = Math.acos((o + u + f - 1) / 2),
                    this
                },
                min: function(t) {
                    return this.x = Math.min(this.x, t.x),
                    this.y = Math.min(this.y, t.y),
                    this.z = Math.min(this.z, t.z),
                    this.w = Math.min(this.w, t.w),
                    this
                },
                max: function(t) {
                    return this.x = Math.max(this.x, t.x),
                    this.y = Math.max(this.y, t.y),
                    this.z = Math.max(this.z, t.z),
                    this.w = Math.max(this.w, t.w),
                    this
                },
                clamp: function(t, e) {
                    return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                    this.y = Math.max(t.y, Math.min(e.y, this.y)),
                    this.z = Math.max(t.z, Math.min(e.z, this.z)),
                    this.w = Math.max(t.w, Math.min(e.w, this.w)),
                    this
                },
                clampScalar: function() {
                    var t, e;
                    return function(n, r) {
                        return void 0 === t && (t = new i,
                        e = new i),
                        t.set(n, n, n, n),
                        e.set(r, r, r, r),
                        this.clamp(t, e)
                    }
                }(),
                clampLength: function(t, e) {
                    var n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
                },
                floor: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this.w = Math.floor(this.w),
                    this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this.w = Math.ceil(this.w),
                    this
                },
                round: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this.w = Math.round(this.w),
                    this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
                    this
                },
                negate: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this.w = -this.w,
                    this
                },
                dot: function(t) {
                    return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
                },
                lengthManhattan: function() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
                },
                normalize: function() {
                    return this.divideScalar(this.length() || 1)
                },
                setLength: function(t) {
                    return this.normalize().multiplyScalar(t)
                },
                lerp: function(t, e) {
                    return this.x += (t.x - this.x) * e,
                    this.y += (t.y - this.y) * e,
                    this.z += (t.z - this.z) * e,
                    this.w += (t.w - this.w) * e,
                    this
                },
                lerpVectors: function(t, e, n) {
                    return this.subVectors(e, t).multiplyScalar(n).add(t)
                },
                equals: function(t) {
                    return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0),
                    this.x = t[e],
                    this.y = t[e + 1],
                    this.z = t[e + 2],
                    this.w = t[e + 3],
                    this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                    t[e] = this.x,
                    t[e + 1] = this.y,
                    t[e + 2] = this.z,
                    t[e + 3] = this.w,
                    t
                },
                fromBufferAttribute: function(t, e, n) {
                    return void 0 !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),
                    this.x = t.getX(e),
                    this.y = t.getY(e),
                    this.z = t.getZ(e),
                    this.w = t.getW(e),
                    this
                }
            }),
            Object.assign(a.prototype, e.prototype, {
                isWebGLRenderTarget: !0,
                setSize: function(t, e) {
                    this.width === t && this.height === e || (this.width = t,
                    this.height = e,
                    this.dispose()),
                    this.viewport.set(0, 0, t, e),
                    this.scissor.set(0, 0, t, e)
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.width = t.width,
                    this.height = t.height,
                    this.viewport.copy(t.viewport),
                    this.texture = t.texture.clone(),
                    this.depthBuffer = t.depthBuffer,
                    this.stencilBuffer = t.stencilBuffer,
                    this.depthTexture = t.depthTexture,
                    this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }),
            o.prototype = Object.create(a.prototype),
            o.prototype.constructor = o,
            o.prototype.isWebGLRenderTargetCube = !0,
            Object.assign(s, {
                slerp: function(t, e, n, r) {
                    return n.copy(t).slerp(e, r)
                },
                slerpFlat: function(t, e, n, r, i, a, o) {
                    var s = n[r + 0]
                      , l = n[r + 1]
                      , c = n[r + 2]
                      , u = n[r + 3]
                      , h = i[a + 0]
                      , d = i[a + 1]
                      , p = i[a + 2]
                      , f = i[a + 3];
                    if (u !== f || s !== h || l !== d || c !== p) {
                        var m = 1 - o
                          , v = s * h + l * d + c * p + u * f
                          , g = v >= 0 ? 1 : -1
                          , y = 1 - v * v;
                        if (y > Number.EPSILON) {
                            var x = Math.sqrt(y)
                              , b = Math.atan2(x, v * g);
                            m = Math.sin(m * b) / x,
                            o = Math.sin(o * b) / x
                        }
                        var _ = o * g;
                        if (s = s * m + h * _,
                        l = l * m + d * _,
                        c = c * m + p * _,
                        u = u * m + f * _,
                        m === 1 - o) {
                            var w = 1 / Math.sqrt(s * s + l * l + c * c + u * u);
                            s *= w,
                            l *= w,
                            c *= w,
                            u *= w
                        }
                    }
                    t[e] = s,
                    t[e + 1] = l,
                    t[e + 2] = c,
                    t[e + 3] = u
                }
            }),
            Object.defineProperties(s.prototype, {
                x: {
                    get: function() {
                        return this._x
                    },
                    set: function(t) {
                        this._x = t,
                        this.onChangeCallback()
                    }
                },
                y: {
                    get: function() {
                        return this._y
                    },
                    set: function(t) {
                        this._y = t,
                        this.onChangeCallback()
                    }
                },
                z: {
                    get: function() {
                        return this._z
                    },
                    set: function(t) {
                        this._z = t,
                        this.onChangeCallback()
                    }
                },
                w: {
                    get: function() {
                        return this._w
                    },
                    set: function(t) {
                        this._w = t,
                        this.onChangeCallback()
                    }
                }
            }),
            Object.assign(s.prototype, {
                set: function(t, e, n, r) {
                    return this._x = t,
                    this._y = e,
                    this._z = n,
                    this._w = r,
                    this.onChangeCallback(),
                    this
                },
                clone: function() {
                    return new this.constructor(this._x,this._y,this._z,this._w)
                },
                copy: function(t) {
                    return this._x = t.x,
                    this._y = t.y,
                    this._z = t.z,
                    this._w = t.w,
                    this.onChangeCallback(),
                    this
                },
                setFromEuler: function(t, e) {
                    if (!t || !t.isEuler)
                        throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
                    var n = t._x
                      , r = t._y
                      , i = t._z
                      , a = t.order
                      , o = Math.cos
                      , s = Math.sin
                      , l = o(n / 2)
                      , c = o(r / 2)
                      , u = o(i / 2)
                      , h = s(n / 2)
                      , d = s(r / 2)
                      , p = s(i / 2);
                    return "XYZ" === a ? (this._x = h * c * u + l * d * p,
                    this._y = l * d * u - h * c * p,
                    this._z = l * c * p + h * d * u,
                    this._w = l * c * u - h * d * p) : "YXZ" === a ? (this._x = h * c * u + l * d * p,
                    this._y = l * d * u - h * c * p,
                    this._z = l * c * p - h * d * u,
                    this._w = l * c * u + h * d * p) : "ZXY" === a ? (this._x = h * c * u - l * d * p,
                    this._y = l * d * u + h * c * p,
                    this._z = l * c * p + h * d * u,
                    this._w = l * c * u - h * d * p) : "ZYX" === a ? (this._x = h * c * u - l * d * p,
                    this._y = l * d * u + h * c * p,
                    this._z = l * c * p - h * d * u,
                    this._w = l * c * u + h * d * p) : "YZX" === a ? (this._x = h * c * u + l * d * p,
                    this._y = l * d * u + h * c * p,
                    this._z = l * c * p - h * d * u,
                    this._w = l * c * u - h * d * p) : "XZY" === a && (this._x = h * c * u - l * d * p,
                    this._y = l * d * u - h * c * p,
                    this._z = l * c * p + h * d * u,
                    this._w = l * c * u + h * d * p),
                    !1 !== e && this.onChangeCallback(),
                    this
                },
                setFromAxisAngle: function(t, e) {
                    var n = e / 2
                      , r = Math.sin(n);
                    return this._x = t.x * r,
                    this._y = t.y * r,
                    this._z = t.z * r,
                    this._w = Math.cos(n),
                    this.onChangeCallback(),
                    this
                },
                setFromRotationMatrix: function(t) {
                    var e, n = t.elements, r = n[0], i = n[4], a = n[8], o = n[1], s = n[5], l = n[9], c = n[2], u = n[6], h = n[10], d = r + s + h;
                    return d > 0 ? (e = .5 / Math.sqrt(d + 1),
                    this._w = .25 / e,
                    this._x = (u - l) * e,
                    this._y = (a - c) * e,
                    this._z = (o - i) * e) : r > s && r > h ? (e = 2 * Math.sqrt(1 + r - s - h),
                    this._w = (u - l) / e,
                    this._x = .25 * e,
                    this._y = (i + o) / e,
                    this._z = (a + c) / e) : s > h ? (e = 2 * Math.sqrt(1 + s - r - h),
                    this._w = (a - c) / e,
                    this._x = (i + o) / e,
                    this._y = .25 * e,
                    this._z = (l + u) / e) : (e = 2 * Math.sqrt(1 + h - r - s),
                    this._w = (o - i) / e,
                    this._x = (a + c) / e,
                    this._y = (l + u) / e,
                    this._z = .25 * e),
                    this.onChangeCallback(),
                    this
                },
                setFromUnitVectors: function() {
                    var t, e = new l;
                    return function(n, r) {
                        return void 0 === e && (e = new l),
                        (t = n.dot(r) + 1) < 1e-6 ? (t = 0,
                        Math.abs(n.x) > Math.abs(n.z) ? e.set(-n.y, n.x, 0) : e.set(0, -n.z, n.y)) : e.crossVectors(n, r),
                        this._x = e.x,
                        this._y = e.y,
                        this._z = e.z,
                        this._w = t,
                        this.normalize()
                    }
                }(),
                inverse: function() {
                    return this.conjugate().normalize()
                },
                conjugate: function() {
                    return this._x *= -1,
                    this._y *= -1,
                    this._z *= -1,
                    this.onChangeCallback(),
                    this
                },
                dot: function(t) {
                    return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
                },
                lengthSq: function() {
                    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
                },
                length: function() {
                    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
                },
                normalize: function() {
                    var t = this.length();
                    return 0 === t ? (this._x = 0,
                    this._y = 0,
                    this._z = 0,
                    this._w = 1) : (t = 1 / t,
                    this._x = this._x * t,
                    this._y = this._y * t,
                    this._z = this._z * t,
                    this._w = this._w * t),
                    this.onChangeCallback(),
                    this
                },
                multiply: function(t, e) {
                    return void 0 !== e ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
                    this.multiplyQuaternions(t, e)) : this.multiplyQuaternions(this, t)
                },
                premultiply: function(t) {
                    return this.multiplyQuaternions(t, this)
                },
                multiplyQuaternions: function(t, e) {
                    var n = t._x
                      , r = t._y
                      , i = t._z
                      , a = t._w
                      , o = e._x
                      , s = e._y
                      , l = e._z
                      , c = e._w;
                    return this._x = n * c + a * o + r * l - i * s,
                    this._y = r * c + a * s + i * o - n * l,
                    this._z = i * c + a * l + n * s - r * o,
                    this._w = a * c - n * o - r * s - i * l,
                    this.onChangeCallback(),
                    this
                },
                slerp: function(t, e) {
                    if (0 === e)
                        return this;
                    if (1 === e)
                        return this.copy(t);
                    var n = this._x
                      , r = this._y
                      , i = this._z
                      , a = this._w
                      , o = a * t._w + n * t._x + r * t._y + i * t._z;
                    if (o < 0 ? (this._w = -t._w,
                    this._x = -t._x,
                    this._y = -t._y,
                    this._z = -t._z,
                    o = -o) : this.copy(t),
                    o >= 1)
                        return this._w = a,
                        this._x = n,
                        this._y = r,
                        this._z = i,
                        this;
                    var s = Math.sqrt(1 - o * o);
                    if (Math.abs(s) < .001)
                        return this._w = .5 * (a + this._w),
                        this._x = .5 * (n + this._x),
                        this._y = .5 * (r + this._y),
                        this._z = .5 * (i + this._z),
                        this;
                    var l = Math.atan2(s, o)
                      , c = Math.sin((1 - e) * l) / s
                      , u = Math.sin(e * l) / s;
                    return this._w = a * c + this._w * u,
                    this._x = n * c + this._x * u,
                    this._y = r * c + this._y * u,
                    this._z = i * c + this._z * u,
                    this.onChangeCallback(),
                    this
                },
                equals: function(t) {
                    return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0),
                    this._x = t[e],
                    this._y = t[e + 1],
                    this._z = t[e + 2],
                    this._w = t[e + 3],
                    this.onChangeCallback(),
                    this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                    t[e] = this._x,
                    t[e + 1] = this._y,
                    t[e + 2] = this._z,
                    t[e + 3] = this._w,
                    t
                },
                onChange: function(t) {
                    return this.onChangeCallback = t,
                    this
                },
                onChangeCallback: function() {}
            }),
            Object.assign(l.prototype, {
                isVector3: !0,
                set: function(t, e, n) {
                    return this.x = t,
                    this.y = e,
                    this.z = n,
                    this
                },
                setScalar: function(t) {
                    return this.x = t,
                    this.y = t,
                    this.z = t,
                    this
                },
                setX: function(t) {
                    return this.x = t,
                    this
                },
                setY: function(t) {
                    return this.y = t,
                    this
                },
                setZ: function(t) {
                    return this.z = t,
                    this
                },
                setComponent: function(t, e) {
                    switch (t) {
                    case 0:
                        this.x = e;
                        break;
                    case 1:
                        this.y = e;
                        break;
                    case 2:
                        this.z = e;
                        break;
                    default:
                        throw new Error("index is out of range: " + t)
                    }
                    return this
                },
                getComponent: function(t) {
                    switch (t) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    default:
                        throw new Error("index is out of range: " + t)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x,this.y,this.z)
                },
                copy: function(t) {
                    return this.x = t.x,
                    this.y = t.y,
                    this.z = t.z,
                    this
                },
                add: function(t, e) {
                    return void 0 !== e ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
                    this.addVectors(t, e)) : (this.x += t.x,
                    this.y += t.y,
                    this.z += t.z,
                    this)
                },
                addScalar: function(t) {
                    return this.x += t,
                    this.y += t,
                    this.z += t,
                    this
                },
                addVectors: function(t, e) {
                    return this.x = t.x + e.x,
                    this.y = t.y + e.y,
                    this.z = t.z + e.z,
                    this
                },
                addScaledVector: function(t, e) {
                    return this.x += t.x * e,
                    this.y += t.y * e,
                    this.z += t.z * e,
                    this
                },
                sub: function(t, e) {
                    return void 0 !== e ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
                    this.subVectors(t, e)) : (this.x -= t.x,
                    this.y -= t.y,
                    this.z -= t.z,
                    this)
                },
                subScalar: function(t) {
                    return this.x -= t,
                    this.y -= t,
                    this.z -= t,
                    this
                },
                subVectors: function(t, e) {
                    return this.x = t.x - e.x,
                    this.y = t.y - e.y,
                    this.z = t.z - e.z,
                    this
                },
                multiply: function(t, e) {
                    return void 0 !== e ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),
                    this.multiplyVectors(t, e)) : (this.x *= t.x,
                    this.y *= t.y,
                    this.z *= t.z,
                    this)
                },
                multiplyScalar: function(t) {
                    return this.x *= t,
                    this.y *= t,
                    this.z *= t,
                    this
                },
                multiplyVectors: function(t, e) {
                    return this.x = t.x * e.x,
                    this.y = t.y * e.y,
                    this.z = t.z * e.z,
                    this
                },
                applyEuler: function() {
                    var t = new s;
                    return function(e) {
                        return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),
                        this.applyQuaternion(t.setFromEuler(e))
                    }
                }(),
                applyAxisAngle: function() {
                    var t = new s;
                    return function(e, n) {
                        return this.applyQuaternion(t.setFromAxisAngle(e, n))
                    }
                }(),
                applyMatrix3: function(t) {
                    var e = this.x
                      , n = this.y
                      , r = this.z
                      , i = t.elements;
                    return this.x = i[0] * e + i[3] * n + i[6] * r,
                    this.y = i[1] * e + i[4] * n + i[7] * r,
                    this.z = i[2] * e + i[5] * n + i[8] * r,
                    this
                },
                applyMatrix4: function(t) {
                    var e = this.x
                      , n = this.y
                      , r = this.z
                      , i = t.elements
                      , a = 1 / (i[3] * e + i[7] * n + i[11] * r + i[15]);
                    return this.x = (i[0] * e + i[4] * n + i[8] * r + i[12]) * a,
                    this.y = (i[1] * e + i[5] * n + i[9] * r + i[13]) * a,
                    this.z = (i[2] * e + i[6] * n + i[10] * r + i[14]) * a,
                    this
                },
                applyQuaternion: function(t) {
                    var e = this.x
                      , n = this.y
                      , r = this.z
                      , i = t.x
                      , a = t.y
                      , o = t.z
                      , s = t.w
                      , l = s * e + a * r - o * n
                      , c = s * n + o * e - i * r
                      , u = s * r + i * n - a * e
                      , h = -i * e - a * n - o * r;
                    return this.x = l * s + h * -i + c * -o - u * -a,
                    this.y = c * s + h * -a + u * -i - l * -o,
                    this.z = u * s + h * -o + l * -a - c * -i,
                    this
                },
                project: function() {
                    var t = new c;
                    return function(e) {
                        return t.multiplyMatrices(e.projectionMatrix, t.getInverse(e.matrixWorld)),
                        this.applyMatrix4(t)
                    }
                }(),
                unproject: function() {
                    var t = new c;
                    return function(e) {
                        return t.multiplyMatrices(e.matrixWorld, t.getInverse(e.projectionMatrix)),
                        this.applyMatrix4(t)
                    }
                }(),
                transformDirection: function(t) {
                    var e = this.x
                      , n = this.y
                      , r = this.z
                      , i = t.elements;
                    return this.x = i[0] * e + i[4] * n + i[8] * r,
                    this.y = i[1] * e + i[5] * n + i[9] * r,
                    this.z = i[2] * e + i[6] * n + i[10] * r,
                    this.normalize()
                },
                divide: function(t) {
                    return this.x /= t.x,
                    this.y /= t.y,
                    this.z /= t.z,
                    this
                },
                divideScalar: function(t) {
                    return this.multiplyScalar(1 / t)
                },
                min: function(t) {
                    return this.x = Math.min(this.x, t.x),
                    this.y = Math.min(this.y, t.y),
                    this.z = Math.min(this.z, t.z),
                    this
                },
                max: function(t) {
                    return this.x = Math.max(this.x, t.x),
                    this.y = Math.max(this.y, t.y),
                    this.z = Math.max(this.z, t.z),
                    this
                },
                clamp: function(t, e) {
                    return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                    this.y = Math.max(t.y, Math.min(e.y, this.y)),
                    this.z = Math.max(t.z, Math.min(e.z, this.z)),
                    this
                },
                clampScalar: function() {
                    var t = new l
                      , e = new l;
                    return function(n, r) {
                        return t.set(n, n, n),
                        e.set(r, r, r),
                        this.clamp(t, e)
                    }
                }(),
                clampLength: function(t, e) {
                    var n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
                },
                floor: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this
                },
                round: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                    this
                },
                negate: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this
                },
                dot: function(t) {
                    return this.x * t.x + this.y * t.y + this.z * t.z
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y + this.z * this.z
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                },
                lengthManhattan: function() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
                },
                normalize: function() {
                    return this.divideScalar(this.length() || 1)
                },
                setLength: function(t) {
                    return this.normalize().multiplyScalar(t)
                },
                lerp: function(t, e) {
                    return this.x += (t.x - this.x) * e,
                    this.y += (t.y - this.y) * e,
                    this.z += (t.z - this.z) * e,
                    this
                },
                lerpVectors: function(t, e, n) {
                    return this.subVectors(e, t).multiplyScalar(n).add(t)
                },
                cross: function(t, e) {
                    if (void 0 !== e)
                        return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
                        this.crossVectors(t, e);
                    var n = this.x
                      , r = this.y
                      , i = this.z;
                    return this.x = r * t.z - i * t.y,
                    this.y = i * t.x - n * t.z,
                    this.z = n * t.y - r * t.x,
                    this
                },
                crossVectors: function(t, e) {
                    var n = t.x
                      , r = t.y
                      , i = t.z
                      , a = e.x
                      , o = e.y
                      , s = e.z;
                    return this.x = r * s - i * o,
                    this.y = i * a - n * s,
                    this.z = n * o - r * a,
                    this
                },
                projectOnVector: function(t) {
                    var e = t.dot(this) / t.lengthSq();
                    return this.copy(t).multiplyScalar(e)
                },
                projectOnPlane: function() {
                    var t = new l;
                    return function(e) {
                        return t.copy(this).projectOnVector(e),
                        this.sub(t)
                    }
                }(),
                reflect: function() {
                    var t = new l;
                    return function(e) {
                        return this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)))
                    }
                }(),
                angleTo: function(t) {
                    var e = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
                    return Math.acos(Go.clamp(e, -1, 1))
                },
                distanceTo: function(t) {
                    return Math.sqrt(this.distanceToSquared(t))
                },
                distanceToSquared: function(t) {
                    var e = this.x - t.x
                      , n = this.y - t.y
                      , r = this.z - t.z;
                    return e * e + n * n + r * r
                },
                distanceToManhattan: function(t) {
                    return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z)
                },
                setFromSpherical: function(t) {
                    var e = Math.sin(t.phi) * t.radius;
                    return this.x = e * Math.sin(t.theta),
                    this.y = Math.cos(t.phi) * t.radius,
                    this.z = e * Math.cos(t.theta),
                    this
                },
                setFromCylindrical: function(t) {
                    return this.x = t.radius * Math.sin(t.theta),
                    this.y = t.y,
                    this.z = t.radius * Math.cos(t.theta),
                    this
                },
                setFromMatrixPosition: function(t) {
                    var e = t.elements;
                    return this.x = e[12],
                    this.y = e[13],
                    this.z = e[14],
                    this
                },
                setFromMatrixScale: function(t) {
                    var e = this.setFromMatrixColumn(t, 0).length()
                      , n = this.setFromMatrixColumn(t, 1).length()
                      , r = this.setFromMatrixColumn(t, 2).length();
                    return this.x = e,
                    this.y = n,
                    this.z = r,
                    this
                },
                setFromMatrixColumn: function(t, e) {
                    return this.fromArray(t.elements, 4 * e)
                },
                equals: function(t) {
                    return t.x === this.x && t.y === this.y && t.z === this.z
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0),
                    this.x = t[e],
                    this.y = t[e + 1],
                    this.z = t[e + 2],
                    this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                    t[e] = this.x,
                    t[e + 1] = this.y,
                    t[e + 2] = this.z,
                    t
                },
                fromBufferAttribute: function(t, e, n) {
                    return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),
                    this.x = t.getX(e),
                    this.y = t.getY(e),
                    this.z = t.getZ(e),
                    this
                }
            }),
            Object.assign(c.prototype, {
                isMatrix4: !0,
                set: function(t, e, n, r, i, a, o, s, l, c, u, h, d, p, f, m) {
                    var v = this.elements;
                    return v[0] = t,
                    v[4] = e,
                    v[8] = n,
                    v[12] = r,
                    v[1] = i,
                    v[5] = a,
                    v[9] = o,
                    v[13] = s,
                    v[2] = l,
                    v[6] = c,
                    v[10] = u,
                    v[14] = h,
                    v[3] = d,
                    v[7] = p,
                    v[11] = f,
                    v[15] = m,
                    this
                },
                identity: function() {
                    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                },
                clone: function() {
                    return (new c).fromArray(this.elements)
                },
                copy: function(t) {
                    var e = this.elements
                      , n = t.elements;
                    return e[0] = n[0],
                    e[1] = n[1],
                    e[2] = n[2],
                    e[3] = n[3],
                    e[4] = n[4],
                    e[5] = n[5],
                    e[6] = n[6],
                    e[7] = n[7],
                    e[8] = n[8],
                    e[9] = n[9],
                    e[10] = n[10],
                    e[11] = n[11],
                    e[12] = n[12],
                    e[13] = n[13],
                    e[14] = n[14],
                    e[15] = n[15],
                    this
                },
                copyPosition: function(t) {
                    var e = this.elements
                      , n = t.elements;
                    return e[12] = n[12],
                    e[13] = n[13],
                    e[14] = n[14],
                    this
                },
                extractBasis: function(t, e, n) {
                    return t.setFromMatrixColumn(this, 0),
                    e.setFromMatrixColumn(this, 1),
                    n.setFromMatrixColumn(this, 2),
                    this
                },
                makeBasis: function(t, e, n) {
                    return this.set(t.x, e.x, n.x, 0, t.y, e.y, n.y, 0, t.z, e.z, n.z, 0, 0, 0, 0, 1),
                    this
                },
                extractRotation: function() {
                    var t = new l;
                    return function(e) {
                        var n = this.elements
                          , r = e.elements
                          , i = 1 / t.setFromMatrixColumn(e, 0).length()
                          , a = 1 / t.setFromMatrixColumn(e, 1).length()
                          , o = 1 / t.setFromMatrixColumn(e, 2).length();
                        return n[0] = r[0] * i,
                        n[1] = r[1] * i,
                        n[2] = r[2] * i,
                        n[4] = r[4] * a,
                        n[5] = r[5] * a,
                        n[6] = r[6] * a,
                        n[8] = r[8] * o,
                        n[9] = r[9] * o,
                        n[10] = r[10] * o,
                        this
                    }
                }(),
                makeRotationFromEuler: function(t) {
                    t && t.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                    var e = this.elements
                      , n = t.x
                      , r = t.y
                      , i = t.z
                      , a = Math.cos(n)
                      , o = Math.sin(n)
                      , s = Math.cos(r)
                      , l = Math.sin(r)
                      , c = Math.cos(i)
                      , u = Math.sin(i);
                    if ("XYZ" === t.order) {
                        var h = a * c
                          , d = a * u
                          , p = o * c
                          , f = o * u;
                        e[0] = s * c,
                        e[4] = -s * u,
                        e[8] = l,
                        e[1] = d + p * l,
                        e[5] = h - f * l,
                        e[9] = -o * s,
                        e[2] = f - h * l,
                        e[6] = p + d * l,
                        e[10] = a * s
                    } else if ("YXZ" === t.order) {
                        var m = s * c
                          , v = s * u
                          , g = l * c
                          , y = l * u;
                        e[0] = m + y * o,
                        e[4] = g * o - v,
                        e[8] = a * l,
                        e[1] = a * u,
                        e[5] = a * c,
                        e[9] = -o,
                        e[2] = v * o - g,
                        e[6] = y + m * o,
                        e[10] = a * s
                    } else if ("ZXY" === t.order) {
                        var m = s * c
                          , v = s * u
                          , g = l * c
                          , y = l * u;
                        e[0] = m - y * o,
                        e[4] = -a * u,
                        e[8] = g + v * o,
                        e[1] = v + g * o,
                        e[5] = a * c,
                        e[9] = y - m * o,
                        e[2] = -a * l,
                        e[6] = o,
                        e[10] = a * s
                    } else if ("ZYX" === t.order) {
                        var h = a * c
                          , d = a * u
                          , p = o * c
                          , f = o * u;
                        e[0] = s * c,
                        e[4] = p * l - d,
                        e[8] = h * l + f,
                        e[1] = s * u,
                        e[5] = f * l + h,
                        e[9] = d * l - p,
                        e[2] = -l,
                        e[6] = o * s,
                        e[10] = a * s
                    } else if ("YZX" === t.order) {
                        var x = a * s
                          , b = a * l
                          , _ = o * s
                          , w = o * l;
                        e[0] = s * c,
                        e[4] = w - x * u,
                        e[8] = _ * u + b,
                        e[1] = u,
                        e[5] = a * c,
                        e[9] = -o * c,
                        e[2] = -l * c,
                        e[6] = b * u + _,
                        e[10] = x - w * u
                    } else if ("XZY" === t.order) {
                        var x = a * s
                          , b = a * l
                          , _ = o * s
                          , w = o * l;
                        e[0] = s * c,
                        e[4] = -u,
                        e[8] = l * c,
                        e[1] = x * u + w,
                        e[5] = a * c,
                        e[9] = b * u - _,
                        e[2] = _ * u - b,
                        e[6] = o * c,
                        e[10] = w * u + x
                    }
                    return e[3] = 0,
                    e[7] = 0,
                    e[11] = 0,
                    e[12] = 0,
                    e[13] = 0,
                    e[14] = 0,
                    e[15] = 1,
                    this
                },
                makeRotationFromQuaternion: function(t) {
                    var e = this.elements
                      , n = t._x
                      , r = t._y
                      , i = t._z
                      , a = t._w
                      , o = n + n
                      , s = r + r
                      , l = i + i
                      , c = n * o
                      , u = n * s
                      , h = n * l
                      , d = r * s
                      , p = r * l
                      , f = i * l
                      , m = a * o
                      , v = a * s
                      , g = a * l;
                    return e[0] = 1 - (d + f),
                    e[4] = u - g,
                    e[8] = h + v,
                    e[1] = u + g,
                    e[5] = 1 - (c + f),
                    e[9] = p - m,
                    e[2] = h - v,
                    e[6] = p + m,
                    e[10] = 1 - (c + d),
                    e[3] = 0,
                    e[7] = 0,
                    e[11] = 0,
                    e[12] = 0,
                    e[13] = 0,
                    e[14] = 0,
                    e[15] = 1,
                    this
                },
                lookAt: function() {
                    var t = new l
                      , e = new l
                      , n = new l;
                    return function(r, i, a) {
                        var o = this.elements;
                        return n.subVectors(r, i),
                        0 === n.lengthSq() && (n.z = 1),
                        n.normalize(),
                        t.crossVectors(a, n),
                        0 === t.lengthSq() && (1 === Math.abs(a.z) ? n.x += 1e-4 : n.z += 1e-4,
                        n.normalize(),
                        t.crossVectors(a, n)),
                        t.normalize(),
                        e.crossVectors(n, t),
                        o[0] = t.x,
                        o[4] = e.x,
                        o[8] = n.x,
                        o[1] = t.y,
                        o[5] = e.y,
                        o[9] = n.y,
                        o[2] = t.z,
                        o[6] = e.z,
                        o[10] = n.z,
                        this
                    }
                }(),
                multiply: function(t, e) {
                    return void 0 !== e ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
                    this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t)
                },
                premultiply: function(t) {
                    return this.multiplyMatrices(t, this)
                },
                multiplyMatrices: function(t, e) {
                    var n = t.elements
                      , r = e.elements
                      , i = this.elements
                      , a = n[0]
                      , o = n[4]
                      , s = n[8]
                      , l = n[12]
                      , c = n[1]
                      , u = n[5]
                      , h = n[9]
                      , d = n[13]
                      , p = n[2]
                      , f = n[6]
                      , m = n[10]
                      , v = n[14]
                      , g = n[3]
                      , y = n[7]
                      , x = n[11]
                      , b = n[15]
                      , _ = r[0]
                      , w = r[4]
                      , M = r[8]
                      , E = r[12]
                      , T = r[1]
                      , S = r[5]
                      , A = r[9]
                      , L = r[13]
                      , R = r[2]
                      , P = r[6]
                      , C = r[10]
                      , I = r[14]
                      , O = r[3]
                      , N = r[7]
                      , D = r[11]
                      , U = r[15];
                    return i[0] = a * _ + o * T + s * R + l * O,
                    i[4] = a * w + o * S + s * P + l * N,
                    i[8] = a * M + o * A + s * C + l * D,
                    i[12] = a * E + o * L + s * I + l * U,
                    i[1] = c * _ + u * T + h * R + d * O,
                    i[5] = c * w + u * S + h * P + d * N,
                    i[9] = c * M + u * A + h * C + d * D,
                    i[13] = c * E + u * L + h * I + d * U,
                    i[2] = p * _ + f * T + m * R + v * O,
                    i[6] = p * w + f * S + m * P + v * N,
                    i[10] = p * M + f * A + m * C + v * D,
                    i[14] = p * E + f * L + m * I + v * U,
                    i[3] = g * _ + y * T + x * R + b * O,
                    i[7] = g * w + y * S + x * P + b * N,
                    i[11] = g * M + y * A + x * C + b * D,
                    i[15] = g * E + y * L + x * I + b * U,
                    this
                },
                multiplyScalar: function(t) {
                    var e = this.elements;
                    return e[0] *= t,
                    e[4] *= t,
                    e[8] *= t,
                    e[12] *= t,
                    e[1] *= t,
                    e[5] *= t,
                    e[9] *= t,
                    e[13] *= t,
                    e[2] *= t,
                    e[6] *= t,
                    e[10] *= t,
                    e[14] *= t,
                    e[3] *= t,
                    e[7] *= t,
                    e[11] *= t,
                    e[15] *= t,
                    this
                },
                applyToBufferAttribute: function() {
                    var t = new l;
                    return function(e) {
                        for (var n = 0, r = e.count; n < r; n++)
                            t.x = e.getX(n),
                            t.y = e.getY(n),
                            t.z = e.getZ(n),
                            t.applyMatrix4(this),
                            e.setXYZ(n, t.x, t.y, t.z);
                        return e
                    }
                }(),
                determinant: function() {
                    var t = this.elements
                      , e = t[0]
                      , n = t[4]
                      , r = t[8]
                      , i = t[12]
                      , a = t[1]
                      , o = t[5]
                      , s = t[9]
                      , l = t[13]
                      , c = t[2]
                      , u = t[6]
                      , h = t[10]
                      , d = t[14];
                    return t[3] * (+i * s * u - r * l * u - i * o * h + n * l * h + r * o * d - n * s * d) + t[7] * (+e * s * d - e * l * h + i * a * h - r * a * d + r * l * c - i * s * c) + t[11] * (+e * l * u - e * o * d - i * a * u + n * a * d + i * o * c - n * l * c) + t[15] * (-r * o * c - e * s * u + e * o * h + r * a * u - n * a * h + n * s * c)
                },
                transpose: function() {
                    var t, e = this.elements;
                    return t = e[1],
                    e[1] = e[4],
                    e[4] = t,
                    t = e[2],
                    e[2] = e[8],
                    e[8] = t,
                    t = e[6],
                    e[6] = e[9],
                    e[9] = t,
                    t = e[3],
                    e[3] = e[12],
                    e[12] = t,
                    t = e[7],
                    e[7] = e[13],
                    e[13] = t,
                    t = e[11],
                    e[11] = e[14],
                    e[14] = t,
                    this
                },
                setPosition: function(t) {
                    var e = this.elements;
                    return e[12] = t.x,
                    e[13] = t.y,
                    e[14] = t.z,
                    this
                },
                getInverse: function(t, e) {
                    var n = this.elements
                      , r = t.elements
                      , i = r[0]
                      , a = r[1]
                      , o = r[2]
                      , s = r[3]
                      , l = r[4]
                      , c = r[5]
                      , u = r[6]
                      , h = r[7]
                      , d = r[8]
                      , p = r[9]
                      , f = r[10]
                      , m = r[11]
                      , v = r[12]
                      , g = r[13]
                      , y = r[14]
                      , x = r[15]
                      , b = p * y * h - g * f * h + g * u * m - c * y * m - p * u * x + c * f * x
                      , _ = v * f * h - d * y * h - v * u * m + l * y * m + d * u * x - l * f * x
                      , w = d * g * h - v * p * h + v * c * m - l * g * m - d * c * x + l * p * x
                      , M = v * p * u - d * g * u - v * c * f + l * g * f + d * c * y - l * p * y
                      , E = i * b + a * _ + o * w + s * M;
                    if (0 === E) {
                        var T = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
                        if (!0 === e)
                            throw new Error(T);
                        return console.warn(T),
                        this.identity()
                    }
                    var S = 1 / E;
                    return n[0] = b * S,
                    n[1] = (g * f * s - p * y * s - g * o * m + a * y * m + p * o * x - a * f * x) * S,
                    n[2] = (c * y * s - g * u * s + g * o * h - a * y * h - c * o * x + a * u * x) * S,
                    n[3] = (p * u * s - c * f * s - p * o * h + a * f * h + c * o * m - a * u * m) * S,
                    n[4] = _ * S,
                    n[5] = (d * y * s - v * f * s + v * o * m - i * y * m - d * o * x + i * f * x) * S,
                    n[6] = (v * u * s - l * y * s - v * o * h + i * y * h + l * o * x - i * u * x) * S,
                    n[7] = (l * f * s - d * u * s + d * o * h - i * f * h - l * o * m + i * u * m) * S,
                    n[8] = w * S,
                    n[9] = (v * p * s - d * g * s - v * a * m + i * g * m + d * a * x - i * p * x) * S,
                    n[10] = (l * g * s - v * c * s + v * a * h - i * g * h - l * a * x + i * c * x) * S,
                    n[11] = (d * c * s - l * p * s - d * a * h + i * p * h + l * a * m - i * c * m) * S,
                    n[12] = M * S,
                    n[13] = (d * g * o - v * p * o + v * a * f - i * g * f - d * a * y + i * p * y) * S,
                    n[14] = (v * c * o - l * g * o - v * a * u + i * g * u + l * a * y - i * c * y) * S,
                    n[15] = (l * p * o - d * c * o + d * a * u - i * p * u - l * a * f + i * c * f) * S,
                    this
                },
                scale: function(t) {
                    var e = this.elements
                      , n = t.x
                      , r = t.y
                      , i = t.z;
                    return e[0] *= n,
                    e[4] *= r,
                    e[8] *= i,
                    e[1] *= n,
                    e[5] *= r,
                    e[9] *= i,
                    e[2] *= n,
                    e[6] *= r,
                    e[10] *= i,
                    e[3] *= n,
                    e[7] *= r,
                    e[11] *= i,
                    this
                },
                getMaxScaleOnAxis: function() {
                    var t = this.elements
                      , e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2]
                      , n = t[4] * t[4] + t[5] * t[5] + t[6] * t[6]
                      , r = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
                    return Math.sqrt(Math.max(e, n, r))
                },
                makeTranslation: function(t, e, n) {
                    return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1),
                    this
                },
                makeRotationX: function(t) {
                    var e = Math.cos(t)
                      , n = Math.sin(t);
                    return this.set(1, 0, 0, 0, 0, e, -n, 0, 0, n, e, 0, 0, 0, 0, 1),
                    this
                },
                makeRotationY: function(t) {
                    var e = Math.cos(t)
                      , n = Math.sin(t);
                    return this.set(e, 0, n, 0, 0, 1, 0, 0, -n, 0, e, 0, 0, 0, 0, 1),
                    this
                },
                makeRotationZ: function(t) {
                    var e = Math.cos(t)
                      , n = Math.sin(t);
                    return this.set(e, -n, 0, 0, n, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                },
                makeRotationAxis: function(t, e) {
                    var n = Math.cos(e)
                      , r = Math.sin(e)
                      , i = 1 - n
                      , a = t.x
                      , o = t.y
                      , s = t.z
                      , l = i * a
                      , c = i * o;
                    return this.set(l * a + n, l * o - r * s, l * s + r * o, 0, l * o + r * s, c * o + n, c * s - r * a, 0, l * s - r * o, c * s + r * a, i * s * s + n, 0, 0, 0, 0, 1),
                    this
                },
                makeScale: function(t, e, n) {
                    return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
                    this
                },
                makeShear: function(t, e, n) {
                    return this.set(1, e, n, 0, t, 1, n, 0, t, e, 1, 0, 0, 0, 0, 1),
                    this
                },
                compose: function(t, e, n) {
                    return this.makeRotationFromQuaternion(e),
                    this.scale(n),
                    this.setPosition(t),
                    this
                },
                decompose: function() {
                    var t = new l
                      , e = new c;
                    return function(n, r, i) {
                        var a = this.elements
                          , o = t.set(a[0], a[1], a[2]).length()
                          , s = t.set(a[4], a[5], a[6]).length()
                          , l = t.set(a[8], a[9], a[10]).length();
                        this.determinant() < 0 && (o = -o),
                        n.x = a[12],
                        n.y = a[13],
                        n.z = a[14],
                        e.copy(this);
                        var c = 1 / o
                          , u = 1 / s
                          , h = 1 / l;
                        return e.elements[0] *= c,
                        e.elements[1] *= c,
                        e.elements[2] *= c,
                        e.elements[4] *= u,
                        e.elements[5] *= u,
                        e.elements[6] *= u,
                        e.elements[8] *= h,
                        e.elements[9] *= h,
                        e.elements[10] *= h,
                        r.setFromRotationMatrix(e),
                        i.x = o,
                        i.y = s,
                        i.z = l,
                        this
                    }
                }(),
                makePerspective: function(t, e, n, r, i, a) {
                    void 0 === a && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
                    var o = this.elements
                      , s = 2 * i / (e - t)
                      , l = 2 * i / (n - r)
                      , c = (e + t) / (e - t)
                      , u = (n + r) / (n - r)
                      , h = -(a + i) / (a - i)
                      , d = -2 * a * i / (a - i);
                    return o[0] = s,
                    o[4] = 0,
                    o[8] = c,
                    o[12] = 0,
                    o[1] = 0,
                    o[5] = l,
                    o[9] = u,
                    o[13] = 0,
                    o[2] = 0,
                    o[6] = 0,
                    o[10] = h,
                    o[14] = d,
                    o[3] = 0,
                    o[7] = 0,
                    o[11] = -1,
                    o[15] = 0,
                    this
                },
                makeOrthographic: function(t, e, n, r, i, a) {
                    var o = this.elements
                      , s = 1 / (e - t)
                      , l = 1 / (n - r)
                      , c = 1 / (a - i)
                      , u = (e + t) * s
                      , h = (n + r) * l
                      , d = (a + i) * c;
                    return o[0] = 2 * s,
                    o[4] = 0,
                    o[8] = 0,
                    o[12] = -u,
                    o[1] = 0,
                    o[5] = 2 * l,
                    o[9] = 0,
                    o[13] = -h,
                    o[2] = 0,
                    o[6] = 0,
                    o[10] = -2 * c,
                    o[14] = -d,
                    o[3] = 0,
                    o[7] = 0,
                    o[11] = 0,
                    o[15] = 1,
                    this
                },
                equals: function(t) {
                    for (var e = this.elements, n = t.elements, r = 0; r < 16; r++)
                        if (e[r] !== n[r])
                            return !1;
                    return !0
                },
                fromArray: function(t, e) {
                    void 0 === e && (e = 0);
                    for (var n = 0; n < 16; n++)
                        this.elements[n] = t[n + e];
                    return this
                },
                toArray: function(t, e) {
                    void 0 === t && (t = []),
                    void 0 === e && (e = 0);
                    var n = this.elements;
                    return t[e] = n[0],
                    t[e + 1] = n[1],
                    t[e + 2] = n[2],
                    t[e + 3] = n[3],
                    t[e + 4] = n[4],
                    t[e + 5] = n[5],
                    t[e + 6] = n[6],
                    t[e + 7] = n[7],
                    t[e + 8] = n[8],
                    t[e + 9] = n[9],
                    t[e + 10] = n[10],
                    t[e + 11] = n[11],
                    t[e + 12] = n[12],
                    t[e + 13] = n[13],
                    t[e + 14] = n[14],
                    t[e + 15] = n[15],
                    t
                }
            }),
            u.prototype = Object.create(r.prototype),
            u.prototype.constructor = u,
            u.prototype.isDataTexture = !0,
            (h.prototype = Object.create(r.prototype)).constructor = h,
            h.prototype.isCubeTexture = !0,
            Object.defineProperty(h.prototype, "images", {
                get: function() {
                    return this.image
                },
                set: function(t) {
                    this.image = t
                }
            });
            var Wo = new r
              , Xo = new h
              , qo = []
              , Yo = []
              , $o = new Float32Array(16)
              , Zo = new Float32Array(9);
            H.prototype.setValue = function(t, e) {
                for (var n = this.seq, r = 0, i = n.length; r !== i; ++r) {
                    var a = n[r];
                    a.setValue(t, e[a.id])
                }
            }
            ;
            var Jo = /([\w\d_]+)(\])?(\[|\.)?/g;
            W.prototype.setValue = function(t, e, n) {
                var r = this.map[e];
                void 0 !== r && r.setValue(t, n, this.renderer)
            }
            ,
            W.prototype.setOptional = function(t, e, n) {
                var r = e[n];
                void 0 !== r && this.setValue(t, n, r)
            }
            ,
            W.upload = function(t, e, n, r) {
                for (var i = 0, a = e.length; i !== a; ++i) {
                    var o = e[i]
                      , s = n[o.id];
                    !1 !== s.needsUpdate && o.setValue(t, s.value, r)
                }
            }
            ,
            W.seqWithValue = function(t, e) {
                for (var n = [], r = 0, i = t.length; r !== i; ++r) {
                    var a = t[r];
                    a.id in e && n.push(a)
                }
                return n
            }
            ;
            var Ko = {
                aliceblue: 15792383,
                antiquewhite: 16444375,
                aqua: 65535,
                aquamarine: 8388564,
                azure: 15794175,
                beige: 16119260,
                bisque: 16770244,
                black: 0,
                blanchedalmond: 16772045,
                blue: 255,
                blueviolet: 9055202,
                brown: 10824234,
                burlywood: 14596231,
                cadetblue: 6266528,
                chartreuse: 8388352,
                chocolate: 13789470,
                coral: 16744272,
                cornflowerblue: 6591981,
                cornsilk: 16775388,
                crimson: 14423100,
                cyan: 65535,
                darkblue: 139,
                darkcyan: 35723,
                darkgoldenrod: 12092939,
                darkgray: 11119017,
                darkgreen: 25600,
                darkgrey: 11119017,
                darkkhaki: 12433259,
                darkmagenta: 9109643,
                darkolivegreen: 5597999,
                darkorange: 16747520,
                darkorchid: 10040012,
                darkred: 9109504,
                darksalmon: 15308410,
                darkseagreen: 9419919,
                darkslateblue: 4734347,
                darkslategray: 3100495,
                darkslategrey: 3100495,
                darkturquoise: 52945,
                darkviolet: 9699539,
                deeppink: 16716947,
                deepskyblue: 49151,
                dimgray: 6908265,
                dimgrey: 6908265,
                dodgerblue: 2003199,
                firebrick: 11674146,
                floralwhite: 16775920,
                forestgreen: 2263842,
                fuchsia: 16711935,
                gainsboro: 14474460,
                ghostwhite: 16316671,
                gold: 16766720,
                goldenrod: 14329120,
                gray: 8421504,
                green: 32768,
                greenyellow: 11403055,
                grey: 8421504,
                honeydew: 15794160,
                hotpink: 16738740,
                indianred: 13458524,
                indigo: 4915330,
                ivory: 16777200,
                khaki: 15787660,
                lavender: 15132410,
                lavenderblush: 16773365,
                lawngreen: 8190976,
                lemonchiffon: 16775885,
                lightblue: 11393254,
                lightcoral: 15761536,
                lightcyan: 14745599,
                lightgoldenrodyellow: 16448210,
                lightgray: 13882323,
                lightgreen: 9498256,
                lightgrey: 13882323,
                lightpink: 16758465,
                lightsalmon: 16752762,
                lightseagreen: 2142890,
                lightskyblue: 8900346,
                lightslategray: 7833753,
                lightslategrey: 7833753,
                lightsteelblue: 11584734,
                lightyellow: 16777184,
                lime: 65280,
                limegreen: 3329330,
                linen: 16445670,
                magenta: 16711935,
                maroon: 8388608,
                mediumaquamarine: 6737322,
                mediumblue: 205,
                mediumorchid: 12211667,
                mediumpurple: 9662683,
                mediumseagreen: 3978097,
                mediumslateblue: 8087790,
                mediumspringgreen: 64154,
                mediumturquoise: 4772300,
                mediumvioletred: 13047173,
                midnightblue: 1644912,
                mintcream: 16121850,
                mistyrose: 16770273,
                moccasin: 16770229,
                navajowhite: 16768685,
                navy: 128,
                oldlace: 16643558,
                olive: 8421376,
                olivedrab: 7048739,
                orange: 16753920,
                orangered: 16729344,
                orchid: 14315734,
                palegoldenrod: 15657130,
                palegreen: 10025880,
                paleturquoise: 11529966,
                palevioletred: 14381203,
                papayawhip: 16773077,
                peachpuff: 16767673,
                peru: 13468991,
                pink: 16761035,
                plum: 14524637,
                powderblue: 11591910,
                purple: 8388736,
                rebeccapurple: 6697881,
                red: 16711680,
                rosybrown: 12357519,
                royalblue: 4286945,
                saddlebrown: 9127187,
                salmon: 16416882,
                sandybrown: 16032864,
                seagreen: 3050327,
                seashell: 16774638,
                sienna: 10506797,
                silver: 12632256,
                skyblue: 8900331,
                slateblue: 6970061,
                slategray: 7372944,
                slategrey: 7372944,
                snow: 16775930,
                springgreen: 65407,
                steelblue: 4620980,
                tan: 13808780,
                teal: 32896,
                thistle: 14204888,
                tomato: 16737095,
                turquoise: 4251856,
                violet: 15631086,
                wheat: 16113331,
                white: 16777215,
                whitesmoke: 16119285,
                yellow: 16776960,
                yellowgreen: 10145074
            };
            Object.assign(X.prototype, {
                isColor: !0,
                r: 1,
                g: 1,
                b: 1,
                set: function(t) {
                    return t && t.isColor ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t),
                    this
                },
                setScalar: function(t) {
                    return this.r = t,
                    this.g = t,
                    this.b = t,
                    this
                },
                setHex: function(t) {
                    return t = Math.floor(t),
                    this.r = (t >> 16 & 255) / 255,
                    this.g = (t >> 8 & 255) / 255,
                    this.b = (255 & t) / 255,
                    this
                },
                setRGB: function(t, e, n) {
                    return this.r = t,
                    this.g = e,
                    this.b = n,
                    this
                },
                setHSL: function() {
                    function t(t, e, n) {
                        return n < 0 && (n += 1),
                        n > 1 && (n -= 1),
                        n < 1 / 6 ? t + 6 * (e - t) * n : n < .5 ? e : n < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - n) : t
                    }
                    return function(e, n, r) {
                        if (e = Go.euclideanModulo(e, 1),
                        n = Go.clamp(n, 0, 1),
                        r = Go.clamp(r, 0, 1),
                        0 === n)
                            this.r = this.g = this.b = r;
                        else {
                            var i = r <= .5 ? r * (1 + n) : r + n - r * n
                              , a = 2 * r - i;
                            this.r = t(a, i, e + 1 / 3),
                            this.g = t(a, i, e),
                            this.b = t(a, i, e - 1 / 3)
                        }
                        return this
                    }
                }(),
                setStyle: function(t) {
                    function e(e) {
                        void 0 !== e && parseFloat(e) < 1 && console.warn("THREE.Color: Alpha component of " + t + " will be ignored.")
                    }
                    var n;
                    if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
                        var r, i = n[1], a = n[2];
                        switch (i) {
                        case "rgb":
                        case "rgba":
                            if (r = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                                return this.r = Math.min(255, parseInt(r[1], 10)) / 255,
                                this.g = Math.min(255, parseInt(r[2], 10)) / 255,
                                this.b = Math.min(255, parseInt(r[3], 10)) / 255,
                                e(r[5]),
                                this;
                            if (r = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                                return this.r = Math.min(100, parseInt(r[1], 10)) / 100,
                                this.g = Math.min(100, parseInt(r[2], 10)) / 100,
                                this.b = Math.min(100, parseInt(r[3], 10)) / 100,
                                e(r[5]),
                                this;
                            break;
                        case "hsl":
                        case "hsla":
                            if (r = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) {
                                var o = parseFloat(r[1]) / 360
                                  , s = parseInt(r[2], 10) / 100
                                  , l = parseInt(r[3], 10) / 100;
                                return e(r[5]),
                                this.setHSL(o, s, l)
                            }
                        }
                    } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
                        var c = (u = n[1]).length;
                        if (3 === c)
                            return this.r = parseInt(u.charAt(0) + u.charAt(0), 16) / 255,
                            this.g = parseInt(u.charAt(1) + u.charAt(1), 16) / 255,
                            this.b = parseInt(u.charAt(2) + u.charAt(2), 16) / 255,
                            this;
                        if (6 === c)
                            return this.r = parseInt(u.charAt(0) + u.charAt(1), 16) / 255,
                            this.g = parseInt(u.charAt(2) + u.charAt(3), 16) / 255,
                            this.b = parseInt(u.charAt(4) + u.charAt(5), 16) / 255,
                            this
                    }
                    if (t && t.length > 0) {
                        var u = Ko[t];
                        void 0 !== u ? this.setHex(u) : console.warn("THREE.Color: Unknown color " + t)
                    }
                    return this
                },
                clone: function() {
                    return new this.constructor(this.r,this.g,this.b)
                },
                copy: function(t) {
                    return this.r = t.r,
                    this.g = t.g,
                    this.b = t.b,
                    this
                },
                copyGammaToLinear: function(t, e) {
                    return void 0 === e && (e = 2),
                    this.r = Math.pow(t.r, e),
                    this.g = Math.pow(t.g, e),
                    this.b = Math.pow(t.b, e),
                    this
                },
                copyLinearToGamma: function(t, e) {
                    void 0 === e && (e = 2);
                    var n = e > 0 ? 1 / e : 1;
                    return this.r = Math.pow(t.r, n),
                    this.g = Math.pow(t.g, n),
                    this.b = Math.pow(t.b, n),
                    this
                },
                convertGammaToLinear: function() {
                    var t = this.r
                      , e = this.g
                      , n = this.b;
                    return this.r = t * t,
                    this.g = e * e,
                    this.b = n * n,
                    this
                },
                convertLinearToGamma: function() {
                    return this.r = Math.sqrt(this.r),
                    this.g = Math.sqrt(this.g),
                    this.b = Math.sqrt(this.b),
                    this
                },
                getHex: function() {
                    return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
                },
                getHexString: function() {
                    return ("000000" + this.getHex().toString(16)).slice(-6)
                },
                getHSL: function(t) {
                    var e, n, r = t || {
                        h: 0,
                        s: 0,
                        l: 0
                    }, i = this.r, a = this.g, o = this.b, s = Math.max(i, a, o), l = Math.min(i, a, o), c = (l + s) / 2;
                    if (l === s)
                        e = 0,
                        n = 0;
                    else {
                        var u = s - l;
                        switch (n = c <= .5 ? u / (s + l) : u / (2 - s - l),
                        s) {
                        case i:
                            e = (a - o) / u + (a < o ? 6 : 0);
                            break;
                        case a:
                            e = (o - i) / u + 2;
                            break;
                        case o:
                            e = (i - a) / u + 4
                        }
                        e /= 6
                    }
                    return r.h = e,
                    r.s = n,
                    r.l = c,
                    r
                },
                getStyle: function() {
                    return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
                },
                offsetHSL: function(t, e, n) {
                    var r = this.getHSL();
                    return r.h += t,
                    r.s += e,
                    r.l += n,
                    this.setHSL(r.h, r.s, r.l),
                    this
                },
                add: function(t) {
                    return this.r += t.r,
                    this.g += t.g,
                    this.b += t.b,
                    this
                },
                addColors: function(t, e) {
                    return this.r = t.r + e.r,
                    this.g = t.g + e.g,
                    this.b = t.b + e.b,
                    this
                },
                addScalar: function(t) {
                    return this.r += t,
                    this.g += t,
                    this.b += t,
                    this
                },
                sub: function(t) {
                    return this.r = Math.max(0, this.r - t.r),
                    this.g = Math.max(0, this.g - t.g),
                    this.b = Math.max(0, this.b - t.b),
                    this
                },
                multiply: function(t) {
                    return this.r *= t.r,
                    this.g *= t.g,
                    this.b *= t.b,
                    this
                },
                multiplyScalar: function(t) {
                    return this.r *= t,
                    this.g *= t,
                    this.b *= t,
                    this
                },
                lerp: function(t, e) {
                    return this.r += (t.r - this.r) * e,
                    this.g += (t.g - this.g) * e,
                    this.b += (t.b - this.b) * e,
                    this
                },
                equals: function(t) {
                    return t.r === this.r && t.g === this.g && t.b === this.b
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0),
                    this.r = t[e],
                    this.g = t[e + 1],
                    this.b = t[e + 2],
                    this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                    t[e] = this.r,
                    t[e + 1] = this.g,
                    t[e + 2] = this.b,
                    t
                },
                toJSON: function() {
                    return this.getHex()
                }
            });
            var Qo = {
                common: {
                    diffuse: {
                        value: new X(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    offsetRepeat: {
                        value: new i(0,0,1,1)
                    },
                    alphaMap: {
                        value: null
                    }
                },
                specularmap: {
                    specularMap: {
                        value: null
                    }
                },
                envmap: {
                    envMap: {
                        value: null
                    },
                    flipEnvMap: {
                        value: -1
                    },
                    reflectivity: {
                        value: 1
                    },
                    refractionRatio: {
                        value: .98
                    }
                },
                aomap: {
                    aoMap: {
                        value: null
                    },
                    aoMapIntensity: {
                        value: 1
                    }
                },
                lightmap: {
                    lightMap: {
                        value: null
                    },
                    lightMapIntensity: {
                        value: 1
                    }
                },
                emissivemap: {
                    emissiveMap: {
                        value: null
                    }
                },
                bumpmap: {
                    bumpMap: {
                        value: null
                    },
                    bumpScale: {
                        value: 1
                    }
                },
                normalmap: {
                    normalMap: {
                        value: null
                    },
                    normalScale: {
                        value: new n(1,1)
                    }
                },
                displacementmap: {
                    displacementMap: {
                        value: null
                    },
                    displacementScale: {
                        value: 1
                    },
                    displacementBias: {
                        value: 0
                    }
                },
                roughnessmap: {
                    roughnessMap: {
                        value: null
                    }
                },
                metalnessmap: {
                    metalnessMap: {
                        value: null
                    }
                },
                gradientmap: {
                    gradientMap: {
                        value: null
                    }
                },
                fog: {
                    fogDensity: {
                        value: 25e-5
                    },
                    fogNear: {
                        value: 1
                    },
                    fogFar: {
                        value: 2e3
                    },
                    fogColor: {
                        value: new X(16777215)
                    }
                },
                lights: {
                    ambientLightColor: {
                        value: []
                    },
                    directionalLights: {
                        value: [],
                        properties: {
                            direction: {},
                            color: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    directionalShadowMap: {
                        value: []
                    },
                    directionalShadowMatrix: {
                        value: []
                    },
                    spotLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            direction: {},
                            distance: {},
                            coneCos: {},
                            penumbraCos: {},
                            decay: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    spotShadowMap: {
                        value: []
                    },
                    spotShadowMatrix: {
                        value: []
                    },
                    pointLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            decay: {},
                            distance: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {},
                            shadowCameraNear: {},
                            shadowCameraFar: {}
                        }
                    },
                    pointShadowMap: {
                        value: []
                    },
                    pointShadowMatrix: {
                        value: []
                    },
                    hemisphereLights: {
                        value: [],
                        properties: {
                            direction: {},
                            skyColor: {},
                            groundColor: {}
                        }
                    },
                    rectAreaLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            width: {},
                            height: {}
                        }
                    }
                },
                points: {
                    diffuse: {
                        value: new X(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    size: {
                        value: 1
                    },
                    scale: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    offsetRepeat: {
                        value: new i(0,0,1,1)
                    }
                }
            }
              , ts = {
                merge: function(t) {
                    for (var e = {}, n = 0; n < t.length; n++) {
                        var r = this.clone(t[n]);
                        for (var i in r)
                            e[i] = r[i]
                    }
                    return e
                },
                clone: function(t) {
                    var e = {};
                    for (var n in t) {
                        e[n] = {};
                        for (var r in t[n]) {
                            var i = t[n][r];
                            i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture) ? e[n][r] = i.clone() : Array.isArray(i) ? e[n][r] = i.slice() : e[n][r] = i
                        }
                    }
                    return e
                }
            }
              , es = {
                alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",
                alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",
                alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",
                aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",
                aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
                begin_vertex: "\nvec3 transformed = vec3( position );\n",
                beginnormal_vertex: "\nvec3 objectNormal = vec3( normal );\n",
                bsdfs: "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",
                bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",
                clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",
                clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",
                clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",
                clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",
                color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
                color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",
                color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
                color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
                common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n",
                cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",
                defaultnormal_vertex: "vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",
                displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",
                displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",
                emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",
                emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",
                encodings_fragment: "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
                encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",
                envmap_fragment: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",
                envmap_pars_fragment: "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",
                envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",
                envmap_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",
                fog_vertex: "\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",
                fog_pars_vertex: "#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",
                fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",
                fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",
                gradientmap_pars_fragment: "#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",
                lightmap_fragment: "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",
                lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
                lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",
                lights_pars: "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",
                lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
                lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",
                lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
                lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",
                lights_template: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",
                logdepthbuf_fragment: "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",
                logdepthbuf_pars_fragment: "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",
                logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",
                logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",
                map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",
                map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",
                map_particle_fragment: "#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",
                map_particle_pars_fragment: "#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",
                metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",
                metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
                morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",
                morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
                morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",
                normal_fragment: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",
                normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",
                packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
                premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",
                project_vertex: "vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",
                dithering_fragment: "#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",
                dithering_pars_fragment: "#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",
                roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",
                roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
                shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",
                shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",
                shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",
                shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",
                skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
                skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",
                skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",
                skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",
                specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
                specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
                tonemapping_fragment: "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",
                tonemapping_pars_fragment: "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",
                uv_pars_fragment: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",
                uv_pars_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",
                uv_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",
                uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
                uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
                uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",
                worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",
                cube_frag: "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",
                cube_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
                depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",
                depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
                distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",
                distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",
                equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",
                equirect_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
                linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",
                meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",
                meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
                meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
                meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
                meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
                meshphysical_frag: "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
                meshphysical_vert: "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
                normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",
                normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",
                points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
                shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n}\n",
                shadow_vert: "#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n"
            }
              , ns = {
                basic: {
                    uniforms: ts.merge([Qo.common, Qo.specularmap, Qo.envmap, Qo.aomap, Qo.lightmap, Qo.fog]),
                    vertexShader: es.meshbasic_vert,
                    fragmentShader: es.meshbasic_frag
                },
                lambert: {
                    uniforms: ts.merge([Qo.common, Qo.specularmap, Qo.envmap, Qo.aomap, Qo.lightmap, Qo.emissivemap, Qo.fog, Qo.lights, {
                        emissive: {
                            value: new X(0)
                        }
                    }]),
                    vertexShader: es.meshlambert_vert,
                    fragmentShader: es.meshlambert_frag
                },
                phong: {
                    uniforms: ts.merge([Qo.common, Qo.specularmap, Qo.envmap, Qo.aomap, Qo.lightmap, Qo.emissivemap, Qo.bumpmap, Qo.normalmap, Qo.displacementmap, Qo.gradientmap, Qo.fog, Qo.lights, {
                        emissive: {
                            value: new X(0)
                        },
                        specular: {
                            value: new X(1118481)
                        },
                        shininess: {
                            value: 30
                        }
                    }]),
                    vertexShader: es.meshphong_vert,
                    fragmentShader: es.meshphong_frag
                },
                standard: {
                    uniforms: ts.merge([Qo.common, Qo.envmap, Qo.aomap, Qo.lightmap, Qo.emissivemap, Qo.bumpmap, Qo.normalmap, Qo.displacementmap, Qo.roughnessmap, Qo.metalnessmap, Qo.fog, Qo.lights, {
                        emissive: {
                            value: new X(0)
                        },
                        roughness: {
                            value: .5
                        },
                        metalness: {
                            value: .5
                        },
                        envMapIntensity: {
                            value: 1
                        }
                    }]),
                    vertexShader: es.meshphysical_vert,
                    fragmentShader: es.meshphysical_frag
                },
                points: {
                    uniforms: ts.merge([Qo.points, Qo.fog]),
                    vertexShader: es.points_vert,
                    fragmentShader: es.points_frag
                },
                dashed: {
                    uniforms: ts.merge([Qo.common, Qo.fog, {
                        scale: {
                            value: 1
                        },
                        dashSize: {
                            value: 1
                        },
                        totalSize: {
                            value: 2
                        }
                    }]),
                    vertexShader: es.linedashed_vert,
                    fragmentShader: es.linedashed_frag
                },
                depth: {
                    uniforms: ts.merge([Qo.common, Qo.displacementmap]),
                    vertexShader: es.depth_vert,
                    fragmentShader: es.depth_frag
                },
                normal: {
                    uniforms: ts.merge([Qo.common, Qo.bumpmap, Qo.normalmap, Qo.displacementmap, {
                        opacity: {
                            value: 1
                        }
                    }]),
                    vertexShader: es.normal_vert,
                    fragmentShader: es.normal_frag
                },
                cube: {
                    uniforms: {
                        tCube: {
                            value: null
                        },
                        tFlip: {
                            value: -1
                        },
                        opacity: {
                            value: 1
                        }
                    },
                    vertexShader: es.cube_vert,
                    fragmentShader: es.cube_frag
                },
                equirect: {
                    uniforms: {
                        tEquirect: {
                            value: null
                        }
                    },
                    vertexShader: es.equirect_vert,
                    fragmentShader: es.equirect_frag
                },
                distanceRGBA: {
                    uniforms: ts.merge([Qo.common, Qo.displacementmap, {
                        referencePosition: {
                            value: new l
                        },
                        nearDistance: {
                            value: 1
                        },
                        farDistance: {
                            value: 1e3
                        }
                    }]),
                    vertexShader: es.distanceRGBA_vert,
                    fragmentShader: es.distanceRGBA_frag
                },
                shadow: {
                    uniforms: ts.merge([Qo.lights, {
                        color: {
                            value: new X(0)
                        },
                        opacity: {
                            value: 1
                        }
                    }]),
                    vertexShader: es.shadow_vert,
                    fragmentShader: es.shadow_frag
                }
            };
            ns.physical = {
                uniforms: ts.merge([ns.standard.uniforms, {
                    clearCoat: {
                        value: 0
                    },
                    clearCoatRoughness: {
                        value: 0
                    }
                }]),
                vertexShader: es.meshphysical_vert,
                fragmentShader: es.meshphysical_frag
            },
            Object.assign(q.prototype, {
                set: function(t, e) {
                    return this.min.copy(t),
                    this.max.copy(e),
                    this
                },
                setFromPoints: function(t) {
                    this.makeEmpty();
                    for (var e = 0, n = t.length; e < n; e++)
                        this.expandByPoint(t[e]);
                    return this
                },
                setFromCenterAndSize: function() {
                    var t = new n;
                    return function(e, n) {
                        var r = t.copy(n).multiplyScalar(.5);
                        return this.min.copy(e).sub(r),
                        this.max.copy(e).add(r),
                        this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.min.copy(t.min),
                    this.max.copy(t.max),
                    this
                },
                makeEmpty: function() {
                    return this.min.x = this.min.y = 1 / 0,
                    this.max.x = this.max.y = -1 / 0,
                    this
                },
                isEmpty: function() {
                    return this.max.x < this.min.x || this.max.y < this.min.y
                },
                getCenter: function(t) {
                    var e = t || new n;
                    return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                getSize: function(t) {
                    var e = t || new n;
                    return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min)
                },
                expandByPoint: function(t) {
                    return this.min.min(t),
                    this.max.max(t),
                    this
                },
                expandByVector: function(t) {
                    return this.min.sub(t),
                    this.max.add(t),
                    this
                },
                expandByScalar: function(t) {
                    return this.min.addScalar(-t),
                    this.max.addScalar(t),
                    this
                },
                containsPoint: function(t) {
                    return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y)
                },
                containsBox: function(t) {
                    return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y
                },
                getParameter: function(t, e) {
                    return (e || new n).set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
                },
                intersectsBox: function(t) {
                    return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y)
                },
                clampPoint: function(t, e) {
                    return (e || new n).copy(t).clamp(this.min, this.max)
                },
                distanceToPoint: function() {
                    var t = new n;
                    return function(e) {
                        return t.copy(e).clamp(this.min, this.max).sub(e).length()
                    }
                }(),
                intersect: function(t) {
                    return this.min.max(t.min),
                    this.max.min(t.max),
                    this
                },
                union: function(t) {
                    return this.min.min(t.min),
                    this.max.max(t.max),
                    this
                },
                translate: function(t) {
                    return this.min.add(t),
                    this.max.add(t),
                    this
                },
                equals: function(t) {
                    return t.min.equals(this.min) && t.max.equals(this.max)
                }
            }),
            $.prototype = Object.create(r.prototype),
            $.prototype.constructor = $;
            var rs = 0;
            Object.assign(J.prototype, e.prototype, {
                isMaterial: !0,
                onBeforeCompile: function() {},
                setValues: function(t) {
                    if (void 0 !== t)
                        for (var e in t) {
                            var n = t[e];
                            if (void 0 !== n)
                                if ("shading" !== e) {
                                    var r = this[e];
                                    void 0 !== r ? r && r.isColor ? r.set(n) : r && r.isVector3 && n && n.isVector3 ? r.copy(n) : this[e] = "overdraw" === e ? Number(n) : n : console.warn("THREE." + this.type + ": '" + e + "' is not a property of this material.")
                                } else
                                    console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                                    this.flatShading = 1 === n;
                            else
                                console.warn("THREE.Material: '" + e + "' parameter is undefined.")
                        }
                },
                toJSON: function(t) {
                    function e(t) {
                        var e = [];
                        for (var n in t) {
                            var r = t[n];
                            delete r.metadata,
                            e.push(r)
                        }
                        return e
                    }
                    var n = void 0 === t;
                    n && (t = {
                        textures: {},
                        images: {}
                    });
                    var r = {
                        metadata: {
                            version: 4.5,
                            type: "Material",
                            generator: "Material.toJSON"
                        }
                    };
                    if (r.uuid = this.uuid,
                    r.type = this.type,
                    "" !== this.name && (r.name = this.name),
                    this.color && this.color.isColor && (r.color = this.color.getHex()),
                    void 0 !== this.roughness && (r.roughness = this.roughness),
                    void 0 !== this.metalness && (r.metalness = this.metalness),
                    this.emissive && this.emissive.isColor && (r.emissive = this.emissive.getHex()),
                    this.specular && this.specular.isColor && (r.specular = this.specular.getHex()),
                    void 0 !== this.shininess && (r.shininess = this.shininess),
                    void 0 !== this.clearCoat && (r.clearCoat = this.clearCoat),
                    void 0 !== this.clearCoatRoughness && (r.clearCoatRoughness = this.clearCoatRoughness),
                    this.map && this.map.isTexture && (r.map = this.map.toJSON(t).uuid),
                    this.alphaMap && this.alphaMap.isTexture && (r.alphaMap = this.alphaMap.toJSON(t).uuid),
                    this.lightMap && this.lightMap.isTexture && (r.lightMap = this.lightMap.toJSON(t).uuid),
                    this.bumpMap && this.bumpMap.isTexture && (r.bumpMap = this.bumpMap.toJSON(t).uuid,
                    r.bumpScale = this.bumpScale),
                    this.normalMap && this.normalMap.isTexture && (r.normalMap = this.normalMap.toJSON(t).uuid,
                    r.normalScale = this.normalScale.toArray()),
                    this.displacementMap && this.displacementMap.isTexture && (r.displacementMap = this.displacementMap.toJSON(t).uuid,
                    r.displacementScale = this.displacementScale,
                    r.displacementBias = this.displacementBias),
                    this.roughnessMap && this.roughnessMap.isTexture && (r.roughnessMap = this.roughnessMap.toJSON(t).uuid),
                    this.metalnessMap && this.metalnessMap.isTexture && (r.metalnessMap = this.metalnessMap.toJSON(t).uuid),
                    this.emissiveMap && this.emissiveMap.isTexture && (r.emissiveMap = this.emissiveMap.toJSON(t).uuid),
                    this.specularMap && this.specularMap.isTexture && (r.specularMap = this.specularMap.toJSON(t).uuid),
                    this.envMap && this.envMap.isTexture && (r.envMap = this.envMap.toJSON(t).uuid,
                    r.reflectivity = this.reflectivity),
                    this.gradientMap && this.gradientMap.isTexture && (r.gradientMap = this.gradientMap.toJSON(t).uuid),
                    void 0 !== this.size && (r.size = this.size),
                    void 0 !== this.sizeAttenuation && (r.sizeAttenuation = this.sizeAttenuation),
                    this.blending !== ta && (r.blending = this.blending),
                    !0 === this.flatShading && (r.flatShading = this.flatShading),
                    this.side !== qi && (r.side = this.side),
                    this.vertexColors !== Zi && (r.vertexColors = this.vertexColors),
                    this.opacity < 1 && (r.opacity = this.opacity),
                    !0 === this.transparent && (r.transparent = this.transparent),
                    r.depthFunc = this.depthFunc,
                    r.depthTest = this.depthTest,
                    r.depthWrite = this.depthWrite,
                    !0 === this.dithering && (r.dithering = !0),
                    this.alphaTest > 0 && (r.alphaTest = this.alphaTest),
                    !0 === this.premultipliedAlpha && (r.premultipliedAlpha = this.premultipliedAlpha),
                    !0 === this.wireframe && (r.wireframe = this.wireframe),
                    this.wireframeLinewidth > 1 && (r.wireframeLinewidth = this.wireframeLinewidth),
                    "round" !== this.wireframeLinecap && (r.wireframeLinecap = this.wireframeLinecap),
                    "round" !== this.wireframeLinejoin && (r.wireframeLinejoin = this.wireframeLinejoin),
                    !0 === this.morphTargets && (r.morphTargets = !0),
                    !0 === this.skinning && (r.skinning = !0),
                    !1 === this.visible && (r.visible = !1),
                    "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData),
                    n) {
                        var i = e(t.textures)
                          , a = e(t.images);
                        i.length > 0 && (r.textures = i),
                        a.length > 0 && (r.images = a)
                    }
                    return r
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    this.name = t.name,
                    this.fog = t.fog,
                    this.lights = t.lights,
                    this.blending = t.blending,
                    this.side = t.side,
                    this.flatShading = t.flatShading,
                    this.vertexColors = t.vertexColors,
                    this.opacity = t.opacity,
                    this.transparent = t.transparent,
                    this.blendSrc = t.blendSrc,
                    this.blendDst = t.blendDst,
                    this.blendEquation = t.blendEquation,
                    this.blendSrcAlpha = t.blendSrcAlpha,
                    this.blendDstAlpha = t.blendDstAlpha,
                    this.blendEquationAlpha = t.blendEquationAlpha,
                    this.depthFunc = t.depthFunc,
                    this.depthTest = t.depthTest,
                    this.depthWrite = t.depthWrite,
                    this.colorWrite = t.colorWrite,
                    this.precision = t.precision,
                    this.polygonOffset = t.polygonOffset,
                    this.polygonOffsetFactor = t.polygonOffsetFactor,
                    this.polygonOffsetUnits = t.polygonOffsetUnits,
                    this.dithering = t.dithering,
                    this.alphaTest = t.alphaTest,
                    this.premultipliedAlpha = t.premultipliedAlpha,
                    this.overdraw = t.overdraw,
                    this.visible = t.visible,
                    this.userData = JSON.parse(JSON.stringify(t.userData)),
                    this.clipShadows = t.clipShadows,
                    this.clipIntersection = t.clipIntersection;
                    var e = t.clippingPlanes
                      , n = null;
                    if (null !== e) {
                        var r = e.length;
                        n = new Array(r);
                        for (var i = 0; i !== r; ++i)
                            n[i] = e[i].clone()
                    }
                    return this.clippingPlanes = n,
                    this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }),
            K.prototype = Object.create(J.prototype),
            K.prototype.constructor = K,
            K.prototype.isShaderMaterial = !0,
            K.prototype.copy = function(t) {
                return J.prototype.copy.call(this, t),
                this.fragmentShader = t.fragmentShader,
                this.vertexShader = t.vertexShader,
                this.uniforms = ts.clone(t.uniforms),
                this.defines = t.defines,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.lights = t.lights,
                this.clipping = t.clipping,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.morphNormals = t.morphNormals,
                this.extensions = t.extensions,
                this
            }
            ,
            K.prototype.toJSON = function(t) {
                var e = J.prototype.toJSON.call(this, t);
                return e.uniforms = this.uniforms,
                e.vertexShader = this.vertexShader,
                e.fragmentShader = this.fragmentShader,
                e
            }
            ,
            Q.prototype = Object.create(J.prototype),
            Q.prototype.constructor = Q,
            Q.prototype.isMeshDepthMaterial = !0,
            Q.prototype.copy = function(t) {
                return J.prototype.copy.call(this, t),
                this.depthPacking = t.depthPacking,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.map = t.map,
                this.alphaMap = t.alphaMap,
                this.displacementMap = t.displacementMap,
                this.displacementScale = t.displacementScale,
                this.displacementBias = t.displacementBias,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this
            }
            ,
            tt.prototype = Object.create(J.prototype),
            tt.prototype.constructor = tt,
            tt.prototype.isMeshDistanceMaterial = !0,
            tt.prototype.copy = function(t) {
                return J.prototype.copy.call(this, t),
                this.referencePosition.copy(t.referencePosition),
                this.nearDistance = t.nearDistance,
                this.farDistance = t.farDistance,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.map = t.map,
                this.alphaMap = t.alphaMap,
                this.displacementMap = t.displacementMap,
                this.displacementScale = t.displacementScale,
                this.displacementBias = t.displacementBias,
                this
            }
            ,
            Object.assign(et.prototype, {
                isBox3: !0,
                set: function(t, e) {
                    return this.min.copy(t),
                    this.max.copy(e),
                    this
                },
                setFromArray: function(t) {
                    for (var e = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, l = t.length; s < l; s += 3) {
                        var c = t[s]
                          , u = t[s + 1]
                          , h = t[s + 2];
                        c < e && (e = c),
                        u < n && (n = u),
                        h < r && (r = h),
                        c > i && (i = c),
                        u > a && (a = u),
                        h > o && (o = h)
                    }
                    return this.min.set(e, n, r),
                    this.max.set(i, a, o),
                    this
                },
                setFromBufferAttribute: function(t) {
                    for (var e = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, l = t.count; s < l; s++) {
                        var c = t.getX(s)
                          , u = t.getY(s)
                          , h = t.getZ(s);
                        c < e && (e = c),
                        u < n && (n = u),
                        h < r && (r = h),
                        c > i && (i = c),
                        u > a && (a = u),
                        h > o && (o = h)
                    }
                    return this.min.set(e, n, r),
                    this.max.set(i, a, o),
                    this
                },
                setFromPoints: function(t) {
                    this.makeEmpty();
                    for (var e = 0, n = t.length; e < n; e++)
                        this.expandByPoint(t[e]);
                    return this
                },
                setFromCenterAndSize: function() {
                    var t = new l;
                    return function(e, n) {
                        var r = t.copy(n).multiplyScalar(.5);
                        return this.min.copy(e).sub(r),
                        this.max.copy(e).add(r),
                        this
                    }
                }(),
                setFromObject: function(t) {
                    return this.makeEmpty(),
                    this.expandByObject(t)
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.min.copy(t.min),
                    this.max.copy(t.max),
                    this
                },
                makeEmpty: function() {
                    return this.min.x = this.min.y = this.min.z = 1 / 0,
                    this.max.x = this.max.y = this.max.z = -1 / 0,
                    this
                },
                isEmpty: function() {
                    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
                },
                getCenter: function(t) {
                    var e = t || new l;
                    return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                getSize: function(t) {
                    var e = t || new l;
                    return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
                },
                expandByPoint: function(t) {
                    return this.min.min(t),
                    this.max.max(t),
                    this
                },
                expandByVector: function(t) {
                    return this.min.sub(t),
                    this.max.add(t),
                    this
                },
                expandByScalar: function(t) {
                    return this.min.addScalar(-t),
                    this.max.addScalar(t),
                    this
                },
                expandByObject: function() {
                    var t = new l;
                    return function(e) {
                        var n = this;
                        return e.updateMatrixWorld(!0),
                        e.traverse(function(e) {
                            var r, i, a = e.geometry;
                            if (void 0 !== a)
                                if (a.isGeometry) {
                                    var o = a.vertices;
                                    for (r = 0,
                                    i = o.length; r < i; r++)
                                        t.copy(o[r]),
                                        t.applyMatrix4(e.matrixWorld),
                                        n.expandByPoint(t)
                                } else if (a.isBufferGeometry) {
                                    var s = a.attributes.position;
                                    if (void 0 !== s)
                                        for (r = 0,
                                        i = s.count; r < i; r++)
                                            t.fromBufferAttribute(s, r).applyMatrix4(e.matrixWorld),
                                            n.expandByPoint(t)
                                }
                        }),
                        this
                    }
                }(),
                containsPoint: function(t) {
                    return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z)
                },
                containsBox: function(t) {
                    return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z
                },
                getParameter: function(t, e) {
                    return (e || new l).set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
                },
                intersectsBox: function(t) {
                    return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z)
                },
                intersectsSphere: function() {
                    var t = new l;
                    return function(e) {
                        return this.clampPoint(e.center, t),
                        t.distanceToSquared(e.center) <= e.radius * e.radius
                    }
                }(),
                intersectsPlane: function(t) {
                    var e, n;
                    return t.normal.x > 0 ? (e = t.normal.x * this.min.x,
                    n = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x,
                    n = t.normal.x * this.min.x),
                    t.normal.y > 0 ? (e += t.normal.y * this.min.y,
                    n += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y,
                    n += t.normal.y * this.min.y),
                    t.normal.z > 0 ? (e += t.normal.z * this.min.z,
                    n += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z,
                    n += t.normal.z * this.min.z),
                    e <= t.constant && n >= t.constant
                },
                clampPoint: function(t, e) {
                    return (e || new l).copy(t).clamp(this.min, this.max)
                },
                distanceToPoint: function() {
                    var t = new l;
                    return function(e) {
                        return t.copy(e).clamp(this.min, this.max).sub(e).length()
                    }
                }(),
                getBoundingSphere: function() {
                    var t = new l;
                    return function(e) {
                        var n = e || new nt;
                        return this.getCenter(n.center),
                        n.radius = .5 * this.getSize(t).length(),
                        n
                    }
                }(),
                intersect: function(t) {
                    return this.min.max(t.min),
                    this.max.min(t.max),
                    this.isEmpty() && this.makeEmpty(),
                    this
                },
                union: function(t) {
                    return this.min.min(t.min),
                    this.max.max(t.max),
                    this
                },
                applyMatrix4: function() {
                    var t = [new l, new l, new l, new l, new l, new l, new l, new l];
                    return function(e) {
                        return this.isEmpty() ? this : (t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
                        t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
                        t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
                        t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
                        t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
                        t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
                        t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
                        t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
                        this.setFromPoints(t),
                        this)
                    }
                }(),
                translate: function(t) {
                    return this.min.add(t),
                    this.max.add(t),
                    this
                },
                equals: function(t) {
                    return t.min.equals(this.min) && t.max.equals(this.max)
                }
            }),
            Object.assign(nt.prototype, {
                set: function(t, e) {
                    return this.center.copy(t),
                    this.radius = e,
                    this
                },
                setFromPoints: function() {
                    var t = new et;
                    return function(e, n) {
                        var r = this.center;
                        void 0 !== n ? r.copy(n) : t.setFromPoints(e).getCenter(r);
                        for (var i = 0, a = 0, o = e.length; a < o; a++)
                            i = Math.max(i, r.distanceToSquared(e[a]));
                        return this.radius = Math.sqrt(i),
                        this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.center.copy(t.center),
                    this.radius = t.radius,
                    this
                },
                empty: function() {
                    return this.radius <= 0
                },
                containsPoint: function(t) {
                    return t.distanceToSquared(this.center) <= this.radius * this.radius
                },
                distanceToPoint: function(t) {
                    return t.distanceTo(this.center) - this.radius
                },
                intersectsSphere: function(t) {
                    var e = this.radius + t.radius;
                    return t.center.distanceToSquared(this.center) <= e * e
                },
                intersectsBox: function(t) {
                    return t.intersectsSphere(this)
                },
                intersectsPlane: function(t) {
                    return Math.abs(t.distanceToPoint(this.center)) <= this.radius
                },
                clampPoint: function(t, e) {
                    var n = this.center.distanceToSquared(t)
                      , r = e || new l;
                    return r.copy(t),
                    n > this.radius * this.radius && (r.sub(this.center).normalize(),
                    r.multiplyScalar(this.radius).add(this.center)),
                    r
                },
                getBoundingBox: function(t) {
                    var e = t || new et;
                    return e.set(this.center, this.center),
                    e.expandByScalar(this.radius),
                    e
                },
                applyMatrix4: function(t) {
                    return this.center.applyMatrix4(t),
                    this.radius = this.radius * t.getMaxScaleOnAxis(),
                    this
                },
                translate: function(t) {
                    return this.center.add(t),
                    this
                },
                equals: function(t) {
                    return t.center.equals(this.center) && t.radius === this.radius
                }
            }),
            Object.assign(rt.prototype, {
                isMatrix3: !0,
                set: function(t, e, n, r, i, a, o, s, l) {
                    var c = this.elements;
                    return c[0] = t,
                    c[1] = r,
                    c[2] = o,
                    c[3] = e,
                    c[4] = i,
                    c[5] = s,
                    c[6] = n,
                    c[7] = a,
                    c[8] = l,
                    this
                },
                identity: function() {
                    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
                    this
                },
                clone: function() {
                    return (new this.constructor).fromArray(this.elements)
                },
                copy: function(t) {
                    var e = this.elements
                      , n = t.elements;
                    return e[0] = n[0],
                    e[1] = n[1],
                    e[2] = n[2],
                    e[3] = n[3],
                    e[4] = n[4],
                    e[5] = n[5],
                    e[6] = n[6],
                    e[7] = n[7],
                    e[8] = n[8],
                    this
                },
                setFromMatrix4: function(t) {
                    var e = t.elements;
                    return this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]),
                    this
                },
                applyToBufferAttribute: function() {
                    var t = new l;
                    return function(e) {
                        for (var n = 0, r = e.count; n < r; n++)
                            t.x = e.getX(n),
                            t.y = e.getY(n),
                            t.z = e.getZ(n),
                            t.applyMatrix3(this),
                            e.setXYZ(n, t.x, t.y, t.z);
                        return e
                    }
                }(),
                multiply: function(t) {
                    return this.multiplyMatrices(this, t)
                },
                premultiply: function(t) {
                    return this.multiplyMatrices(t, this)
                },
                multiplyMatrices: function(t, e) {
                    var n = t.elements
                      , r = e.elements
                      , i = this.elements
                      , a = n[0]
                      , o = n[3]
                      , s = n[6]
                      , l = n[1]
                      , c = n[4]
                      , u = n[7]
                      , h = n[2]
                      , d = n[5]
                      , p = n[8]
                      , f = r[0]
                      , m = r[3]
                      , v = r[6]
                      , g = r[1]
                      , y = r[4]
                      , x = r[7]
                      , b = r[2]
                      , _ = r[5]
                      , w = r[8];
                    return i[0] = a * f + o * g + s * b,
                    i[3] = a * m + o * y + s * _,
                    i[6] = a * v + o * x + s * w,
                    i[1] = l * f + c * g + u * b,
                    i[4] = l * m + c * y + u * _,
                    i[7] = l * v + c * x + u * w,
                    i[2] = h * f + d * g + p * b,
                    i[5] = h * m + d * y + p * _,
                    i[8] = h * v + d * x + p * w,
                    this
                },
                multiplyScalar: function(t) {
                    var e = this.elements;
                    return e[0] *= t,
                    e[3] *= t,
                    e[6] *= t,
                    e[1] *= t,
                    e[4] *= t,
                    e[7] *= t,
                    e[2] *= t,
                    e[5] *= t,
                    e[8] *= t,
                    this
                },
                determinant: function() {
                    var t = this.elements
                      , e = t[0]
                      , n = t[1]
                      , r = t[2]
                      , i = t[3]
                      , a = t[4]
                      , o = t[5]
                      , s = t[6]
                      , l = t[7]
                      , c = t[8];
                    return e * a * c - e * o * l - n * i * c + n * o * s + r * i * l - r * a * s
                },
                getInverse: function(t, e) {
                    t && t.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
                    var n = t.elements
                      , r = this.elements
                      , i = n[0]
                      , a = n[1]
                      , o = n[2]
                      , s = n[3]
                      , l = n[4]
                      , c = n[5]
                      , u = n[6]
                      , h = n[7]
                      , d = n[8]
                      , p = d * l - c * h
                      , f = c * u - d * s
                      , m = h * s - l * u
                      , v = i * p + a * f + o * m;
                    if (0 === v) {
                        var g = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
                        if (!0 === e)
                            throw new Error(g);
                        return console.warn(g),
                        this.identity()
                    }
                    var y = 1 / v;
                    return r[0] = p * y,
                    r[1] = (o * h - d * a) * y,
                    r[2] = (c * a - o * l) * y,
                    r[3] = f * y,
                    r[4] = (d * i - o * u) * y,
                    r[5] = (o * s - c * i) * y,
                    r[6] = m * y,
                    r[7] = (a * u - h * i) * y,
                    r[8] = (l * i - a * s) * y,
                    this
                },
                transpose: function() {
                    var t, e = this.elements;
                    return t = e[1],
                    e[1] = e[3],
                    e[3] = t,
                    t = e[2],
                    e[2] = e[6],
                    e[6] = t,
                    t = e[5],
                    e[5] = e[7],
                    e[7] = t,
                    this
                },
                getNormalMatrix: function(t) {
                    return this.setFromMatrix4(t).getInverse(this).transpose()
                },
                transposeIntoArray: function(t) {
                    var e = this.elements;
                    return t[0] = e[0],
                    t[1] = e[3],
                    t[2] = e[6],
                    t[3] = e[1],
                    t[4] = e[4],
                    t[5] = e[7],
                    t[6] = e[2],
                    t[7] = e[5],
                    t[8] = e[8],
                    this
                },
                equals: function(t) {
                    for (var e = this.elements, n = t.elements, r = 0; r < 9; r++)
                        if (e[r] !== n[r])
                            return !1;
                    return !0
                },
                fromArray: function(t, e) {
                    void 0 === e && (e = 0);
                    for (var n = 0; n < 9; n++)
                        this.elements[n] = t[n + e];
                    return this
                },
                toArray: function(t, e) {
                    void 0 === t && (t = []),
                    void 0 === e && (e = 0);
                    var n = this.elements;
                    return t[e] = n[0],
                    t[e + 1] = n[1],
                    t[e + 2] = n[2],
                    t[e + 3] = n[3],
                    t[e + 4] = n[4],
                    t[e + 5] = n[5],
                    t[e + 6] = n[6],
                    t[e + 7] = n[7],
                    t[e + 8] = n[8],
                    t
                }
            }),
            Object.assign(it.prototype, {
                set: function(t, e) {
                    return this.normal.copy(t),
                    this.constant = e,
                    this
                },
                setComponents: function(t, e, n, r) {
                    return this.normal.set(t, e, n),
                    this.constant = r,
                    this
                },
                setFromNormalAndCoplanarPoint: function(t, e) {
                    return this.normal.copy(t),
                    this.constant = -e.dot(this.normal),
                    this
                },
                setFromCoplanarPoints: function() {
                    var t = new l
                      , e = new l;
                    return function(n, r, i) {
                        var a = t.subVectors(i, r).cross(e.subVectors(n, r)).normalize();
                        return this.setFromNormalAndCoplanarPoint(a, n),
                        this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.normal.copy(t.normal),
                    this.constant = t.constant,
                    this
                },
                normalize: function() {
                    var t = 1 / this.normal.length();
                    return this.normal.multiplyScalar(t),
                    this.constant *= t,
                    this
                },
                negate: function() {
                    return this.constant *= -1,
                    this.normal.negate(),
                    this
                },
                distanceToPoint: function(t) {
                    return this.normal.dot(t) + this.constant
                },
                distanceToSphere: function(t) {
                    return this.distanceToPoint(t.center) - t.radius
                },
                projectPoint: function(t, e) {
                    return (e || new l).copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)
                },
                intersectLine: function() {
                    var t = new l;
                    return function(e, n) {
                        var r = n || new l
                          , i = e.delta(t)
                          , a = this.normal.dot(i);
                        if (0 !== a) {
                            var o = -(e.start.dot(this.normal) + this.constant) / a;
                            if (!(o < 0 || o > 1))
                                return r.copy(i).multiplyScalar(o).add(e.start)
                        } else if (0 === this.distanceToPoint(e.start))
                            return r.copy(e.start)
                    }
                }(),
                intersectsLine: function(t) {
                    var e = this.distanceToPoint(t.start)
                      , n = this.distanceToPoint(t.end);
                    return e < 0 && n > 0 || n < 0 && e > 0
                },
                intersectsBox: function(t) {
                    return t.intersectsPlane(this)
                },
                intersectsSphere: function(t) {
                    return t.intersectsPlane(this)
                },
                coplanarPoint: function(t) {
                    return (t || new l).copy(this.normal).multiplyScalar(-this.constant)
                },
                applyMatrix4: function() {
                    var t = new l
                      , e = new rt;
                    return function(n, r) {
                        var i = r || e.getNormalMatrix(n)
                          , a = this.coplanarPoint(t).applyMatrix4(n)
                          , o = this.normal.applyMatrix3(i).normalize();
                        return this.constant = -a.dot(o),
                        this
                    }
                }(),
                translate: function(t) {
                    return this.constant -= t.dot(this.normal),
                    this
                },
                equals: function(t) {
                    return t.normal.equals(this.normal) && t.constant === this.constant
                }
            }),
            Object.assign(at.prototype, {
                set: function(t, e, n, r, i, a) {
                    var o = this.planes;
                    return o[0].copy(t),
                    o[1].copy(e),
                    o[2].copy(n),
                    o[3].copy(r),
                    o[4].copy(i),
                    o[5].copy(a),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    for (var e = this.planes, n = 0; n < 6; n++)
                        e[n].copy(t.planes[n]);
                    return this
                },
                setFromMatrix: function(t) {
                    var e = this.planes
                      , n = t.elements
                      , r = n[0]
                      , i = n[1]
                      , a = n[2]
                      , o = n[3]
                      , s = n[4]
                      , l = n[5]
                      , c = n[6]
                      , u = n[7]
                      , h = n[8]
                      , d = n[9]
                      , p = n[10]
                      , f = n[11]
                      , m = n[12]
                      , v = n[13]
                      , g = n[14]
                      , y = n[15];
                    return e[0].setComponents(o - r, u - s, f - h, y - m).normalize(),
                    e[1].setComponents(o + r, u + s, f + h, y + m).normalize(),
                    e[2].setComponents(o + i, u + l, f + d, y + v).normalize(),
                    e[3].setComponents(o - i, u - l, f - d, y - v).normalize(),
                    e[4].setComponents(o - a, u - c, f - p, y - g).normalize(),
                    e[5].setComponents(o + a, u + c, f + p, y + g).normalize(),
                    this
                },
                intersectsObject: function() {
                    var t = new nt;
                    return function(e) {
                        var n = e.geometry;
                        return null === n.boundingSphere && n.computeBoundingSphere(),
                        t.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),
                        this.intersectsSphere(t)
                    }
                }(),
                intersectsSprite: function() {
                    var t = new nt;
                    return function(e) {
                        return t.center.set(0, 0, 0),
                        t.radius = .7071067811865476,
                        t.applyMatrix4(e.matrixWorld),
                        this.intersectsSphere(t)
                    }
                }(),
                intersectsSphere: function(t) {
                    for (var e = this.planes, n = t.center, r = -t.radius, i = 0; i < 6; i++)
                        if (e[i].distanceToPoint(n) < r)
                            return !1;
                    return !0
                },
                intersectsBox: function() {
                    var t = new l
                      , e = new l;
                    return function(n) {
                        for (var r = this.planes, i = 0; i < 6; i++) {
                            var a = r[i];
                            t.x = a.normal.x > 0 ? n.min.x : n.max.x,
                            e.x = a.normal.x > 0 ? n.max.x : n.min.x,
                            t.y = a.normal.y > 0 ? n.min.y : n.max.y,
                            e.y = a.normal.y > 0 ? n.max.y : n.min.y,
                            t.z = a.normal.z > 0 ? n.min.z : n.max.z,
                            e.z = a.normal.z > 0 ? n.max.z : n.min.z;
                            var o = a.distanceToPoint(t)
                              , s = a.distanceToPoint(e);
                            if (o < 0 && s < 0)
                                return !1
                        }
                        return !0
                    }
                }(),
                containsPoint: function(t) {
                    for (var e = this.planes, n = 0; n < 6; n++)
                        if (e[n].distanceToPoint(t) < 0)
                            return !1;
                    return !0
                }
            }),
            lt.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
            lt.DefaultOrder = "XYZ",
            Object.defineProperties(lt.prototype, {
                x: {
                    get: function() {
                        return this._x
                    },
                    set: function(t) {
                        this._x = t,
                        this.onChangeCallback()
                    }
                },
                y: {
                    get: function() {
                        return this._y
                    },
                    set: function(t) {
                        this._y = t,
                        this.onChangeCallback()
                    }
                },
                z: {
                    get: function() {
                        return this._z
                    },
                    set: function(t) {
                        this._z = t,
                        this.onChangeCallback()
                    }
                },
                order: {
                    get: function() {
                        return this._order
                    },
                    set: function(t) {
                        this._order = t,
                        this.onChangeCallback()
                    }
                }
            }),
            Object.assign(lt.prototype, {
                isEuler: !0,
                set: function(t, e, n, r) {
                    return this._x = t,
                    this._y = e,
                    this._z = n,
                    this._order = r || this._order,
                    this.onChangeCallback(),
                    this
                },
                clone: function() {
                    return new this.constructor(this._x,this._y,this._z,this._order)
                },
                copy: function(t) {
                    return this._x = t._x,
                    this._y = t._y,
                    this._z = t._z,
                    this._order = t._order,
                    this.onChangeCallback(),
                    this
                },
                setFromRotationMatrix: function(t, e, n) {
                    var r = Go.clamp
                      , i = t.elements
                      , a = i[0]
                      , o = i[4]
                      , s = i[8]
                      , l = i[1]
                      , c = i[5]
                      , u = i[9]
                      , h = i[2]
                      , d = i[6]
                      , p = i[10];
                    return "XYZ" === (e = e || this._order) ? (this._y = Math.asin(r(s, -1, 1)),
                    Math.abs(s) < .99999 ? (this._x = Math.atan2(-u, p),
                    this._z = Math.atan2(-o, a)) : (this._x = Math.atan2(d, c),
                    this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-r(u, -1, 1)),
                    Math.abs(u) < .99999 ? (this._y = Math.atan2(s, p),
                    this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-h, a),
                    this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(r(d, -1, 1)),
                    Math.abs(d) < .99999 ? (this._y = Math.atan2(-h, p),
                    this._z = Math.atan2(-o, c)) : (this._y = 0,
                    this._z = Math.atan2(l, a))) : "ZYX" === e ? (this._y = Math.asin(-r(h, -1, 1)),
                    Math.abs(h) < .99999 ? (this._x = Math.atan2(d, p),
                    this._z = Math.atan2(l, a)) : (this._x = 0,
                    this._z = Math.atan2(-o, c))) : "YZX" === e ? (this._z = Math.asin(r(l, -1, 1)),
                    Math.abs(l) < .99999 ? (this._x = Math.atan2(-u, c),
                    this._y = Math.atan2(-h, a)) : (this._x = 0,
                    this._y = Math.atan2(s, p))) : "XZY" === e ? (this._z = Math.asin(-r(o, -1, 1)),
                    Math.abs(o) < .99999 ? (this._x = Math.atan2(d, c),
                    this._y = Math.atan2(s, a)) : (this._x = Math.atan2(-u, p),
                    this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + e),
                    this._order = e,
                    !1 !== n && this.onChangeCallback(),
                    this
                },
                setFromQuaternion: function() {
                    var t = new c;
                    return function(e, n, r) {
                        return t.makeRotationFromQuaternion(e),
                        this.setFromRotationMatrix(t, n, r)
                    }
                }(),
                setFromVector3: function(t, e) {
                    return this.set(t.x, t.y, t.z, e || this._order)
                },
                reorder: function() {
                    var t = new s;
                    return function(e) {
                        return t.setFromEuler(this),
                        this.setFromQuaternion(t, e)
                    }
                }(),
                equals: function(t) {
                    return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
                },
                fromArray: function(t) {
                    return this._x = t[0],
                    this._y = t[1],
                    this._z = t[2],
                    void 0 !== t[3] && (this._order = t[3]),
                    this.onChangeCallback(),
                    this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                    t[e] = this._x,
                    t[e + 1] = this._y,
                    t[e + 2] = this._z,
                    t[e + 3] = this._order,
                    t
                },
                toVector3: function(t) {
                    return t ? t.set(this._x, this._y, this._z) : new l(this._x,this._y,this._z)
                },
                onChange: function(t) {
                    return this.onChangeCallback = t,
                    this
                },
                onChangeCallback: function() {}
            }),
            Object.assign(ct.prototype, {
                set: function(t) {
                    this.mask = 1 << t | 0
                },
                enable: function(t) {
                    this.mask |= 1 << t | 0
                },
                toggle: function(t) {
                    this.mask ^= 1 << t | 0
                },
                disable: function(t) {
                    this.mask &= ~(1 << t | 0)
                },
                test: function(t) {
                    return 0 != (this.mask & t.mask)
                }
            });
            var is = 0;
            ut.DefaultUp = new l(0,1,0),
            ut.DefaultMatrixAutoUpdate = !0,
            Object.assign(ut.prototype, e.prototype, {
                isObject3D: !0,
                onBeforeRender: function() {},
                onAfterRender: function() {},
                applyMatrix: function(t) {
                    this.matrix.multiplyMatrices(t, this.matrix),
                    this.matrix.decompose(this.position, this.quaternion, this.scale)
                },
                applyQuaternion: function(t) {
                    return this.quaternion.premultiply(t),
                    this
                },
                setRotationFromAxisAngle: function(t, e) {
                    this.quaternion.setFromAxisAngle(t, e)
                },
                setRotationFromEuler: function(t) {
                    this.quaternion.setFromEuler(t, !0)
                },
                setRotationFromMatrix: function(t) {
                    this.quaternion.setFromRotationMatrix(t)
                },
                setRotationFromQuaternion: function(t) {
                    this.quaternion.copy(t)
                },
                rotateOnAxis: function() {
                    var t = new s;
                    return function(e, n) {
                        return t.setFromAxisAngle(e, n),
                        this.quaternion.multiply(t),
                        this
                    }
                }(),
                rotateX: function() {
                    var t = new l(1,0,0);
                    return function(e) {
                        return this.rotateOnAxis(t, e)
                    }
                }(),
                rotateY: function() {
                    var t = new l(0,1,0);
                    return function(e) {
                        return this.rotateOnAxis(t, e)
                    }
                }(),
                rotateZ: function() {
                    var t = new l(0,0,1);
                    return function(e) {
                        return this.rotateOnAxis(t, e)
                    }
                }(),
                translateOnAxis: function() {
                    var t = new l;
                    return function(e, n) {
                        return t.copy(e).applyQuaternion(this.quaternion),
                        this.position.add(t.multiplyScalar(n)),
                        this
                    }
                }(),
                translateX: function() {
                    var t = new l(1,0,0);
                    return function(e) {
                        return this.translateOnAxis(t, e)
                    }
                }(),
                translateY: function() {
                    var t = new l(0,1,0);
                    return function(e) {
                        return this.translateOnAxis(t, e)
                    }
                }(),
                translateZ: function() {
                    var t = new l(0,0,1);
                    return function(e) {
                        return this.translateOnAxis(t, e)
                    }
                }(),
                localToWorld: function(t) {
                    return t.applyMatrix4(this.matrixWorld)
                },
                worldToLocal: function() {
                    var t = new c;
                    return function(e) {
                        return e.applyMatrix4(t.getInverse(this.matrixWorld))
                    }
                }(),
                lookAt: function() {
                    var t = new c;
                    return function(e) {
                        this.isCamera ? t.lookAt(this.position, e, this.up) : t.lookAt(e, this.position, this.up),
                        this.quaternion.setFromRotationMatrix(t)
                    }
                }(),
                add: function(t) {
                    if (arguments.length > 1) {
                        for (var e = 0; e < arguments.length; e++)
                            this.add(arguments[e]);
                        return this
                    }
                    return t === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", t),
                    this) : (t && t.isObject3D ? (null !== t.parent && t.parent.remove(t),
                    t.parent = this,
                    t.dispatchEvent({
                        type: "added"
                    }),
                    this.children.push(t)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t),
                    this)
                },
                remove: function(t) {
                    if (arguments.length > 1) {
                        for (var e = 0; e < arguments.length; e++)
                            this.remove(arguments[e]);
                        return this
                    }
                    var n = this.children.indexOf(t);
                    return -1 !== n && (t.parent = null,
                    t.dispatchEvent({
                        type: "removed"
                    }),
                    this.children.splice(n, 1)),
                    this
                },
                getObjectById: function(t) {
                    return this.getObjectByProperty("id", t)
                },
                getObjectByName: function(t) {
                    return this.getObjectByProperty("name", t)
                },
                getObjectByProperty: function(t, e) {
                    if (this[t] === e)
                        return this;
                    for (var n = 0, r = this.children.length; n < r; n++) {
                        var i = this.children[n].getObjectByProperty(t, e);
                        if (void 0 !== i)
                            return i
                    }
                },
                getWorldPosition: function(t) {
                    var e = t || new l;
                    return this.updateMatrixWorld(!0),
                    e.setFromMatrixPosition(this.matrixWorld)
                },
                getWorldQuaternion: function() {
                    var t = new l
                      , e = new l;
                    return function(n) {
                        var r = n || new s;
                        return this.updateMatrixWorld(!0),
                        this.matrixWorld.decompose(t, r, e),
                        r
                    }
                }(),
                getWorldRotation: function() {
                    var t = new s;
                    return function(e) {
                        var n = e || new lt;
                        return this.getWorldQuaternion(t),
                        n.setFromQuaternion(t, this.rotation.order, !1)
                    }
                }(),
                getWorldScale: function() {
                    var t = new l
                      , e = new s;
                    return function(n) {
                        var r = n || new l;
                        return this.updateMatrixWorld(!0),
                        this.matrixWorld.decompose(t, e, r),
                        r
                    }
                }(),
                getWorldDirection: function() {
                    var t = new s;
                    return function(e) {
                        var n = e || new l;
                        return this.getWorldQuaternion(t),
                        n.set(0, 0, 1).applyQuaternion(t)
                    }
                }(),
                raycast: function() {},
                traverse: function(t) {
                    t(this);
                    for (var e = this.children, n = 0, r = e.length; n < r; n++)
                        e[n].traverse(t)
                },
                traverseVisible: function(t) {
                    if (!1 !== this.visible) {
                        t(this);
                        for (var e = this.children, n = 0, r = e.length; n < r; n++)
                            e[n].traverseVisible(t)
                    }
                },
                traverseAncestors: function(t) {
                    var e = this.parent;
                    null !== e && (t(e),
                    e.traverseAncestors(t))
                },
                updateMatrix: function() {
                    this.matrix.compose(this.position, this.quaternion, this.scale),
                    this.matrixWorldNeedsUpdate = !0
                },
                updateMatrixWorld: function(t) {
                    this.matrixAutoUpdate && this.updateMatrix(),
                    (this.matrixWorldNeedsUpdate || t) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
                    this.matrixWorldNeedsUpdate = !1,
                    t = !0);
                    for (var e = this.children, n = 0, r = e.length; n < r; n++)
                        e[n].updateMatrixWorld(t)
                },
                toJSON: function(t) {
                    function e(e, n) {
                        return void 0 === e[n.uuid] && (e[n.uuid] = n.toJSON(t)),
                        n.uuid
                    }
                    function n(t) {
                        var e = [];
                        for (var n in t) {
                            var r = t[n];
                            delete r.metadata,
                            e.push(r)
                        }
                        return e
                    }
                    var r = void 0 === t || "" === t
                      , i = {};
                    r && (t = {
                        geometries: {},
                        materials: {},
                        textures: {},
                        images: {}
                    },
                    i.metadata = {
                        version: 4.5,
                        type: "Object",
                        generator: "Object3D.toJSON"
                    });
                    var a = {};
                    if (a.uuid = this.uuid,
                    a.type = this.type,
                    "" !== this.name && (a.name = this.name),
                    !0 === this.castShadow && (a.castShadow = !0),
                    !0 === this.receiveShadow && (a.receiveShadow = !0),
                    !1 === this.visible && (a.visible = !1),
                    "{}" !== JSON.stringify(this.userData) && (a.userData = this.userData),
                    a.matrix = this.matrix.toArray(),
                    void 0 !== this.geometry && (a.geometry = e(t.geometries, this.geometry)),
                    void 0 !== this.material)
                        if (Array.isArray(this.material)) {
                            for (var o = [], s = 0, l = this.material.length; s < l; s++)
                                o.push(e(t.materials, this.material[s]));
                            a.material = o
                        } else
                            a.material = e(t.materials, this.material);
                    if (this.children.length > 0) {
                        a.children = [];
                        for (s = 0; s < this.children.length; s++)
                            a.children.push(this.children[s].toJSON(t).object)
                    }
                    if (r) {
                        var c = n(t.geometries)
                          , u = n(t.materials)
                          , h = n(t.textures)
                          , d = n(t.images);
                        c.length > 0 && (i.geometries = c),
                        u.length > 0 && (i.materials = u),
                        h.length > 0 && (i.textures = h),
                        d.length > 0 && (i.images = d)
                    }
                    return i.object = a,
                    i
                },
                clone: function(t) {
                    return (new this.constructor).copy(this, t)
                },
                copy: function(t, e) {
                    if (void 0 === e && (e = !0),
                    this.name = t.name,
                    this.up.copy(t.up),
                    this.position.copy(t.position),
                    this.quaternion.copy(t.quaternion),
                    this.scale.copy(t.scale),
                    this.matrix.copy(t.matrix),
                    this.matrixWorld.copy(t.matrixWorld),
                    this.matrixAutoUpdate = t.matrixAutoUpdate,
                    this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate,
                    this.layers.mask = t.layers.mask,
                    this.visible = t.visible,
                    this.castShadow = t.castShadow,
                    this.receiveShadow = t.receiveShadow,
                    this.frustumCulled = t.frustumCulled,
                    this.renderOrder = t.renderOrder,
                    this.userData = JSON.parse(JSON.stringify(t.userData)),
                    !0 === e)
                        for (var n = 0; n < t.children.length; n++) {
                            var r = t.children[n];
                            this.add(r.clone())
                        }
                    return this
                }
            }),
            ht.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: ht,
                isCamera: !0,
                copy: function(t, e) {
                    return ut.prototype.copy.call(this, t, e),
                    this.matrixWorldInverse.copy(t.matrixWorldInverse),
                    this.projectionMatrix.copy(t.projectionMatrix),
                    this
                },
                getWorldDirection: function() {
                    var t = new s;
                    return function(e) {
                        var n = e || new l;
                        return this.getWorldQuaternion(t),
                        n.set(0, 0, -1).applyQuaternion(t)
                    }
                }(),
                updateMatrixWorld: function(t) {
                    ut.prototype.updateMatrixWorld.call(this, t),
                    this.matrixWorldInverse.getInverse(this.matrixWorld)
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                }
            }),
            dt.prototype = Object.assign(Object.create(ht.prototype), {
                constructor: dt,
                isOrthographicCamera: !0,
                copy: function(t, e) {
                    return ht.prototype.copy.call(this, t, e),
                    this.left = t.left,
                    this.right = t.right,
                    this.top = t.top,
                    this.bottom = t.bottom,
                    this.near = t.near,
                    this.far = t.far,
                    this.zoom = t.zoom,
                    this.view = null === t.view ? null : Object.assign({}, t.view),
                    this
                },
                setViewOffset: function(t, e, n, r, i, a) {
                    this.view = {
                        fullWidth: t,
                        fullHeight: e,
                        offsetX: n,
                        offsetY: r,
                        width: i,
                        height: a
                    },
                    this.updateProjectionMatrix()
                },
                clearViewOffset: function() {
                    this.view = null,
                    this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function() {
                    var t = (this.right - this.left) / (2 * this.zoom)
                      , e = (this.top - this.bottom) / (2 * this.zoom)
                      , n = (this.right + this.left) / 2
                      , r = (this.top + this.bottom) / 2
                      , i = n - t
                      , a = n + t
                      , o = r + e
                      , s = r - e;
                    if (null !== this.view) {
                        var l = this.zoom / (this.view.width / this.view.fullWidth)
                          , c = this.zoom / (this.view.height / this.view.fullHeight)
                          , u = (this.right - this.left) / this.view.width
                          , h = (this.top - this.bottom) / this.view.height;
                        a = (i += u * (this.view.offsetX / l)) + u * (this.view.width / l),
                        s = (o -= h * (this.view.offsetY / c)) - h * (this.view.height / c)
                    }
                    this.projectionMatrix.makeOrthographic(i, a, o, s, this.near, this.far)
                },
                toJSON: function(t) {
                    var e = ut.prototype.toJSON.call(this, t);
                    return e.object.zoom = this.zoom,
                    e.object.left = this.left,
                    e.object.right = this.right,
                    e.object.top = this.top,
                    e.object.bottom = this.bottom,
                    e.object.near = this.near,
                    e.object.far = this.far,
                    null !== this.view && (e.object.view = Object.assign({}, this.view)),
                    e
                }
            }),
            pt.prototype = Object.assign(Object.create(ht.prototype), {
                constructor: pt,
                isPerspectiveCamera: !0,
                copy: function(t, e) {
                    return ht.prototype.copy.call(this, t, e),
                    this.fov = t.fov,
                    this.zoom = t.zoom,
                    this.near = t.near,
                    this.far = t.far,
                    this.focus = t.focus,
                    this.aspect = t.aspect,
                    this.view = null === t.view ? null : Object.assign({}, t.view),
                    this.filmGauge = t.filmGauge,
                    this.filmOffset = t.filmOffset,
                    this
                },
                setFocalLength: function(t) {
                    var e = .5 * this.getFilmHeight() / t;
                    this.fov = 2 * Go.RAD2DEG * Math.atan(e),
                    this.updateProjectionMatrix()
                },
                getFocalLength: function() {
                    var t = Math.tan(.5 * Go.DEG2RAD * this.fov);
                    return .5 * this.getFilmHeight() / t
                },
                getEffectiveFOV: function() {
                    return 2 * Go.RAD2DEG * Math.atan(Math.tan(.5 * Go.DEG2RAD * this.fov) / this.zoom)
                },
                getFilmWidth: function() {
                    return this.filmGauge * Math.min(this.aspect, 1)
                },
                getFilmHeight: function() {
                    return this.filmGauge / Math.max(this.aspect, 1)
                },
                setViewOffset: function(t, e, n, r, i, a) {
                    this.aspect = t / e,
                    this.view = {
                        fullWidth: t,
                        fullHeight: e,
                        offsetX: n,
                        offsetY: r,
                        width: i,
                        height: a
                    },
                    this.updateProjectionMatrix()
                },
                clearViewOffset: function() {
                    this.view = null,
                    this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function() {
                    var t = this.near
                      , e = t * Math.tan(.5 * Go.DEG2RAD * this.fov) / this.zoom
                      , n = 2 * e
                      , r = this.aspect * n
                      , i = -.5 * r
                      , a = this.view;
                    if (null !== a) {
                        var o = a.fullWidth
                          , s = a.fullHeight;
                        i += a.offsetX * r / o,
                        e -= a.offsetY * n / s,
                        r *= a.width / o,
                        n *= a.height / s
                    }
                    var l = this.filmOffset;
                    0 !== l && (i += t * l / this.getFilmWidth()),
                    this.projectionMatrix.makePerspective(i, i + r, e, e - n, t, this.far)
                },
                toJSON: function(t) {
                    var e = ut.prototype.toJSON.call(this, t);
                    return e.object.fov = this.fov,
                    e.object.zoom = this.zoom,
                    e.object.near = this.near,
                    e.object.far = this.far,
                    e.object.focus = this.focus,
                    e.object.aspect = this.aspect,
                    null !== this.view && (e.object.view = Object.assign({}, this.view)),
                    e.object.filmGauge = this.filmGauge,
                    e.object.filmOffset = this.filmOffset,
                    e
                }
            }),
            Object.assign(ft.prototype, {
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    this.a = t.a,
                    this.b = t.b,
                    this.c = t.c,
                    this.normal.copy(t.normal),
                    this.color.copy(t.color),
                    this.materialIndex = t.materialIndex;
                    for (var e = 0, n = t.vertexNormals.length; e < n; e++)
                        this.vertexNormals[e] = t.vertexNormals[e].clone();
                    for (var e = 0, n = t.vertexColors.length; e < n; e++)
                        this.vertexColors[e] = t.vertexColors[e].clone();
                    return this
                }
            });
            var as = 0;
            Object.assign(vt.prototype, e.prototype, {
                isGeometry: !0,
                applyMatrix: function(t) {
                    for (var e = (new rt).getNormalMatrix(t), n = 0, r = this.vertices.length; n < r; n++)
                        this.vertices[n].applyMatrix4(t);
                    for (var n = 0, r = this.faces.length; n < r; n++) {
                        var i = this.faces[n];
                        i.normal.applyMatrix3(e).normalize();
                        for (var a = 0, o = i.vertexNormals.length; a < o; a++)
                            i.vertexNormals[a].applyMatrix3(e).normalize()
                    }
                    return null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                    this.verticesNeedUpdate = !0,
                    this.normalsNeedUpdate = !0,
                    this
                },
                rotateX: function() {
                    var t = new c;
                    return function(e) {
                        return t.makeRotationX(e),
                        this.applyMatrix(t),
                        this
                    }
                }(),
                rotateY: function() {
                    var t = new c;
                    return function(e) {
                        return t.makeRotationY(e),
                        this.applyMatrix(t),
                        this
                    }
                }(),
                rotateZ: function() {
                    var t = new c;
                    return function(e) {
                        return t.makeRotationZ(e),
                        this.applyMatrix(t),
                        this
                    }
                }(),
                translate: function() {
                    var t = new c;
                    return function(e, n, r) {
                        return t.makeTranslation(e, n, r),
                        this.applyMatrix(t),
                        this
                    }
                }(),
                scale: function() {
                    var t = new c;
                    return function(e, n, r) {
                        return t.makeScale(e, n, r),
                        this.applyMatrix(t),
                        this
                    }
                }(),
                lookAt: function() {
                    var t = new ut;
                    return function(e) {
                        t.lookAt(e),
                        t.updateMatrix(),
                        this.applyMatrix(t.matrix)
                    }
                }(),
                fromBufferGeometry: function(t) {
                    function e(t, e, n, i) {
                        var a = new ft(t,e,n,void 0 !== s ? [d[t].clone(), d[e].clone(), d[n].clone()] : [],void 0 !== c ? [r.colors[t].clone(), r.colors[e].clone(), r.colors[n].clone()] : [],i);
                        r.faces.push(a),
                        void 0 !== u && r.faceVertexUvs[0].push([p[t].clone(), p[e].clone(), p[n].clone()]),
                        void 0 !== h && r.faceVertexUvs[1].push([f[t].clone(), f[e].clone(), f[n].clone()])
                    }
                    var r = this
                      , i = null !== t.index ? t.index.array : void 0
                      , a = t.attributes
                      , o = a.position.array
                      , s = void 0 !== a.normal ? a.normal.array : void 0
                      , c = void 0 !== a.color ? a.color.array : void 0
                      , u = void 0 !== a.uv ? a.uv.array : void 0
                      , h = void 0 !== a.uv2 ? a.uv2.array : void 0;
                    void 0 !== h && (this.faceVertexUvs[1] = []);
                    for (var d = [], p = [], f = [], m = 0, v = 0; m < o.length; m += 3,
                    v += 2)
                        r.vertices.push(new l(o[m],o[m + 1],o[m + 2])),
                        void 0 !== s && d.push(new l(s[m],s[m + 1],s[m + 2])),
                        void 0 !== c && r.colors.push(new X(c[m],c[m + 1],c[m + 2])),
                        void 0 !== u && p.push(new n(u[v],u[v + 1])),
                        void 0 !== h && f.push(new n(h[v],h[v + 1]));
                    var g = t.groups;
                    if (g.length > 0)
                        for (m = 0; m < g.length; m++)
                            for (var y = g[m], x = y.start, v = x, b = x + y.count; v < b; v += 3)
                                void 0 !== i ? e(i[v], i[v + 1], i[v + 2], y.materialIndex) : e(v, v + 1, v + 2, y.materialIndex);
                    else if (void 0 !== i)
                        for (m = 0; m < i.length; m += 3)
                            e(i[m], i[m + 1], i[m + 2]);
                    else
                        for (m = 0; m < o.length / 3; m += 3)
                            e(m, m + 1, m + 2);
                    return this.computeFaceNormals(),
                    null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
                    null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                    this
                },
                center: function() {
                    this.computeBoundingBox();
                    var t = this.boundingBox.getCenter().negate();
                    return this.translate(t.x, t.y, t.z),
                    t
                },
                normalize: function() {
                    this.computeBoundingSphere();
                    var t = this.boundingSphere.center
                      , e = this.boundingSphere.radius
                      , n = 0 === e ? 1 : 1 / e
                      , r = new c;
                    return r.set(n, 0, 0, -n * t.x, 0, n, 0, -n * t.y, 0, 0, n, -n * t.z, 0, 0, 0, 1),
                    this.applyMatrix(r),
                    this
                },
                computeFaceNormals: function() {
                    for (var t = new l, e = new l, n = 0, r = this.faces.length; n < r; n++) {
                        var i = this.faces[n]
                          , a = this.vertices[i.a]
                          , o = this.vertices[i.b]
                          , s = this.vertices[i.c];
                        t.subVectors(s, o),
                        e.subVectors(a, o),
                        t.cross(e),
                        t.normalize(),
                        i.normal.copy(t)
                    }
                },
                computeVertexNormals: function(t) {
                    void 0 === t && (t = !0);
                    var e, n, r, i, a, o;
                    for (o = new Array(this.vertices.length),
                    e = 0,
                    n = this.vertices.length; e < n; e++)
                        o[e] = new l;
                    if (t) {
                        var s, c, u, h = new l, d = new l;
                        for (r = 0,
                        i = this.faces.length; r < i; r++)
                            a = this.faces[r],
                            s = this.vertices[a.a],
                            c = this.vertices[a.b],
                            u = this.vertices[a.c],
                            h.subVectors(u, c),
                            d.subVectors(s, c),
                            h.cross(d),
                            o[a.a].add(h),
                            o[a.b].add(h),
                            o[a.c].add(h)
                    } else
                        for (this.computeFaceNormals(),
                        r = 0,
                        i = this.faces.length; r < i; r++)
                            o[(a = this.faces[r]).a].add(a.normal),
                            o[a.b].add(a.normal),
                            o[a.c].add(a.normal);
                    for (e = 0,
                    n = this.vertices.length; e < n; e++)
                        o[e].normalize();
                    for (r = 0,
                    i = this.faces.length; r < i; r++) {
                        var p = (a = this.faces[r]).vertexNormals;
                        3 === p.length ? (p[0].copy(o[a.a]),
                        p[1].copy(o[a.b]),
                        p[2].copy(o[a.c])) : (p[0] = o[a.a].clone(),
                        p[1] = o[a.b].clone(),
                        p[2] = o[a.c].clone())
                    }
                    this.faces.length > 0 && (this.normalsNeedUpdate = !0)
                },
                computeFlatVertexNormals: function() {
                    var t, e, n;
                    for (this.computeFaceNormals(),
                    t = 0,
                    e = this.faces.length; t < e; t++) {
                        var r = (n = this.faces[t]).vertexNormals;
                        3 === r.length ? (r[0].copy(n.normal),
                        r[1].copy(n.normal),
                        r[2].copy(n.normal)) : (r[0] = n.normal.clone(),
                        r[1] = n.normal.clone(),
                        r[2] = n.normal.clone())
                    }
                    this.faces.length > 0 && (this.normalsNeedUpdate = !0)
                },
                computeMorphNormals: function() {
                    var t, e, n, r, i;
                    for (n = 0,
                    r = this.faces.length; n < r; n++)
                        for ((i = this.faces[n]).__originalFaceNormal ? i.__originalFaceNormal.copy(i.normal) : i.__originalFaceNormal = i.normal.clone(),
                        i.__originalVertexNormals || (i.__originalVertexNormals = []),
                        t = 0,
                        e = i.vertexNormals.length; t < e; t++)
                            i.__originalVertexNormals[t] ? i.__originalVertexNormals[t].copy(i.vertexNormals[t]) : i.__originalVertexNormals[t] = i.vertexNormals[t].clone();
                    var a = new vt;
                    for (a.faces = this.faces,
                    t = 0,
                    e = this.morphTargets.length; t < e; t++) {
                        if (!this.morphNormals[t]) {
                            this.morphNormals[t] = {},
                            this.morphNormals[t].faceNormals = [],
                            this.morphNormals[t].vertexNormals = [];
                            var o = this.morphNormals[t].faceNormals
                              , s = this.morphNormals[t].vertexNormals;
                            for (n = 0,
                            r = this.faces.length; n < r; n++)
                                u = new l,
                                h = {
                                    a: new l,
                                    b: new l,
                                    c: new l
                                },
                                o.push(u),
                                s.push(h)
                        }
                        var c = this.morphNormals[t];
                        a.vertices = this.morphTargets[t].vertices,
                        a.computeFaceNormals(),
                        a.computeVertexNormals();
                        var u, h;
                        for (n = 0,
                        r = this.faces.length; n < r; n++)
                            i = this.faces[n],
                            u = c.faceNormals[n],
                            h = c.vertexNormals[n],
                            u.copy(i.normal),
                            h.a.copy(i.vertexNormals[0]),
                            h.b.copy(i.vertexNormals[1]),
                            h.c.copy(i.vertexNormals[2])
                    }
                    for (n = 0,
                    r = this.faces.length; n < r; n++)
                        (i = this.faces[n]).normal = i.__originalFaceNormal,
                        i.vertexNormals = i.__originalVertexNormals
                },
                computeLineDistances: function() {
                    for (var t = 0, e = this.vertices, n = 0, r = e.length; n < r; n++)
                        n > 0 && (t += e[n].distanceTo(e[n - 1])),
                        this.lineDistances[n] = t
                },
                computeBoundingBox: function() {
                    null === this.boundingBox && (this.boundingBox = new et),
                    this.boundingBox.setFromPoints(this.vertices)
                },
                computeBoundingSphere: function() {
                    null === this.boundingSphere && (this.boundingSphere = new nt),
                    this.boundingSphere.setFromPoints(this.vertices)
                },
                merge: function(t, e, n) {
                    if (t && t.isGeometry) {
                        var r, i = this.vertices.length, a = this.vertices, o = t.vertices, s = this.faces, l = t.faces, c = this.faceVertexUvs[0], u = t.faceVertexUvs[0], h = this.colors, d = t.colors;
                        void 0 === n && (n = 0),
                        void 0 !== e && (r = (new rt).getNormalMatrix(e));
                        for (var p = 0, f = o.length; p < f; p++) {
                            var m = o[p].clone();
                            void 0 !== e && m.applyMatrix4(e),
                            a.push(m)
                        }
                        for (var p = 0, f = d.length; p < f; p++)
                            h.push(d[p].clone());
                        for (p = 0,
                        f = l.length; p < f; p++) {
                            var v, g, y, x = l[p], b = x.vertexNormals, _ = x.vertexColors;
                            (v = new ft(x.a + i,x.b + i,x.c + i)).normal.copy(x.normal),
                            void 0 !== r && v.normal.applyMatrix3(r).normalize();
                            for (var w = 0, M = b.length; w < M; w++)
                                g = b[w].clone(),
                                void 0 !== r && g.applyMatrix3(r).normalize(),
                                v.vertexNormals.push(g);
                            v.color.copy(x.color);
                            for (var w = 0, M = _.length; w < M; w++)
                                y = _[w],
                                v.vertexColors.push(y.clone());
                            v.materialIndex = x.materialIndex + n,
                            s.push(v)
                        }
                        for (p = 0,
                        f = u.length; p < f; p++) {
                            var E = u[p]
                              , T = [];
                            if (void 0 !== E) {
                                for (var w = 0, M = E.length; w < M; w++)
                                    T.push(E[w].clone());
                                c.push(T)
                            }
                        }
                    } else
                        console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t)
                },
                mergeMesh: function(t) {
                    t && t.isMesh ? (t.matrixAutoUpdate && t.updateMatrix(),
                    this.merge(t.geometry, t.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t)
                },
                mergeVertices: function() {
                    var t, e, n, r, i, a, o, s, l = {}, c = [], u = [], h = Math.pow(10, 4);
                    for (n = 0,
                    r = this.vertices.length; n < r; n++)
                        t = this.vertices[n],
                        void 0 === l[e = Math.round(t.x * h) + "_" + Math.round(t.y * h) + "_" + Math.round(t.z * h)] ? (l[e] = n,
                        c.push(this.vertices[n]),
                        u[n] = c.length - 1) : u[n] = u[l[e]];
                    var d = [];
                    for (n = 0,
                    r = this.faces.length; n < r; n++) {
                        (i = this.faces[n]).a = u[i.a],
                        i.b = u[i.b],
                        i.c = u[i.c],
                        a = [i.a, i.b, i.c];
                        for (var p = 0; p < 3; p++)
                            if (a[p] === a[(p + 1) % 3]) {
                                d.push(n);
                                break
                            }
                    }
                    for (n = d.length - 1; n >= 0; n--) {
                        var f = d[n];
                        for (this.faces.splice(f, 1),
                        o = 0,
                        s = this.faceVertexUvs.length; o < s; o++)
                            this.faceVertexUvs[o].splice(f, 1)
                    }
                    var m = this.vertices.length - c.length;
                    return this.vertices = c,
                    m
                },
                sortFacesByMaterialIndex: function() {
                    for (var t = this.faces, e = t.length, n = 0; n < e; n++)
                        t[n]._id = n;
                    t.sort(function(t, e) {
                        return t.materialIndex - e.materialIndex
                    });
                    var r, i, a = this.faceVertexUvs[0], o = this.faceVertexUvs[1];
                    a && a.length === e && (r = []),
                    o && o.length === e && (i = []);
                    for (n = 0; n < e; n++) {
                        var s = t[n]._id;
                        r && r.push(a[s]),
                        i && i.push(o[s])
                    }
                    r && (this.faceVertexUvs[0] = r),
                    i && (this.faceVertexUvs[1] = i)
                },
                toJSON: function() {
                    function t(t, e, n) {
                        return n ? t | 1 << e : t & ~(1 << e)
                    }
                    function e(t) {
                        var e = t.x.toString() + t.y.toString() + t.z.toString();
                        return void 0 !== d[e] ? d[e] : (d[e] = h.length / 3,
                        h.push(t.x, t.y, t.z),
                        d[e])
                    }
                    function n(t) {
                        var e = t.r.toString() + t.g.toString() + t.b.toString();
                        return void 0 !== f[e] ? f[e] : (f[e] = p.length,
                        p.push(t.getHex()),
                        f[e])
                    }
                    function r(t) {
                        var e = t.x.toString() + t.y.toString();
                        return void 0 !== v[e] ? v[e] : (v[e] = m.length / 2,
                        m.push(t.x, t.y),
                        v[e])
                    }
                    var i = {
                        metadata: {
                            version: 4.5,
                            type: "Geometry",
                            generator: "Geometry.toJSON"
                        }
                    };
                    if (i.uuid = this.uuid,
                    i.type = this.type,
                    "" !== this.name && (i.name = this.name),
                    void 0 !== this.parameters) {
                        var a = this.parameters;
                        for (var o in a)
                            void 0 !== a[o] && (i[o] = a[o]);
                        return i
                    }
                    for (var s = [], l = 0; l < this.vertices.length; l++) {
                        var c = this.vertices[l];
                        s.push(c.x, c.y, c.z)
                    }
                    for (var u = [], h = [], d = {}, p = [], f = {}, m = [], v = {}, l = 0; l < this.faces.length; l++) {
                        var g = this.faces[l]
                          , y = void 0 !== this.faceVertexUvs[0][l]
                          , x = g.normal.length() > 0
                          , b = g.vertexNormals.length > 0
                          , _ = 1 !== g.color.r || 1 !== g.color.g || 1 !== g.color.b
                          , w = g.vertexColors.length > 0
                          , M = 0;
                        if (M = t(M, 0, 0),
                        M = t(M, 1, !0),
                        M = t(M, 2, !1),
                        M = t(M, 3, y),
                        M = t(M, 4, x),
                        M = t(M, 5, b),
                        M = t(M, 6, _),
                        M = t(M, 7, w),
                        u.push(M),
                        u.push(g.a, g.b, g.c),
                        u.push(g.materialIndex),
                        y) {
                            var E = this.faceVertexUvs[0][l];
                            u.push(r(E[0]), r(E[1]), r(E[2]))
                        }
                        if (x && u.push(e(g.normal)),
                        b) {
                            var T = g.vertexNormals;
                            u.push(e(T[0]), e(T[1]), e(T[2]))
                        }
                        if (_ && u.push(n(g.color)),
                        w) {
                            var S = g.vertexColors;
                            u.push(n(S[0]), n(S[1]), n(S[2]))
                        }
                    }
                    return i.data = {},
                    i.data.vertices = s,
                    i.data.normals = h,
                    p.length > 0 && (i.data.colors = p),
                    m.length > 0 && (i.data.uvs = [m]),
                    i.data.faces = u,
                    i
                },
                clone: function() {
                    return (new vt).copy(this)
                },
                copy: function(t) {
                    var e, n, r, i, a, o;
                    this.vertices = [],
                    this.colors = [],
                    this.faces = [],
                    this.faceVertexUvs = [[]],
                    this.morphTargets = [],
                    this.morphNormals = [],
                    this.skinWeights = [],
                    this.skinIndices = [],
                    this.lineDistances = [],
                    this.boundingBox = null,
                    this.boundingSphere = null,
                    this.name = t.name;
                    var s = t.vertices;
                    for (e = 0,
                    n = s.length; e < n; e++)
                        this.vertices.push(s[e].clone());
                    var l = t.colors;
                    for (e = 0,
                    n = l.length; e < n; e++)
                        this.colors.push(l[e].clone());
                    var c = t.faces;
                    for (e = 0,
                    n = c.length; e < n; e++)
                        this.faces.push(c[e].clone());
                    for (e = 0,
                    n = t.faceVertexUvs.length; e < n; e++) {
                        var u = t.faceVertexUvs[e];
                        for (void 0 === this.faceVertexUvs[e] && (this.faceVertexUvs[e] = []),
                        r = 0,
                        i = u.length; r < i; r++) {
                            var h = u[r]
                              , d = [];
                            for (a = 0,
                            o = h.length; a < o; a++) {
                                var p = h[a];
                                d.push(p.clone())
                            }
                            this.faceVertexUvs[e].push(d)
                        }
                    }
                    var f = t.morphTargets;
                    for (e = 0,
                    n = f.length; e < n; e++) {
                        var m = {};
                        if (m.name = f[e].name,
                        void 0 !== f[e].vertices)
                            for (m.vertices = [],
                            r = 0,
                            i = f[e].vertices.length; r < i; r++)
                                m.vertices.push(f[e].vertices[r].clone());
                        if (void 0 !== f[e].normals)
                            for (m.normals = [],
                            r = 0,
                            i = f[e].normals.length; r < i; r++)
                                m.normals.push(f[e].normals[r].clone());
                        this.morphTargets.push(m)
                    }
                    var v = t.morphNormals;
                    for (e = 0,
                    n = v.length; e < n; e++) {
                        var g = {};
                        if (void 0 !== v[e].vertexNormals)
                            for (g.vertexNormals = [],
                            r = 0,
                            i = v[e].vertexNormals.length; r < i; r++) {
                                var y = v[e].vertexNormals[r]
                                  , x = {};
                                x.a = y.a.clone(),
                                x.b = y.b.clone(),
                                x.c = y.c.clone(),
                                g.vertexNormals.push(x)
                            }
                        if (void 0 !== v[e].faceNormals)
                            for (g.faceNormals = [],
                            r = 0,
                            i = v[e].faceNormals.length; r < i; r++)
                                g.faceNormals.push(v[e].faceNormals[r].clone());
                        this.morphNormals.push(g)
                    }
                    var b = t.skinWeights;
                    for (e = 0,
                    n = b.length; e < n; e++)
                        this.skinWeights.push(b[e].clone());
                    var _ = t.skinIndices;
                    for (e = 0,
                    n = _.length; e < n; e++)
                        this.skinIndices.push(_[e].clone());
                    var w = t.lineDistances;
                    for (e = 0,
                    n = w.length; e < n; e++)
                        this.lineDistances.push(w[e]);
                    var M = t.boundingBox;
                    null !== M && (this.boundingBox = M.clone());
                    var E = t.boundingSphere;
                    return null !== E && (this.boundingSphere = E.clone()),
                    this.elementsNeedUpdate = t.elementsNeedUpdate,
                    this.verticesNeedUpdate = t.verticesNeedUpdate,
                    this.uvsNeedUpdate = t.uvsNeedUpdate,
                    this.normalsNeedUpdate = t.normalsNeedUpdate,
                    this.colorsNeedUpdate = t.colorsNeedUpdate,
                    this.lineDistancesNeedUpdate = t.lineDistancesNeedUpdate,
                    this.groupsNeedUpdate = t.groupsNeedUpdate,
                    this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }),
            Object.defineProperty(gt.prototype, "needsUpdate", {
                set: function(t) {
                    !0 === t && this.version++
                }
            }),
            Object.assign(gt.prototype, {
                isBufferAttribute: !0,
                setArray: function(t) {
                    if (Array.isArray(t))
                        throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                    this.count = void 0 !== t ? t.length / this.itemSize : 0,
                    this.array = t
                },
                setDynamic: function(t) {
                    return this.dynamic = t,
                    this
                },
                copy: function(t) {
                    return this.array = new t.array.constructor(t.array),
                    this.itemSize = t.itemSize,
                    this.count = t.count,
                    this.normalized = t.normalized,
                    this.dynamic = t.dynamic,
                    this
                },
                copyAt: function(t, e, n) {
                    t *= this.itemSize,
                    n *= e.itemSize;
                    for (var r = 0, i = this.itemSize; r < i; r++)
                        this.array[t + r] = e.array[n + r];
                    return this
                },
                copyArray: function(t) {
                    return this.array.set(t),
                    this
                },
                copyColorsArray: function(t) {
                    for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
                        var a = t[r];
                        void 0 === a && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", r),
                        a = new X),
                        e[n++] = a.r,
                        e[n++] = a.g,
                        e[n++] = a.b
                    }
                    return this
                },
                copyIndicesArray: function(t) {
                    for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
                        var a = t[r];
                        e[n++] = a.a,
                        e[n++] = a.b,
                        e[n++] = a.c
                    }
                    return this
                },
                copyVector2sArray: function(t) {
                    for (var e = this.array, r = 0, i = 0, a = t.length; i < a; i++) {
                        var o = t[i];
                        void 0 === o && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i),
                        o = new n),
                        e[r++] = o.x,
                        e[r++] = o.y
                    }
                    return this
                },
                copyVector3sArray: function(t) {
                    for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
                        var a = t[r];
                        void 0 === a && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", r),
                        a = new l),
                        e[n++] = a.x,
                        e[n++] = a.y,
                        e[n++] = a.z
                    }
                    return this
                },
                copyVector4sArray: function(t) {
                    for (var e = this.array, n = 0, r = 0, a = t.length; r < a; r++) {
                        var o = t[r];
                        void 0 === o && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", r),
                        o = new i),
                        e[n++] = o.x,
                        e[n++] = o.y,
                        e[n++] = o.z,
                        e[n++] = o.w
                    }
                    return this
                },
                set: function(t, e) {
                    return void 0 === e && (e = 0),
                    this.array.set(t, e),
                    this
                },
                getX: function(t) {
                    return this.array[t * this.itemSize]
                },
                setX: function(t, e) {
                    return this.array[t * this.itemSize] = e,
                    this
                },
                getY: function(t) {
                    return this.array[t * this.itemSize + 1]
                },
                setY: function(t, e) {
                    return this.array[t * this.itemSize + 1] = e,
                    this
                },
                getZ: function(t) {
                    return this.array[t * this.itemSize + 2]
                },
                setZ: function(t, e) {
                    return this.array[t * this.itemSize + 2] = e,
                    this
                },
                getW: function(t) {
                    return this.array[t * this.itemSize + 3]
                },
                setW: function(t, e) {
                    return this.array[t * this.itemSize + 3] = e,
                    this
                },
                setXY: function(t, e, n) {
                    return t *= this.itemSize,
                    this.array[t + 0] = e,
                    this.array[t + 1] = n,
                    this
                },
                setXYZ: function(t, e, n, r) {
                    return t *= this.itemSize,
                    this.array[t + 0] = e,
                    this.array[t + 1] = n,
                    this.array[t + 2] = r,
                    this
                },
                setXYZW: function(t, e, n, r, i) {
                    return t *= this.itemSize,
                    this.array[t + 0] = e,
                    this.array[t + 1] = n,
                    this.array[t + 2] = r,
                    this.array[t + 3] = i,
                    this
                },
                onUpload: function(t) {
                    return this.onUploadCallback = t,
                    this
                },
                clone: function() {
                    return new this.constructor(this.array,this.itemSize).copy(this)
                }
            }),
            yt.prototype = Object.create(gt.prototype),
            yt.prototype.constructor = yt,
            xt.prototype = Object.create(gt.prototype),
            xt.prototype.constructor = xt,
            bt.prototype = Object.create(gt.prototype),
            bt.prototype.constructor = bt,
            _t.prototype = Object.create(gt.prototype),
            _t.prototype.constructor = _t,
            wt.prototype = Object.create(gt.prototype),
            wt.prototype.constructor = wt,
            Mt.prototype = Object.create(gt.prototype),
            Mt.prototype.constructor = Mt,
            Et.prototype = Object.create(gt.prototype),
            Et.prototype.constructor = Et,
            Tt.prototype = Object.create(gt.prototype),
            Tt.prototype.constructor = Tt,
            St.prototype = Object.create(gt.prototype),
            St.prototype.constructor = St,
            Object.assign(At.prototype, {
                computeGroups: function(t) {
                    for (var e, n = [], r = void 0, i = t.faces, a = 0; a < i.length; a++) {
                        var o = i[a];
                        o.materialIndex !== r && (r = o.materialIndex,
                        void 0 !== e && (e.count = 3 * a - e.start,
                        n.push(e)),
                        e = {
                            start: 3 * a,
                            materialIndex: r
                        })
                    }
                    void 0 !== e && (e.count = 3 * a - e.start,
                    n.push(e)),
                    this.groups = n
                },
                fromGeometry: function(t) {
                    var e, r = t.faces, i = t.vertices, a = t.faceVertexUvs, o = a[0] && a[0].length > 0, s = a[1] && a[1].length > 0, l = t.morphTargets, c = l.length;
                    if (c > 0) {
                        e = [];
                        for (g = 0; g < c; g++)
                            e[g] = [];
                        this.morphTargets.position = e
                    }
                    var u, h = t.morphNormals, d = h.length;
                    if (d > 0) {
                        u = [];
                        for (g = 0; g < d; g++)
                            u[g] = [];
                        this.morphTargets.normal = u
                    }
                    for (var p = t.skinIndices, f = t.skinWeights, m = p.length === i.length, v = f.length === i.length, g = 0; g < r.length; g++) {
                        var y = r[g];
                        this.vertices.push(i[y.a], i[y.b], i[y.c]);
                        var x = y.vertexNormals;
                        if (3 === x.length)
                            this.normals.push(x[0], x[1], x[2]);
                        else {
                            var b = y.normal;
                            this.normals.push(b, b, b)
                        }
                        var _ = y.vertexColors;
                        if (3 === _.length)
                            this.colors.push(_[0], _[1], _[2]);
                        else {
                            var w = y.color;
                            this.colors.push(w, w, w)
                        }
                        if (!0 === o && (void 0 !== (M = a[0][g]) ? this.uvs.push(M[0], M[1], M[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", g),
                        this.uvs.push(new n, new n, new n))),
                        !0 === s) {
                            var M = a[1][g];
                            void 0 !== M ? this.uvs2.push(M[0], M[1], M[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", g),
                            this.uvs2.push(new n, new n, new n))
                        }
                        for (T = 0; T < c; T++) {
                            var E = l[T].vertices;
                            e[T].push(E[y.a], E[y.b], E[y.c])
                        }
                        for (var T = 0; T < d; T++) {
                            var S = h[T].vertexNormals[g];
                            u[T].push(S.a, S.b, S.c)
                        }
                        m && this.skinIndices.push(p[y.a], p[y.b], p[y.c]),
                        v && this.skinWeights.push(f[y.a], f[y.b], f[y.c])
                    }
                    return this.computeGroups(t),
                    this.verticesNeedUpdate = t.verticesNeedUpdate,
                    this.normalsNeedUpdate = t.normalsNeedUpdate,
                    this.colorsNeedUpdate = t.colorsNeedUpdate,
                    this.uvsNeedUpdate = t.uvsNeedUpdate,
                    this.groupsNeedUpdate = t.groupsNeedUpdate,
                    this
                }
            }),
            Rt.MaxIndex = 65535,
            Object.assign(Rt.prototype, e.prototype, {
                isBufferGeometry: !0,
                getIndex: function() {
                    return this.index
                },
                setIndex: function(t) {
                    Array.isArray(t) ? this.index = new (Lt(t) > 65535 ? Et : wt)(t,1) : this.index = t
                },
                addAttribute: function(t, e) {
                    return e && e.isBufferAttribute || e && e.isInterleavedBufferAttribute ? "index" === t ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),
                    void this.setIndex(e)) : (this.attributes[t] = e,
                    this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),
                    void this.addAttribute(t, new gt(arguments[1],arguments[2])))
                },
                getAttribute: function(t) {
                    return this.attributes[t]
                },
                removeAttribute: function(t) {
                    return delete this.attributes[t],
                    this
                },
                addGroup: function(t, e, n) {
                    this.groups.push({
                        start: t,
                        count: e,
                        materialIndex: void 0 !== n ? n : 0
                    })
                },
                clearGroups: function() {
                    this.groups = []
                },
                setDrawRange: function(t, e) {
                    this.drawRange.start = t,
                    this.drawRange.count = e
                },
                applyMatrix: function(t) {
                    var e = this.attributes.position;
                    void 0 !== e && (t.applyToBufferAttribute(e),
                    e.needsUpdate = !0);
                    var n = this.attributes.normal;
                    return void 0 !== n && ((new rt).getNormalMatrix(t).applyToBufferAttribute(n),
                    n.needsUpdate = !0),
                    null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                    this
                },
                rotateX: function() {
                    var t = new c;
                    return function(e) {
                        return t.makeRotationX(e),
                        this.applyMatrix(t),
                        this
                    }
                }(),
                rotateY: function() {
                    var t = new c;
                    return function(e) {
                        return t.makeRotationY(e),
                        this.applyMatrix(t),
                        this
                    }
                }(),
                rotateZ: function() {
                    var t = new c;
                    return function(e) {
                        return t.makeRotationZ(e),
                        this.applyMatrix(t),
                        this
                    }
                }(),
                translate: function() {
                    var t = new c;
                    return function(e, n, r) {
                        return t.makeTranslation(e, n, r),
                        this.applyMatrix(t),
                        this
                    }
                }(),
                scale: function() {
                    var t = new c;
                    return function(e, n, r) {
                        return t.makeScale(e, n, r),
                        this.applyMatrix(t),
                        this
                    }
                }(),
                lookAt: function() {
                    var t = new ut;
                    return function(e) {
                        t.lookAt(e),
                        t.updateMatrix(),
                        this.applyMatrix(t.matrix)
                    }
                }(),
                center: function() {
                    this.computeBoundingBox();
                    var t = this.boundingBox.getCenter().negate();
                    return this.translate(t.x, t.y, t.z),
                    t
                },
                setFromObject: function(t) {
                    var e = t.geometry;
                    if (t.isPoints || t.isLine) {
                        var n = new Tt(3 * e.vertices.length,3)
                          , r = new Tt(3 * e.colors.length,3);
                        if (this.addAttribute("position", n.copyVector3sArray(e.vertices)),
                        this.addAttribute("color", r.copyColorsArray(e.colors)),
                        e.lineDistances && e.lineDistances.length === e.vertices.length) {
                            var i = new Tt(e.lineDistances.length,1);
                            this.addAttribute("lineDistance", i.copyArray(e.lineDistances))
                        }
                        null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                        null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone())
                    } else
                        t.isMesh && e && e.isGeometry && this.fromGeometry(e);
                    return this
                },
                updateFromObject: function(t) {
                    var e = t.geometry;
                    if (t.isMesh) {
                        var n = e.__directGeometry;
                        if (!0 === e.elementsNeedUpdate && (n = void 0,
                        e.elementsNeedUpdate = !1),
                        void 0 === n)
                            return this.fromGeometry(e);
                        n.verticesNeedUpdate = e.verticesNeedUpdate,
                        n.normalsNeedUpdate = e.normalsNeedUpdate,
                        n.colorsNeedUpdate = e.colorsNeedUpdate,
                        n.uvsNeedUpdate = e.uvsNeedUpdate,
                        n.groupsNeedUpdate = e.groupsNeedUpdate,
                        e.verticesNeedUpdate = !1,
                        e.normalsNeedUpdate = !1,
                        e.colorsNeedUpdate = !1,
                        e.uvsNeedUpdate = !1,
                        e.groupsNeedUpdate = !1,
                        e = n
                    }
                    var r;
                    return !0 === e.verticesNeedUpdate && (void 0 !== (r = this.attributes.position) && (r.copyVector3sArray(e.vertices),
                    r.needsUpdate = !0),
                    e.verticesNeedUpdate = !1),
                    !0 === e.normalsNeedUpdate && (void 0 !== (r = this.attributes.normal) && (r.copyVector3sArray(e.normals),
                    r.needsUpdate = !0),
                    e.normalsNeedUpdate = !1),
                    !0 === e.colorsNeedUpdate && (void 0 !== (r = this.attributes.color) && (r.copyColorsArray(e.colors),
                    r.needsUpdate = !0),
                    e.colorsNeedUpdate = !1),
                    e.uvsNeedUpdate && (void 0 !== (r = this.attributes.uv) && (r.copyVector2sArray(e.uvs),
                    r.needsUpdate = !0),
                    e.uvsNeedUpdate = !1),
                    e.lineDistancesNeedUpdate && (void 0 !== (r = this.attributes.lineDistance) && (r.copyArray(e.lineDistances),
                    r.needsUpdate = !0),
                    e.lineDistancesNeedUpdate = !1),
                    e.groupsNeedUpdate && (e.computeGroups(t.geometry),
                    this.groups = e.groups,
                    e.groupsNeedUpdate = !1),
                    this
                },
                fromGeometry: function(t) {
                    return t.__directGeometry = (new At).fromGeometry(t),
                    this.fromDirectGeometry(t.__directGeometry)
                },
                fromDirectGeometry: function(t) {
                    var e = new Float32Array(3 * t.vertices.length);
                    if (this.addAttribute("position", new gt(e,3).copyVector3sArray(t.vertices)),
                    t.normals.length > 0) {
                        var n = new Float32Array(3 * t.normals.length);
                        this.addAttribute("normal", new gt(n,3).copyVector3sArray(t.normals))
                    }
                    if (t.colors.length > 0) {
                        var r = new Float32Array(3 * t.colors.length);
                        this.addAttribute("color", new gt(r,3).copyColorsArray(t.colors))
                    }
                    if (t.uvs.length > 0) {
                        var i = new Float32Array(2 * t.uvs.length);
                        this.addAttribute("uv", new gt(i,2).copyVector2sArray(t.uvs))
                    }
                    if (t.uvs2.length > 0) {
                        var a = new Float32Array(2 * t.uvs2.length);
                        this.addAttribute("uv2", new gt(a,2).copyVector2sArray(t.uvs2))
                    }
                    if (t.indices.length > 0) {
                        var o = new (Lt(t.indices) > 65535 ? Uint32Array : Uint16Array)(3 * t.indices.length);
                        this.setIndex(new gt(o,1).copyIndicesArray(t.indices))
                    }
                    this.groups = t.groups;
                    for (var s in t.morphTargets) {
                        for (var l = [], c = t.morphTargets[s], u = 0, h = c.length; u < h; u++) {
                            var d = c[u]
                              , p = new Tt(3 * d.length,3);
                            l.push(p.copyVector3sArray(d))
                        }
                        this.morphAttributes[s] = l
                    }
                    if (t.skinIndices.length > 0) {
                        var f = new Tt(4 * t.skinIndices.length,4);
                        this.addAttribute("skinIndex", f.copyVector4sArray(t.skinIndices))
                    }
                    if (t.skinWeights.length > 0) {
                        var m = new Tt(4 * t.skinWeights.length,4);
                        this.addAttribute("skinWeight", m.copyVector4sArray(t.skinWeights))
                    }
                    return null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                    null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
                    this
                },
                computeBoundingBox: function() {
                    null === this.boundingBox && (this.boundingBox = new et);
                    var t = this.attributes.position;
                    void 0 !== t ? this.boundingBox.setFromBufferAttribute(t) : this.boundingBox.makeEmpty(),
                    (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
                },
                computeBoundingSphere: function() {
                    var t = new et
                      , e = new l;
                    return function() {
                        null === this.boundingSphere && (this.boundingSphere = new nt);
                        var n = this.attributes.position;
                        if (n) {
                            var r = this.boundingSphere.center;
                            t.setFromBufferAttribute(n),
                            t.getCenter(r);
                            for (var i = 0, a = 0, o = n.count; a < o; a++)
                                e.x = n.getX(a),
                                e.y = n.getY(a),
                                e.z = n.getZ(a),
                                i = Math.max(i, r.distanceToSquared(e));
                            this.boundingSphere.radius = Math.sqrt(i),
                            isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                        }
                    }
                }(),
                computeFaceNormals: function() {},
                computeVertexNormals: function() {
                    var t = this.index
                      , e = this.attributes
                      , n = this.groups;
                    if (e.position) {
                        var r = e.position.array;
                        if (void 0 === e.normal)
                            this.addAttribute("normal", new gt(new Float32Array(r.length),3));
                        else
                            for (var i = e.normal.array, a = 0, o = i.length; a < o; a++)
                                i[a] = 0;
                        var s, c, u, h = e.normal.array, d = new l, p = new l, f = new l, m = new l, v = new l;
                        if (t) {
                            var g = t.array;
                            0 === n.length && this.addGroup(0, g.length);
                            for (var y = 0, x = n.length; y < x; ++y)
                                for (var b = n[y], _ = b.start, a = _, o = _ + b.count; a < o; a += 3)
                                    s = 3 * g[a + 0],
                                    c = 3 * g[a + 1],
                                    u = 3 * g[a + 2],
                                    d.fromArray(r, s),
                                    p.fromArray(r, c),
                                    f.fromArray(r, u),
                                    m.subVectors(f, p),
                                    v.subVectors(d, p),
                                    m.cross(v),
                                    h[s] += m.x,
                                    h[s + 1] += m.y,
                                    h[s + 2] += m.z,
                                    h[c] += m.x,
                                    h[c + 1] += m.y,
                                    h[c + 2] += m.z,
                                    h[u] += m.x,
                                    h[u + 1] += m.y,
                                    h[u + 2] += m.z
                        } else
                            for (var a = 0, o = r.length; a < o; a += 9)
                                d.fromArray(r, a),
                                p.fromArray(r, a + 3),
                                f.fromArray(r, a + 6),
                                m.subVectors(f, p),
                                v.subVectors(d, p),
                                m.cross(v),
                                h[a] = m.x,
                                h[a + 1] = m.y,
                                h[a + 2] = m.z,
                                h[a + 3] = m.x,
                                h[a + 4] = m.y,
                                h[a + 5] = m.z,
                                h[a + 6] = m.x,
                                h[a + 7] = m.y,
                                h[a + 8] = m.z;
                        this.normalizeNormals(),
                        e.normal.needsUpdate = !0
                    }
                },
                merge: function(t, e) {
                    if (t && t.isBufferGeometry) {
                        void 0 === e && (e = 0);
                        var n = this.attributes;
                        for (var r in n)
                            if (void 0 !== t.attributes[r])
                                for (var i = n[r].array, a = t.attributes[r], o = a.array, s = 0, l = a.itemSize * e; s < o.length; s++,
                                l++)
                                    i[l] = o[s];
                        return this
                    }
                    console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t)
                },
                normalizeNormals: function() {
                    var t = new l;
                    return function() {
                        for (var e = this.attributes.normal, n = 0, r = e.count; n < r; n++)
                            t.x = e.getX(n),
                            t.y = e.getY(n),
                            t.z = e.getZ(n),
                            t.normalize(),
                            e.setXYZ(n, t.x, t.y, t.z)
                    }
                }(),
                toNonIndexed: function() {
                    if (null === this.index)
                        return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),
                        this;
                    var t = new Rt
                      , e = this.index.array
                      , n = this.attributes;
                    for (var r in n) {
                        for (var i = n[r], a = i.array, o = i.itemSize, s = new a.constructor(e.length * o), l = 0, c = 0, u = 0, h = e.length; u < h; u++) {
                            l = e[u] * o;
                            for (var d = 0; d < o; d++)
                                s[c++] = a[l++]
                        }
                        t.addAttribute(r, new gt(s,o))
                    }
                    return t
                },
                toJSON: function() {
                    var t = {
                        metadata: {
                            version: 4.5,
                            type: "BufferGeometry",
                            generator: "BufferGeometry.toJSON"
                        }
                    };
                    if (t.uuid = this.uuid,
                    t.type = this.type,
                    "" !== this.name && (t.name = this.name),
                    void 0 !== this.parameters) {
                        var e = this.parameters;
                        for (var n in e)
                            void 0 !== e[n] && (t[n] = e[n]);
                        return t
                    }
                    t.data = {
                        attributes: {}
                    };
                    var r = this.index;
                    if (null !== r) {
                        o = Array.prototype.slice.call(r.array);
                        t.data.index = {
                            type: r.array.constructor.name,
                            array: o
                        }
                    }
                    var i = this.attributes;
                    for (var n in i) {
                        var a = i[n]
                          , o = Array.prototype.slice.call(a.array);
                        t.data.attributes[n] = {
                            itemSize: a.itemSize,
                            type: a.array.constructor.name,
                            array: o,
                            normalized: a.normalized
                        }
                    }
                    var s = this.groups;
                    s.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(s)));
                    var l = this.boundingSphere;
                    return null !== l && (t.data.boundingSphere = {
                        center: l.center.toArray(),
                        radius: l.radius
                    }),
                    t
                },
                clone: function() {
                    return (new Rt).copy(this)
                },
                copy: function(t) {
                    var e, n, r;
                    this.index = null,
                    this.attributes = {},
                    this.morphAttributes = {},
                    this.groups = [],
                    this.boundingBox = null,
                    this.boundingSphere = null,
                    this.name = t.name;
                    var i = t.index;
                    null !== i && this.setIndex(i.clone());
                    var a = t.attributes;
                    for (e in a) {
                        var o = a[e];
                        this.addAttribute(e, o.clone())
                    }
                    var s = t.morphAttributes;
                    for (e in s) {
                        var l = []
                          , c = s[e];
                        for (n = 0,
                        r = c.length; n < r; n++)
                            l.push(c[n].clone());
                        this.morphAttributes[e] = l
                    }
                    var u = t.groups;
                    for (n = 0,
                    r = u.length; n < r; n++) {
                        var h = u[n];
                        this.addGroup(h.start, h.count, h.materialIndex)
                    }
                    var d = t.boundingBox;
                    null !== d && (this.boundingBox = d.clone());
                    var p = t.boundingSphere;
                    return null !== p && (this.boundingSphere = p.clone()),
                    this.drawRange.start = t.drawRange.start,
                    this.drawRange.count = t.drawRange.count,
                    this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }),
            (Pt.prototype = Object.create(vt.prototype)).constructor = Pt,
            Ct.prototype = Object.create(Rt.prototype),
            Ct.prototype.constructor = Ct,
            (It.prototype = Object.create(vt.prototype)).constructor = It,
            Ot.prototype = Object.create(Rt.prototype),
            Ot.prototype.constructor = Ot,
            Nt.prototype = Object.create(J.prototype),
            Nt.prototype.constructor = Nt,
            Nt.prototype.isMeshBasicMaterial = !0,
            Nt.prototype.copy = function(t) {
                return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.map = t.map,
                this.lightMap = t.lightMap,
                this.lightMapIntensity = t.lightMapIntensity,
                this.aoMap = t.aoMap,
                this.aoMapIntensity = t.aoMapIntensity,
                this.specularMap = t.specularMap,
                this.alphaMap = t.alphaMap,
                this.envMap = t.envMap,
                this.combine = t.combine,
                this.reflectivity = t.reflectivity,
                this.refractionRatio = t.refractionRatio,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.wireframeLinecap = t.wireframeLinecap,
                this.wireframeLinejoin = t.wireframeLinejoin,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this
            }
            ,
            Object.assign(Dt.prototype, {
                set: function(t, e) {
                    return this.origin.copy(t),
                    this.direction.copy(e),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.origin.copy(t.origin),
                    this.direction.copy(t.direction),
                    this
                },
                at: function(t, e) {
                    return (e || new l).copy(this.direction).multiplyScalar(t).add(this.origin)
                },
                lookAt: function(t) {
                    return this.direction.copy(t).sub(this.origin).normalize(),
                    this
                },
                recast: function() {
                    var t = new l;
                    return function(e) {
                        return this.origin.copy(this.at(e, t)),
                        this
                    }
                }(),
                closestPointToPoint: function(t, e) {
                    var n = e || new l;
                    n.subVectors(t, this.origin);
                    var r = n.dot(this.direction);
                    return r < 0 ? n.copy(this.origin) : n.copy(this.direction).multiplyScalar(r).add(this.origin)
                },
                distanceToPoint: function(t) {
                    return Math.sqrt(this.distanceSqToPoint(t))
                },
                distanceSqToPoint: function() {
                    var t = new l;
                    return function(e) {
                        var n = t.subVectors(e, this.origin).dot(this.direction);
                        return n < 0 ? this.origin.distanceToSquared(e) : (t.copy(this.direction).multiplyScalar(n).add(this.origin),
                        t.distanceToSquared(e))
                    }
                }(),
                distanceSqToSegment: function() {
                    var t = new l
                      , e = new l
                      , n = new l;
                    return function(r, i, a, o) {
                        t.copy(r).add(i).multiplyScalar(.5),
                        e.copy(i).sub(r).normalize(),
                        n.copy(this.origin).sub(t);
                        var s, l, c, u, h = .5 * r.distanceTo(i), d = -this.direction.dot(e), p = n.dot(this.direction), f = -n.dot(e), m = n.lengthSq(), v = Math.abs(1 - d * d);
                        if (v > 0)
                            if (s = d * f - p,
                            l = d * p - f,
                            u = h * v,
                            s >= 0)
                                if (l >= -u)
                                    if (l <= u) {
                                        var g = 1 / v;
                                        c = (s *= g) * (s + d * (l *= g) + 2 * p) + l * (d * s + l + 2 * f) + m
                                    } else
                                        l = h,
                                        c = -(s = Math.max(0, -(d * l + p))) * s + l * (l + 2 * f) + m;
                                else
                                    l = -h,
                                    c = -(s = Math.max(0, -(d * l + p))) * s + l * (l + 2 * f) + m;
                            else
                                l <= -u ? c = -(s = Math.max(0, -(-d * h + p))) * s + (l = s > 0 ? -h : Math.min(Math.max(-h, -f), h)) * (l + 2 * f) + m : l <= u ? (s = 0,
                                c = (l = Math.min(Math.max(-h, -f), h)) * (l + 2 * f) + m) : c = -(s = Math.max(0, -(d * h + p))) * s + (l = s > 0 ? h : Math.min(Math.max(-h, -f), h)) * (l + 2 * f) + m;
                        else
                            l = d > 0 ? -h : h,
                            c = -(s = Math.max(0, -(d * l + p))) * s + l * (l + 2 * f) + m;
                        return a && a.copy(this.direction).multiplyScalar(s).add(this.origin),
                        o && o.copy(e).multiplyScalar(l).add(t),
                        c
                    }
                }(),
                intersectSphere: function() {
                    var t = new l;
                    return function(e, n) {
                        t.subVectors(e.center, this.origin);
                        var r = t.dot(this.direction)
                          , i = t.dot(t) - r * r
                          , a = e.radius * e.radius;
                        if (i > a)
                            return null;
                        var o = Math.sqrt(a - i)
                          , s = r - o
                          , l = r + o;
                        return s < 0 && l < 0 ? null : s < 0 ? this.at(l, n) : this.at(s, n)
                    }
                }(),
                intersectsSphere: function(t) {
                    return this.distanceToPoint(t.center) <= t.radius
                },
                distanceToPlane: function(t) {
                    var e = t.normal.dot(this.direction);
                    if (0 === e)
                        return 0 === t.distanceToPoint(this.origin) ? 0 : null;
                    var n = -(this.origin.dot(t.normal) + t.constant) / e;
                    return n >= 0 ? n : null
                },
                intersectPlane: function(t, e) {
                    var n = this.distanceToPlane(t);
                    return null === n ? null : this.at(n, e)
                },
                intersectsPlane: function(t) {
                    var e = t.distanceToPoint(this.origin);
                    return 0 === e || t.normal.dot(this.direction) * e < 0
                },
                intersectBox: function(t, e) {
                    var n, r, i, a, o, s, l = 1 / this.direction.x, c = 1 / this.direction.y, u = 1 / this.direction.z, h = this.origin;
                    return l >= 0 ? (n = (t.min.x - h.x) * l,
                    r = (t.max.x - h.x) * l) : (n = (t.max.x - h.x) * l,
                    r = (t.min.x - h.x) * l),
                    c >= 0 ? (i = (t.min.y - h.y) * c,
                    a = (t.max.y - h.y) * c) : (i = (t.max.y - h.y) * c,
                    a = (t.min.y - h.y) * c),
                    n > a || i > r ? null : ((i > n || n !== n) && (n = i),
                    (a < r || r !== r) && (r = a),
                    u >= 0 ? (o = (t.min.z - h.z) * u,
                    s = (t.max.z - h.z) * u) : (o = (t.max.z - h.z) * u,
                    s = (t.min.z - h.z) * u),
                    n > s || o > r ? null : ((o > n || n !== n) && (n = o),
                    (s < r || r !== r) && (r = s),
                    r < 0 ? null : this.at(n >= 0 ? n : r, e)))
                },
                intersectsBox: function() {
                    var t = new l;
                    return function(e) {
                        return null !== this.intersectBox(e, t)
                    }
                }(),
                intersectTriangle: function() {
                    var t = new l
                      , e = new l
                      , n = new l
                      , r = new l;
                    return function(i, a, o, s, l) {
                        e.subVectors(a, i),
                        n.subVectors(o, i),
                        r.crossVectors(e, n);
                        var c, u = this.direction.dot(r);
                        if (u > 0) {
                            if (s)
                                return null;
                            c = 1
                        } else {
                            if (!(u < 0))
                                return null;
                            c = -1,
                            u = -u
                        }
                        t.subVectors(this.origin, i);
                        var h = c * this.direction.dot(n.crossVectors(t, n));
                        if (h < 0)
                            return null;
                        var d = c * this.direction.dot(e.cross(t));
                        if (d < 0)
                            return null;
                        if (h + d > u)
                            return null;
                        var p = -c * t.dot(r);
                        return p < 0 ? null : this.at(p / u, l)
                    }
                }(),
                applyMatrix4: function(t) {
                    return this.origin.applyMatrix4(t),
                    this.direction.transformDirection(t),
                    this
                },
                equals: function(t) {
                    return t.origin.equals(this.origin) && t.direction.equals(this.direction)
                }
            }),
            Object.assign(Ut.prototype, {
                set: function(t, e) {
                    return this.start.copy(t),
                    this.end.copy(e),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.start.copy(t.start),
                    this.end.copy(t.end),
                    this
                },
                getCenter: function(t) {
                    return (t || new l).addVectors(this.start, this.end).multiplyScalar(.5)
                },
                delta: function(t) {
                    return (t || new l).subVectors(this.end, this.start)
                },
                distanceSq: function() {
                    return this.start.distanceToSquared(this.end)
                },
                distance: function() {
                    return this.start.distanceTo(this.end)
                },
                at: function(t, e) {
                    var n = e || new l;
                    return this.delta(n).multiplyScalar(t).add(this.start)
                },
                closestPointToPointParameter: function() {
                    var t = new l
                      , e = new l;
                    return function(n, r) {
                        t.subVectors(n, this.start),
                        e.subVectors(this.end, this.start);
                        var i = e.dot(e)
                          , a = e.dot(t) / i;
                        return r && (a = Go.clamp(a, 0, 1)),
                        a
                    }
                }(),
                closestPointToPoint: function(t, e, n) {
                    var r = this.closestPointToPointParameter(t, e)
                      , i = n || new l;
                    return this.delta(i).multiplyScalar(r).add(this.start)
                },
                applyMatrix4: function(t) {
                    return this.start.applyMatrix4(t),
                    this.end.applyMatrix4(t),
                    this
                },
                equals: function(t) {
                    return t.start.equals(this.start) && t.end.equals(this.end)
                }
            }),
            Object.assign(kt, {
                normal: function() {
                    var t = new l;
                    return function(e, n, r, i) {
                        var a = i || new l;
                        a.subVectors(r, n),
                        t.subVectors(e, n),
                        a.cross(t);
                        var o = a.lengthSq();
                        return o > 0 ? a.multiplyScalar(1 / Math.sqrt(o)) : a.set(0, 0, 0)
                    }
                }(),
                barycoordFromPoint: function() {
                    var t = new l
                      , e = new l
                      , n = new l;
                    return function(r, i, a, o, s) {
                        t.subVectors(o, i),
                        e.subVectors(a, i),
                        n.subVectors(r, i);
                        var c = t.dot(t)
                          , u = t.dot(e)
                          , h = t.dot(n)
                          , d = e.dot(e)
                          , p = e.dot(n)
                          , f = c * d - u * u
                          , m = s || new l;
                        if (0 === f)
                            return m.set(-2, -1, -1);
                        var v = 1 / f
                          , g = (d * h - u * p) * v
                          , y = (c * p - u * h) * v;
                        return m.set(1 - g - y, y, g)
                    }
                }(),
                containsPoint: function() {
                    var t = new l;
                    return function(e, n, r, i) {
                        var a = kt.barycoordFromPoint(e, n, r, i, t);
                        return a.x >= 0 && a.y >= 0 && a.x + a.y <= 1
                    }
                }()
            }),
            Object.assign(kt.prototype, {
                set: function(t, e, n) {
                    return this.a.copy(t),
                    this.b.copy(e),
                    this.c.copy(n),
                    this
                },
                setFromPointsAndIndices: function(t, e, n, r) {
                    return this.a.copy(t[e]),
                    this.b.copy(t[n]),
                    this.c.copy(t[r]),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.a.copy(t.a),
                    this.b.copy(t.b),
                    this.c.copy(t.c),
                    this
                },
                area: function() {
                    var t = new l
                      , e = new l;
                    return function() {
                        return t.subVectors(this.c, this.b),
                        e.subVectors(this.a, this.b),
                        .5 * t.cross(e).length()
                    }
                }(),
                midpoint: function(t) {
                    return (t || new l).addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
                },
                normal: function(t) {
                    return kt.normal(this.a, this.b, this.c, t)
                },
                plane: function(t) {
                    return (t || new it).setFromCoplanarPoints(this.a, this.b, this.c)
                },
                barycoordFromPoint: function(t, e) {
                    return kt.barycoordFromPoint(t, this.a, this.b, this.c, e)
                },
                containsPoint: function(t) {
                    return kt.containsPoint(t, this.a, this.b, this.c)
                },
                closestPointToPoint: function() {
                    var t = new it
                      , e = [new Ut, new Ut, new Ut]
                      , n = new l
                      , r = new l;
                    return function(i, a) {
                        var o = a || new l
                          , s = 1 / 0;
                        if (t.setFromCoplanarPoints(this.a, this.b, this.c),
                        t.projectPoint(i, n),
                        !0 === this.containsPoint(n))
                            o.copy(n);
                        else {
                            e[0].set(this.a, this.b),
                            e[1].set(this.b, this.c),
                            e[2].set(this.c, this.a);
                            for (var c = 0; c < e.length; c++) {
                                e[c].closestPointToPoint(n, !0, r);
                                var u = n.distanceToSquared(r);
                                u < s && (s = u,
                                o.copy(r))
                            }
                        }
                        return o
                    }
                }(),
                equals: function(t) {
                    return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
                }
            }),
            Bt.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Bt,
                isMesh: !0,
                setDrawMode: function(t) {
                    this.drawMode = t
                },
                copy: function(t) {
                    return ut.prototype.copy.call(this, t),
                    this.drawMode = t.drawMode,
                    this
                },
                updateMorphTargets: function() {
                    var t, e, n, r = this.geometry;
                    if (r.isBufferGeometry) {
                        var i = r.morphAttributes
                          , a = Object.keys(i);
                        if (a.length > 0) {
                            var o = i[a[0]];
                            if (void 0 !== o)
                                for (this.morphTargetInfluences = [],
                                this.morphTargetDictionary = {},
                                t = 0,
                                e = o.length; t < e; t++)
                                    n = o[t].name || String(t),
                                    this.morphTargetInfluences.push(0),
                                    this.morphTargetDictionary[n] = t
                        }
                    } else {
                        var s = r.morphTargets;
                        if (void 0 !== s && s.length > 0)
                            for (this.morphTargetInfluences = [],
                            this.morphTargetDictionary = {},
                            t = 0,
                            e = s.length; t < e; t++)
                                n = s[t].name || String(t),
                                this.morphTargetInfluences.push(0),
                                this.morphTargetDictionary[n] = t
                    }
                },
                raycast: function() {
                    function t(t, e, n, r, i, a, o) {
                        return kt.barycoordFromPoint(t, e, n, r, y),
                        i.multiplyScalar(y.x),
                        a.multiplyScalar(y.y),
                        o.multiplyScalar(y.z),
                        i.add(a).add(o),
                        i.clone()
                    }
                    function e(t, e, n, r, i, a, o, s) {
                        if (null === (e.side === Yi ? r.intersectTriangle(o, a, i, !0, s) : r.intersectTriangle(i, a, o, e.side !== $i, s)))
                            return null;
                        b.copy(s),
                        b.applyMatrix4(t.matrixWorld);
                        var l = n.ray.origin.distanceTo(b);
                        return l < n.near || l > n.far ? null : {
                            distance: l,
                            point: b.clone(),
                            object: t
                        }
                    }
                    function r(n, r, i, a, o, l, c, d) {
                        s.fromBufferAttribute(a, l),
                        u.fromBufferAttribute(a, c),
                        h.fromBufferAttribute(a, d);
                        var p = e(n, n.material, r, i, s, u, h, x);
                        return p && (o && (m.fromBufferAttribute(o, l),
                        v.fromBufferAttribute(o, c),
                        g.fromBufferAttribute(o, d),
                        p.uv = t(x, s, u, h, m, v, g)),
                        p.face = new ft(l,c,d,kt.normal(s, u, h)),
                        p.faceIndex = l),
                        p
                    }
                    var i = new c
                      , a = new Dt
                      , o = new nt
                      , s = new l
                      , u = new l
                      , h = new l
                      , d = new l
                      , p = new l
                      , f = new l
                      , m = new n
                      , v = new n
                      , g = new n
                      , y = new l
                      , x = new l
                      , b = new l;
                    return function(n, l) {
                        var c = this.geometry
                          , y = this.material
                          , b = this.matrixWorld;
                        if (void 0 !== y && (null === c.boundingSphere && c.computeBoundingSphere(),
                        o.copy(c.boundingSphere),
                        o.applyMatrix4(b),
                        !1 !== n.ray.intersectsSphere(o) && (i.getInverse(b),
                        a.copy(n.ray).applyMatrix4(i),
                        null === c.boundingBox || !1 !== a.intersectsBox(c.boundingBox)))) {
                            var _;
                            if (c.isBufferGeometry) {
                                var w, M, E, T, S, A = c.index, L = c.attributes.position, R = c.attributes.uv;
                                if (null !== A)
                                    for (T = 0,
                                    S = A.count; T < S; T += 3)
                                        w = A.getX(T),
                                        M = A.getX(T + 1),
                                        E = A.getX(T + 2),
                                        (_ = r(this, n, a, L, R, w, M, E)) && (_.faceIndex = Math.floor(T / 3),
                                        l.push(_));
                                else
                                    for (T = 0,
                                    S = L.count; T < S; T += 3)
                                        (_ = r(this, n, a, L, R, w = T, M = T + 1, E = T + 2)) && (_.index = w,
                                        l.push(_))
                            } else if (c.isGeometry) {
                                var P, C, I, O, N = Array.isArray(y), D = c.vertices, U = c.faces, k = c.faceVertexUvs[0];
                                k.length > 0 && (O = k);
                                for (var B = 0, F = U.length; B < F; B++) {
                                    var z = U[B]
                                      , j = N ? y[z.materialIndex] : y;
                                    if (void 0 !== j) {
                                        if (P = D[z.a],
                                        C = D[z.b],
                                        I = D[z.c],
                                        !0 === j.morphTargets) {
                                            var H = c.morphTargets
                                              , G = this.morphTargetInfluences;
                                            s.set(0, 0, 0),
                                            u.set(0, 0, 0),
                                            h.set(0, 0, 0);
                                            for (var V = 0, W = H.length; V < W; V++) {
                                                var X = G[V];
                                                if (0 !== X) {
                                                    var q = H[V].vertices;
                                                    s.addScaledVector(d.subVectors(q[z.a], P), X),
                                                    u.addScaledVector(p.subVectors(q[z.b], C), X),
                                                    h.addScaledVector(f.subVectors(q[z.c], I), X)
                                                }
                                            }
                                            s.add(P),
                                            u.add(C),
                                            h.add(I),
                                            P = s,
                                            C = u,
                                            I = h
                                        }
                                        if (_ = e(this, j, n, a, P, C, I, x)) {
                                            if (O && O[B]) {
                                                var Y = O[B];
                                                m.copy(Y[0]),
                                                v.copy(Y[1]),
                                                g.copy(Y[2]),
                                                _.uv = t(x, P, C, I, m, v, g)
                                            }
                                            _.face = z,
                                            _.faceIndex = B,
                                            l.push(_)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            });
            var os = 0;
            ge.prototype = Object.assign(Object.create(pt.prototype), {
                constructor: ge,
                isArrayCamera: !0
            }),
            Me.prototype.isFogExp2 = !0,
            Me.prototype.clone = function() {
                return new Me(this.color.getHex(),this.density)
            }
            ,
            Me.prototype.toJSON = function(t) {
                return {
                    type: "FogExp2",
                    color: this.color.getHex(),
                    density: this.density
                }
            }
            ,
            Ee.prototype.isFog = !0,
            Ee.prototype.clone = function() {
                return new Ee(this.color.getHex(),this.near,this.far)
            }
            ,
            Ee.prototype.toJSON = function(t) {
                return {
                    type: "Fog",
                    color: this.color.getHex(),
                    near: this.near,
                    far: this.far
                }
            }
            ,
            Te.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Te,
                copy: function(t, e) {
                    return ut.prototype.copy.call(this, t, e),
                    null !== t.background && (this.background = t.background.clone()),
                    null !== t.fog && (this.fog = t.fog.clone()),
                    null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()),
                    this.autoUpdate = t.autoUpdate,
                    this.matrixAutoUpdate = t.matrixAutoUpdate,
                    this
                },
                toJSON: function(t) {
                    var e = ut.prototype.toJSON.call(this, t);
                    return null !== this.background && (e.object.background = this.background.toJSON(t)),
                    null !== this.fog && (e.object.fog = this.fog.toJSON()),
                    e
                }
            }),
            Se.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Se,
                isLensFlare: !0,
                copy: function(t) {
                    ut.prototype.copy.call(this, t),
                    this.positionScreen.copy(t.positionScreen),
                    this.customUpdateCallback = t.customUpdateCallback;
                    for (var e = 0, n = t.lensFlares.length; e < n; e++)
                        this.lensFlares.push(t.lensFlares[e]);
                    return this
                },
                add: function(t, e, n, r, i, a) {
                    void 0 === e && (e = -1),
                    void 0 === n && (n = 0),
                    void 0 === a && (a = 1),
                    void 0 === i && (i = new X(16777215)),
                    void 0 === r && (r = ta),
                    n = Math.min(n, Math.max(0, n)),
                    this.lensFlares.push({
                        texture: t,
                        size: e,
                        distance: n,
                        x: 0,
                        y: 0,
                        z: 0,
                        scale: 1,
                        rotation: 0,
                        opacity: a,
                        color: i,
                        blending: r
                    })
                },
                updateLensFlares: function() {
                    var t, e, n = this.lensFlares.length, r = 2 * -this.positionScreen.x, i = 2 * -this.positionScreen.y;
                    for (t = 0; t < n; t++)
                        (e = this.lensFlares[t]).x = this.positionScreen.x + r * e.distance,
                        e.y = this.positionScreen.y + i * e.distance,
                        e.wantedRotation = e.x * Math.PI * .25,
                        e.rotation += .25 * (e.wantedRotation - e.rotation)
                }
            }),
            Ae.prototype = Object.create(J.prototype),
            Ae.prototype.constructor = Ae,
            Ae.prototype.isSpriteMaterial = !0,
            Ae.prototype.copy = function(t) {
                return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.map = t.map,
                this.rotation = t.rotation,
                this
            }
            ,
            Le.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Le,
                isSprite: !0,
                raycast: function() {
                    var t = new l
                      , e = new l
                      , n = new l;
                    return function(r, i) {
                        e.setFromMatrixPosition(this.matrixWorld),
                        r.ray.closestPointToPoint(e, t),
                        n.setFromMatrixScale(this.matrixWorld);
                        var a = n.x * n.y / 4;
                        if (!(e.distanceToSquared(t) > a)) {
                            var o = r.ray.origin.distanceTo(t);
                            o < r.near || o > r.far || i.push({
                                distance: o,
                                point: t.clone(),
                                face: null,
                                object: this
                            })
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.material).copy(this)
                }
            }),
            Re.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Re,
                copy: function(t) {
                    ut.prototype.copy.call(this, t, !1);
                    for (var e = t.levels, n = 0, r = e.length; n < r; n++) {
                        var i = e[n];
                        this.addLevel(i.object.clone(), i.distance)
                    }
                    return this
                },
                addLevel: function(t, e) {
                    void 0 === e && (e = 0),
                    e = Math.abs(e);
                    for (var n = this.levels, r = 0; r < n.length && !(e < n[r].distance); r++)
                        ;
                    n.splice(r, 0, {
                        distance: e,
                        object: t
                    }),
                    this.add(t)
                },
                getObjectForDistance: function(t) {
                    for (var e = this.levels, n = 1, r = e.length; n < r && !(t < e[n].distance); n++)
                        ;
                    return e[n - 1].object
                },
                raycast: function() {
                    var t = new l;
                    return function(e, n) {
                        t.setFromMatrixPosition(this.matrixWorld);
                        var r = e.ray.origin.distanceTo(t);
                        this.getObjectForDistance(r).raycast(e, n)
                    }
                }(),
                update: function() {
                    var t = new l
                      , e = new l;
                    return function(n) {
                        var r = this.levels;
                        if (r.length > 1) {
                            t.setFromMatrixPosition(n.matrixWorld),
                            e.setFromMatrixPosition(this.matrixWorld);
                            var i = t.distanceTo(e);
                            r[0].object.visible = !0;
                            for (var a = 1, o = r.length; a < o && i >= r[a].distance; a++)
                                r[a - 1].object.visible = !1,
                                r[a].object.visible = !0;
                            for (; a < o; a++)
                                r[a].object.visible = !1
                        }
                    }
                }(),
                toJSON: function(t) {
                    var e = ut.prototype.toJSON.call(this, t);
                    e.object.levels = [];
                    for (var n = this.levels, r = 0, i = n.length; r < i; r++) {
                        var a = n[r];
                        e.object.levels.push({
                            object: a.object.uuid,
                            distance: a.distance
                        })
                    }
                    return e
                }
            }),
            Object.assign(Pe.prototype, {
                calculateInverses: function() {
                    this.boneInverses = [];
                    for (var t = 0, e = this.bones.length; t < e; t++) {
                        var n = new c;
                        this.bones[t] && n.getInverse(this.bones[t].matrixWorld),
                        this.boneInverses.push(n)
                    }
                },
                pose: function() {
                    var t, e, n;
                    for (e = 0,
                    n = this.bones.length; e < n; e++)
                        (t = this.bones[e]) && t.matrixWorld.getInverse(this.boneInverses[e]);
                    for (e = 0,
                    n = this.bones.length; e < n; e++)
                        (t = this.bones[e]) && (t.parent && t.parent.isBone ? (t.matrix.getInverse(t.parent.matrixWorld),
                        t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld),
                        t.matrix.decompose(t.position, t.quaternion, t.scale))
                },
                update: function() {
                    var t = new c
                      , e = new c;
                    return function() {
                        for (var n = this.bones, r = this.boneInverses, i = this.boneMatrices, a = this.boneTexture, o = 0, s = n.length; o < s; o++) {
                            var l = n[o] ? n[o].matrixWorld : e;
                            t.multiplyMatrices(l, r[o]),
                            t.toArray(i, 16 * o)
                        }
                        void 0 !== a && (a.needsUpdate = !0)
                    }
                }(),
                clone: function() {
                    return new Pe(this.bones,this.boneInverses)
                }
            }),
            Ce.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Ce,
                isBone: !0
            }),
            Ie.prototype = Object.assign(Object.create(Bt.prototype), {
                constructor: Ie,
                isSkinnedMesh: !0,
                initBones: function() {
                    var t, e, n, r, i = [];
                    if (this.geometry && void 0 !== this.geometry.bones) {
                        for (n = 0,
                        r = this.geometry.bones.length; n < r; n++)
                            e = this.geometry.bones[n],
                            t = new Ce,
                            i.push(t),
                            t.name = e.name,
                            t.position.fromArray(e.pos),
                            t.quaternion.fromArray(e.rotq),
                            void 0 !== e.scl && t.scale.fromArray(e.scl);
                        for (n = 0,
                        r = this.geometry.bones.length; n < r; n++)
                            -1 !== (e = this.geometry.bones[n]).parent && null !== e.parent && void 0 !== i[e.parent] ? i[e.parent].add(i[n]) : this.add(i[n])
                    }
                    return this.updateMatrixWorld(!0),
                    i
                },
                bind: function(t, e) {
                    this.skeleton = t,
                    void 0 === e && (this.updateMatrixWorld(!0),
                    this.skeleton.calculateInverses(),
                    e = this.matrixWorld),
                    this.bindMatrix.copy(e),
                    this.bindMatrixInverse.getInverse(e)
                },
                pose: function() {
                    this.skeleton.pose()
                },
                normalizeSkinWeights: function() {
                    var t, e;
                    if (this.geometry && this.geometry.isGeometry)
                        for (e = 0; e < this.geometry.skinWeights.length; e++) {
                            var n = this.geometry.skinWeights[e];
                            (t = 1 / n.lengthManhattan()) !== 1 / 0 ? n.multiplyScalar(t) : n.set(1, 0, 0, 0)
                        }
                    else if (this.geometry && this.geometry.isBufferGeometry) {
                        var r = new i
                          , a = this.geometry.attributes.skinWeight;
                        for (e = 0; e < a.count; e++)
                            r.x = a.getX(e),
                            r.y = a.getY(e),
                            r.z = a.getZ(e),
                            r.w = a.getW(e),
                            (t = 1 / r.lengthManhattan()) !== 1 / 0 ? r.multiplyScalar(t) : r.set(1, 0, 0, 0),
                            a.setXYZW(e, r.x, r.y, r.z, r.w)
                    }
                },
                updateMatrixWorld: function(t) {
                    Bt.prototype.updateMatrixWorld.call(this, t),
                    "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
                },
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            }),
            Oe.prototype = Object.create(J.prototype),
            Oe.prototype.constructor = Oe,
            Oe.prototype.isLineBasicMaterial = !0,
            Oe.prototype.copy = function(t) {
                return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.linewidth = t.linewidth,
                this.linecap = t.linecap,
                this.linejoin = t.linejoin,
                this
            }
            ,
            Ne.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Ne,
                isLine: !0,
                raycast: function() {
                    var t = new c
                      , e = new Dt
                      , n = new nt;
                    return function(r, i) {
                        var a = r.linePrecision
                          , o = a * a
                          , s = this.geometry
                          , c = this.matrixWorld;
                        if (null === s.boundingSphere && s.computeBoundingSphere(),
                        n.copy(s.boundingSphere),
                        n.applyMatrix4(c),
                        !1 !== r.ray.intersectsSphere(n)) {
                            t.getInverse(c),
                            e.copy(r.ray).applyMatrix4(t);
                            var u = new l
                              , h = new l
                              , d = new l
                              , p = new l
                              , f = this && this.isLineSegments ? 2 : 1;
                            if (s.isBufferGeometry) {
                                var m = s.index
                                  , v = s.attributes.position.array;
                                if (null !== m)
                                    for (var g = m.array, y = 0, x = g.length - 1; y < x; y += f) {
                                        var b = g[y]
                                          , _ = g[y + 1];
                                        u.fromArray(v, 3 * b),
                                        h.fromArray(v, 3 * _),
                                        (E = e.distanceSqToSegment(u, h, p, d)) > o || (p.applyMatrix4(this.matrixWorld),
                                        (T = r.ray.origin.distanceTo(p)) < r.near || T > r.far || i.push({
                                            distance: T,
                                            point: d.clone().applyMatrix4(this.matrixWorld),
                                            index: y,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        }))
                                    }
                                else
                                    for (var y = 0, x = v.length / 3 - 1; y < x; y += f)
                                        u.fromArray(v, 3 * y),
                                        h.fromArray(v, 3 * y + 3),
                                        (E = e.distanceSqToSegment(u, h, p, d)) > o || (p.applyMatrix4(this.matrixWorld),
                                        (T = r.ray.origin.distanceTo(p)) < r.near || T > r.far || i.push({
                                            distance: T,
                                            point: d.clone().applyMatrix4(this.matrixWorld),
                                            index: y,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        }))
                            } else if (s.isGeometry)
                                for (var w = s.vertices, M = w.length, y = 0; y < M - 1; y += f) {
                                    var E = e.distanceSqToSegment(w[y], w[y + 1], p, d);
                                    if (!(E > o)) {
                                        p.applyMatrix4(this.matrixWorld);
                                        var T = r.ray.origin.distanceTo(p);
                                        T < r.near || T > r.far || i.push({
                                            distance: T,
                                            point: d.clone().applyMatrix4(this.matrixWorld),
                                            index: y,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        })
                                    }
                                }
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            }),
            De.prototype = Object.assign(Object.create(Ne.prototype), {
                constructor: De,
                isLineSegments: !0
            }),
            Ue.prototype = Object.assign(Object.create(Ne.prototype), {
                constructor: Ue,
                isLineLoop: !0
            }),
            ke.prototype = Object.create(J.prototype),
            ke.prototype.constructor = ke,
            ke.prototype.isPointsMaterial = !0,
            ke.prototype.copy = function(t) {
                return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.map = t.map,
                this.size = t.size,
                this.sizeAttenuation = t.sizeAttenuation,
                this
            }
            ,
            Be.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Be,
                isPoints: !0,
                raycast: function() {
                    var t = new c
                      , e = new Dt
                      , n = new nt;
                    return function(r, i) {
                        function a(t, n) {
                            var a = e.distanceSqToPoint(t);
                            if (a < d) {
                                var s = e.closestPointToPoint(t);
                                s.applyMatrix4(c);
                                var l = r.ray.origin.distanceTo(s);
                                if (l < r.near || l > r.far)
                                    return;
                                i.push({
                                    distance: l,
                                    distanceToRay: Math.sqrt(a),
                                    point: s.clone(),
                                    index: n,
                                    face: null,
                                    object: o
                                })
                            }
                        }
                        var o = this
                          , s = this.geometry
                          , c = this.matrixWorld
                          , u = r.params.Points.threshold;
                        if (null === s.boundingSphere && s.computeBoundingSphere(),
                        n.copy(s.boundingSphere),
                        n.applyMatrix4(c),
                        n.radius += u,
                        !1 !== r.ray.intersectsSphere(n)) {
                            t.getInverse(c),
                            e.copy(r.ray).applyMatrix4(t);
                            var h = u / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                              , d = h * h
                              , p = new l;
                            if (s.isBufferGeometry) {
                                var f = s.index
                                  , m = s.attributes.position.array;
                                if (null !== f)
                                    for (var v = f.array, g = 0, y = v.length; g < y; g++) {
                                        var x = v[g];
                                        p.fromArray(m, 3 * x),
                                        a(p, x)
                                    }
                                else
                                    for (var g = 0, b = m.length / 3; g < b; g++)
                                        p.fromArray(m, 3 * g),
                                        a(p, g)
                            } else
                                for (var _ = s.vertices, g = 0, b = _.length; g < b; g++)
                                    a(_[g], g)
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            }),
            Fe.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Fe
            }),
            (ze.prototype = Object.create(r.prototype)).constructor = ze,
            (je.prototype = Object.create(r.prototype)).constructor = je,
            je.prototype.isCompressedTexture = !0,
            (He.prototype = Object.create(r.prototype)).constructor = He,
            He.prototype.isDepthTexture = !0,
            Ge.prototype = Object.create(Rt.prototype),
            Ge.prototype.constructor = Ge,
            (Ve.prototype = Object.create(vt.prototype)).constructor = Ve,
            (We.prototype = Object.create(Rt.prototype)).constructor = We,
            (Xe.prototype = Object.create(vt.prototype)).constructor = Xe,
            qe.prototype = Object.create(Rt.prototype),
            qe.prototype.constructor = qe,
            (Ye.prototype = Object.create(vt.prototype)).constructor = Ye,
            ($e.prototype = Object.create(qe.prototype)).constructor = $e,
            (Ze.prototype = Object.create(vt.prototype)).constructor = Ze,
            Je.prototype = Object.create(qe.prototype),
            Je.prototype.constructor = Je,
            (Ke.prototype = Object.create(vt.prototype)).constructor = Ke,
            (Qe.prototype = Object.create(qe.prototype)).constructor = Qe,
            (tn.prototype = Object.create(vt.prototype)).constructor = tn,
            (en.prototype = Object.create(qe.prototype)).constructor = en,
            (nn.prototype = Object.create(vt.prototype)).constructor = nn,
            (rn.prototype = Object.create(Rt.prototype)).constructor = rn,
            (an.prototype = Object.create(vt.prototype)).constructor = an,
            (on.prototype = Object.create(Rt.prototype)).constructor = on,
            (sn.prototype = Object.create(vt.prototype)).constructor = sn,
            (ln.prototype = Object.create(Rt.prototype)).constructor = ln;
            var ss = {
                area: function(t) {
                    for (var e = t.length, n = 0, r = e - 1, i = 0; i < e; r = i++)
                        n += t[r].x * t[i].y - t[i].x * t[r].y;
                    return .5 * n
                },
                triangulate: function() {
                    function t(t, e, n, r, i, a) {
                        var o, s, l, c, u, h, d, p, f;
                        if (s = t[a[e]].x,
                        l = t[a[e]].y,
                        c = t[a[n]].x,
                        u = t[a[n]].y,
                        h = t[a[r]].x,
                        d = t[a[r]].y,
                        (c - s) * (d - l) - (u - l) * (h - s) <= 0)
                            return !1;
                        var m, v, g, y, x, b, _, w, M, E, T, S, A, L, R;
                        for (m = h - c,
                        v = d - u,
                        g = s - h,
                        y = l - d,
                        x = c - s,
                        b = u - l,
                        o = 0; o < i; o++)
                            if (p = t[a[o]].x,
                            f = t[a[o]].y,
                            !(p === s && f === l || p === c && f === u || p === h && f === d) && (_ = p - s,
                            w = f - l,
                            M = p - c,
                            E = f - u,
                            T = p - h,
                            S = f - d,
                            R = m * E - v * M,
                            A = x * w - b * _,
                            L = g * S - y * T,
                            R >= -Number.EPSILON && L >= -Number.EPSILON && A >= -Number.EPSILON))
                                return !1;
                        return !0
                    }
                    return function(e, n) {
                        var r = e.length;
                        if (r < 3)
                            return null;
                        var i, a, o, s = [], l = [], c = [];
                        if (ss.area(e) > 0)
                            for (a = 0; a < r; a++)
                                l[a] = a;
                        else
                            for (a = 0; a < r; a++)
                                l[a] = r - 1 - a;
                        var u = r
                          , h = 2 * u;
                        for (a = u - 1; u > 2; ) {
                            if (h-- <= 0)
                                return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),
                                n ? c : s;
                            if (i = a,
                            u <= i && (i = 0),
                            a = i + 1,
                            u <= a && (a = 0),
                            o = a + 1,
                            u <= o && (o = 0),
                            t(e, i, a, o, u, l)) {
                                var d, p, f, m, v;
                                for (d = l[i],
                                p = l[a],
                                f = l[o],
                                s.push([e[d], e[p], e[f]]),
                                c.push([l[i], l[a], l[o]]),
                                m = a,
                                v = a + 1; v < u; m++,
                                v++)
                                    l[m] = l[v];
                                h = 2 * --u
                            }
                        }
                        return n ? c : s
                    }
                }(),
                triangulateShape: function(t, e) {
                    function n(t) {
                        var e = t.length;
                        e > 2 && t[e - 1].equals(t[0]) && t.pop()
                    }
                    function r(t, e, n) {
                        return t.x !== e.x ? t.x < e.x ? t.x <= n.x && n.x <= e.x : e.x <= n.x && n.x <= t.x : t.y < e.y ? t.y <= n.y && n.y <= e.y : e.y <= n.y && n.y <= t.y
                    }
                    function i(t, e, n, i, a) {
                        var o = e.x - t.x
                          , s = e.y - t.y
                          , l = i.x - n.x
                          , c = i.y - n.y
                          , u = t.x - n.x
                          , h = t.y - n.y
                          , d = s * l - o * c
                          , p = s * u - o * h;
                        if (Math.abs(d) > Number.EPSILON) {
                            var f;
                            if (d > 0) {
                                if (p < 0 || p > d)
                                    return [];
                                if ((f = c * u - l * h) < 0 || f > d)
                                    return []
                            } else {
                                if (p > 0 || p < d)
                                    return [];
                                if ((f = c * u - l * h) > 0 || f < d)
                                    return []
                            }
                            if (0 === f)
                                return !a || 0 !== p && p !== d ? [t] : [];
                            if (f === d)
                                return !a || 0 !== p && p !== d ? [e] : [];
                            if (0 === p)
                                return [n];
                            if (p === d)
                                return [i];
                            var m = f / d;
                            return [{
                                x: t.x + m * o,
                                y: t.y + m * s
                            }]
                        }
                        if (0 !== p || c * u != l * h)
                            return [];
                        var v = 0 === o && 0 === s
                          , g = 0 === l && 0 === c;
                        if (v && g)
                            return t.x !== n.x || t.y !== n.y ? [] : [t];
                        if (v)
                            return r(n, i, t) ? [t] : [];
                        if (g)
                            return r(t, e, n) ? [n] : [];
                        var y, x, b, _, w, M, E, T;
                        return 0 !== o ? (t.x < e.x ? (y = t,
                        b = t.x,
                        x = e,
                        _ = e.x) : (y = e,
                        b = e.x,
                        x = t,
                        _ = t.x),
                        n.x < i.x ? (w = n,
                        E = n.x,
                        M = i,
                        T = i.x) : (w = i,
                        E = i.x,
                        M = n,
                        T = n.x)) : (t.y < e.y ? (y = t,
                        b = t.y,
                        x = e,
                        _ = e.y) : (y = e,
                        b = e.y,
                        x = t,
                        _ = t.y),
                        n.y < i.y ? (w = n,
                        E = n.y,
                        M = i,
                        T = i.y) : (w = i,
                        E = i.y,
                        M = n,
                        T = n.y)),
                        b <= E ? _ < E ? [] : _ === E ? a ? [] : [w] : _ <= T ? [w, x] : [w, M] : b > T ? [] : b === T ? a ? [] : [y] : _ <= T ? [y, x] : [y, M]
                    }
                    function a(t, e, n, r) {
                        var i = e.x - t.x
                          , a = e.y - t.y
                          , o = n.x - t.x
                          , s = n.y - t.y
                          , l = r.x - t.x
                          , c = r.y - t.y
                          , u = i * s - a * o
                          , h = i * c - a * l;
                        if (Math.abs(u) > Number.EPSILON) {
                            var d = l * s - c * o;
                            return u > 0 ? h >= 0 && d >= 0 : h >= 0 || d >= 0
                        }
                        return h > 0
                    }
                    n(t),
                    e.forEach(n);
                    for (var o, s, l, c, u, h, d = {}, p = t.concat(), f = 0, m = e.length; f < m; f++)
                        Array.prototype.push.apply(p, e[f]);
                    for (o = 0,
                    s = p.length; o < s; o++)
                        void 0 !== d[u = p[o].x + ":" + p[o].y] && console.warn("THREE.ShapeUtils: Duplicate point", u, o),
                        d[u] = o;
                    var v = function(t, e) {
                        for (var n, r, o, s, l, c, u, h, d, p, f, m = t.concat(), v = [], g = [], y = 0, x = e.length; y < x; y++)
                            v.push(y);
                        for (var b = 0, _ = 2 * v.length; v.length > 0; ) {
                            if (--_ < 0) {
                                console.log('THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!');
                                break
                            }
                            for (o = b; o < m.length; o++) {
                                for (s = m[o],
                                r = -1,
                                y = 0; y < v.length; y++)
                                    if (c = v[y],
                                    u = s.x + ":" + s.y + ":" + c,
                                    void 0 === g[u]) {
                                        n = e[c];
                                        for (var w = 0; w < n.length; w++)
                                            if (l = n[w],
                                            function(t, e) {
                                                var r = m.length - 1
                                                  , i = t - 1;
                                                i < 0 && (i = r);
                                                var o = t + 1;
                                                o > r && (o = 0);
                                                var s = a(m[t], m[i], m[o], n[e]);
                                                if (!s)
                                                    return !1;
                                                var l = n.length - 1
                                                  , c = e - 1;
                                                c < 0 && (c = l);
                                                var u = e + 1;
                                                return u > l && (u = 0),
                                                !!(s = a(n[e], n[c], n[u], m[t]))
                                            }(o, w) && !function(t, e) {
                                                var n, r;
                                                for (n = 0; n < m.length; n++)
                                                    if (r = n + 1,
                                                    r %= m.length,
                                                    i(t, e, m[n], m[r], !0).length > 0)
                                                        return !0;
                                                return !1
                                            }(s, l) && !function(t, n) {
                                                var r, a, o, s;
                                                for (r = 0; r < v.length; r++)
                                                    for (a = e[v[r]],
                                                    o = 0; o < a.length; o++)
                                                        if (s = o + 1,
                                                        s %= a.length,
                                                        i(t, n, a[o], a[s], !0).length > 0)
                                                            return !0;
                                                return !1
                                            }(s, l)) {
                                                r = w,
                                                v.splice(y, 1),
                                                h = m.slice(0, o + 1),
                                                d = m.slice(o),
                                                p = n.slice(r),
                                                f = n.slice(0, r + 1),
                                                m = h.concat(p).concat(f).concat(d),
                                                b = o;
                                                break
                                            }
                                        if (r >= 0)
                                            break;
                                        g[u] = !0
                                    }
                                if (r >= 0)
                                    break
                            }
                        }
                        return m
                    }(t, e)
                      , g = ss.triangulate(v, !1);
                    for (o = 0,
                    s = g.length; o < s; o++)
                        for (c = g[o],
                        l = 0; l < 3; l++)
                            void 0 !== (h = d[u = c[l].x + ":" + c[l].y]) && (c[l] = h);
                    return g.concat()
                },
                isClockWise: function(t) {
                    return ss.area(t) < 0
                }
            };
            (cn.prototype = Object.create(vt.prototype)).constructor = cn,
            un.prototype = Object.create(Rt.prototype),
            un.prototype.constructor = un,
            un.prototype.getArrays = function() {
                var t = this.getAttribute("position")
                  , e = t ? Array.prototype.slice.call(t.array) : []
                  , n = this.getAttribute("uv")
                  , r = n ? Array.prototype.slice.call(n.array) : []
                  , i = this.index;
                return {
                    position: e,
                    uv: r,
                    index: i ? Array.prototype.slice.call(i.array) : []
                }
            }
            ,
            un.prototype.addShapeList = function(t, e) {
                var n = t.length;
                e.arrays = this.getArrays();
                for (var r = 0; r < n; r++) {
                    var i = t[r];
                    this.addShape(i, e)
                }
                this.setIndex(e.arrays.index),
                this.addAttribute("position", new Tt(e.arrays.position,3)),
                this.addAttribute("uv", new Tt(e.arrays.uv,2))
            }
            ,
            un.prototype.addShape = function(t, e) {
                function r(t, e, n) {
                    return e || console.error("THREE.ExtrudeGeometry: vec does not exist"),
                    e.clone().multiplyScalar(n).add(t)
                }
                function i(t, e, r) {
                    var i, a, o, s = t.x - e.x, l = t.y - e.y, c = r.x - t.x, u = r.y - t.y, h = s * s + l * l, d = s * u - l * c;
                    if (Math.abs(d) > Number.EPSILON) {
                        var p = Math.sqrt(h)
                          , f = Math.sqrt(c * c + u * u)
                          , m = e.x - l / p
                          , v = e.y + s / p
                          , g = ((r.x - u / f - m) * u - (r.y + c / f - v) * c) / (s * u - l * c)
                          , y = (i = m + s * g - t.x) * i + (a = v + l * g - t.y) * a;
                        if (y <= 2)
                            return new n(i,a);
                        o = Math.sqrt(y / 2)
                    } else {
                        var x = !1;
                        s > Number.EPSILON ? c > Number.EPSILON && (x = !0) : s < -Number.EPSILON ? c < -Number.EPSILON && (x = !0) : Math.sign(l) === Math.sign(u) && (x = !0),
                        x ? (i = -l,
                        a = s,
                        o = Math.sqrt(h)) : (i = s,
                        a = l,
                        o = Math.sqrt(h / 2))
                    }
                    return new n(i / o,a / o)
                }
                function a(t, e) {
                    var n, r;
                    for (Z = t.length; --Z >= 0; ) {
                        n = Z,
                        (r = Z - 1) < 0 && (r = t.length - 1);
                        var i = 0
                          , a = L + 2 * T;
                        for (i = 0; i < a; i++) {
                            var o = q * i
                              , s = q * (i + 1);
                            c(e + n + o, e + r + o, e + r + s, e + n + s, t, i, a, n, r)
                        }
                    }
                }
                function o(t, e, n) {
                    _.push(t),
                    _.push(e),
                    _.push(n)
                }
                function s(t, e, n) {
                    u(t),
                    u(e),
                    u(n);
                    var r = y.length / 3
                      , i = C.generateTopUV(D, y, r - 3, r - 2, r - 1);
                    h(i[0]),
                    h(i[1]),
                    h(i[2])
                }
                function c(t, e, n, r, i, a, o, s, l) {
                    u(t),
                    u(e),
                    u(r),
                    u(e),
                    u(n),
                    u(r);
                    var c = y.length / 3
                      , d = C.generateSideWallUV(D, y, c - 6, c - 3, c - 2, c - 1);
                    h(d[0]),
                    h(d[1]),
                    h(d[3]),
                    h(d[1]),
                    h(d[2]),
                    h(d[3])
                }
                function u(t) {
                    x.push(y.length / 3),
                    y.push(_[3 * t + 0]),
                    y.push(_[3 * t + 1]),
                    y.push(_[3 * t + 2])
                }
                function h(t) {
                    b.push(t.x),
                    b.push(t.y)
                }
                var d, p, f, m, v, g = e.arrays ? e.arrays : this.getArrays(), y = g.position, x = g.index, b = g.uv, _ = [], w = void 0 !== e.amount ? e.amount : 100, M = void 0 !== e.bevelThickness ? e.bevelThickness : 6, E = void 0 !== e.bevelSize ? e.bevelSize : M - 2, T = void 0 !== e.bevelSegments ? e.bevelSegments : 3, S = void 0 === e.bevelEnabled || e.bevelEnabled, A = void 0 !== e.curveSegments ? e.curveSegments : 12, L = void 0 !== e.steps ? e.steps : 1, R = e.extrudePath, P = !1, C = void 0 !== e.UVGenerator ? e.UVGenerator : cn.WorldUVGenerator;
                R && (d = R.getSpacedPoints(L),
                P = !0,
                S = !1,
                p = void 0 !== e.frames ? e.frames : R.computeFrenetFrames(L, !1),
                f = new l,
                m = new l,
                v = new l),
                S || (T = 0,
                M = 0,
                E = 0);
                var I, O, N, D = this, U = t.extractPoints(A), k = U.shape, B = U.holes;
                if (!ss.isClockWise(k))
                    for (k = k.reverse(),
                    O = 0,
                    N = B.length; O < N; O++)
                        I = B[O],
                        ss.isClockWise(I) && (B[O] = I.reverse());
                var F = ss.triangulateShape(k, B)
                  , z = k;
                for (O = 0,
                N = B.length; O < N; O++)
                    I = B[O],
                    k = k.concat(I);
                for (var j, H, G, V, W, X, q = k.length, Y = F.length, $ = [], Z = 0, J = z.length, K = J - 1, Q = Z + 1; Z < J; Z++,
                K++,
                Q++)
                    K === J && (K = 0),
                    Q === J && (Q = 0),
                    $[Z] = i(z[Z], z[K], z[Q]);
                var tt, et = [], nt = $.concat();
                for (O = 0,
                N = B.length; O < N; O++) {
                    for (I = B[O],
                    tt = [],
                    Z = 0,
                    K = (J = I.length) - 1,
                    Q = Z + 1; Z < J; Z++,
                    K++,
                    Q++)
                        K === J && (K = 0),
                        Q === J && (Q = 0),
                        tt[Z] = i(I[Z], I[K], I[Q]);
                    et.push(tt),
                    nt = nt.concat(tt)
                }
                for (j = 0; j < T; j++) {
                    for (G = j / T,
                    V = M * Math.cos(G * Math.PI / 2),
                    H = E * Math.sin(G * Math.PI / 2),
                    Z = 0,
                    J = z.length; Z < J; Z++)
                        o((W = r(z[Z], $[Z], H)).x, W.y, -V);
                    for (O = 0,
                    N = B.length; O < N; O++)
                        for (I = B[O],
                        tt = et[O],
                        Z = 0,
                        J = I.length; Z < J; Z++)
                            o((W = r(I[Z], tt[Z], H)).x, W.y, -V)
                }
                for (H = E,
                Z = 0; Z < q; Z++)
                    W = S ? r(k[Z], nt[Z], H) : k[Z],
                    P ? (m.copy(p.normals[0]).multiplyScalar(W.x),
                    f.copy(p.binormals[0]).multiplyScalar(W.y),
                    v.copy(d[0]).add(m).add(f),
                    o(v.x, v.y, v.z)) : o(W.x, W.y, 0);
                var rt;
                for (rt = 1; rt <= L; rt++)
                    for (Z = 0; Z < q; Z++)
                        W = S ? r(k[Z], nt[Z], H) : k[Z],
                        P ? (m.copy(p.normals[rt]).multiplyScalar(W.x),
                        f.copy(p.binormals[rt]).multiplyScalar(W.y),
                        v.copy(d[rt]).add(m).add(f),
                        o(v.x, v.y, v.z)) : o(W.x, W.y, w / L * rt);
                for (j = T - 1; j >= 0; j--) {
                    for (G = j / T,
                    V = M * Math.cos(G * Math.PI / 2),
                    H = E * Math.sin(G * Math.PI / 2),
                    Z = 0,
                    J = z.length; Z < J; Z++)
                        o((W = r(z[Z], $[Z], H)).x, W.y, w + V);
                    for (O = 0,
                    N = B.length; O < N; O++)
                        for (I = B[O],
                        tt = et[O],
                        Z = 0,
                        J = I.length; Z < J; Z++)
                            W = r(I[Z], tt[Z], H),
                            P ? o(W.x, W.y + d[L - 1].y, d[L - 1].x + V) : o(W.x, W.y, w + V)
                }
                !function() {
                    var t = y.length / 3;
                    if (S) {
                        var n = 0
                          , r = q * n;
                        for (Z = 0; Z < Y; Z++)
                            s((X = F[Z])[2] + r, X[1] + r, X[0] + r);
                        for (r = q * (n = L + 2 * T),
                        Z = 0; Z < Y; Z++)
                            s((X = F[Z])[0] + r, X[1] + r, X[2] + r)
                    } else {
                        for (Z = 0; Z < Y; Z++)
                            s((X = F[Z])[2], X[1], X[0]);
                        for (Z = 0; Z < Y; Z++)
                            s((X = F[Z])[0] + q * L, X[1] + q * L, X[2] + q * L)
                    }
                    D.addGroup(t, y.length / 3 - t, void 0 !== e.material ? e.material : 0)
                }(),
                function() {
                    var t = y.length / 3
                      , n = 0;
                    for (a(z, n),
                    n += z.length,
                    O = 0,
                    N = B.length; O < N; O++)
                        a(I = B[O], n),
                        n += I.length;
                    D.addGroup(t, y.length / 3 - t, void 0 !== e.extrudeMaterial ? e.extrudeMaterial : 1)
                }(),
                e.arrays || (this.setIndex(x),
                this.addAttribute("position", new Tt(y,3)),
                this.addAttribute("uv", new Tt(e.arrays.uv,2)))
            }
            ,
            cn.WorldUVGenerator = {
                generateTopUV: function(t, e, r, i, a) {
                    var o = e[3 * r]
                      , s = e[3 * r + 1]
                      , l = e[3 * i]
                      , c = e[3 * i + 1]
                      , u = e[3 * a]
                      , h = e[3 * a + 1];
                    return [new n(o,s), new n(l,c), new n(u,h)]
                },
                generateSideWallUV: function(t, e, r, i, a, o) {
                    var s = e[3 * r]
                      , l = e[3 * r + 1]
                      , c = e[3 * r + 2]
                      , u = e[3 * i]
                      , h = e[3 * i + 1]
                      , d = e[3 * i + 2]
                      , p = e[3 * a]
                      , f = e[3 * a + 1]
                      , m = e[3 * a + 2]
                      , v = e[3 * o]
                      , g = e[3 * o + 1]
                      , y = e[3 * o + 2];
                    return Math.abs(l - h) < .01 ? [new n(s,1 - c), new n(u,1 - d), new n(p,1 - m), new n(v,1 - y)] : [new n(l,1 - c), new n(h,1 - d), new n(f,1 - m), new n(g,1 - y)]
                }
            },
            (hn.prototype = Object.create(vt.prototype)).constructor = hn,
            (dn.prototype = Object.create(un.prototype)).constructor = dn,
            (pn.prototype = Object.create(vt.prototype)).constructor = pn,
            fn.prototype = Object.create(Rt.prototype),
            fn.prototype.constructor = fn,
            (mn.prototype = Object.create(vt.prototype)).constructor = mn,
            (vn.prototype = Object.create(Rt.prototype)).constructor = vn,
            (gn.prototype = Object.create(vt.prototype)).constructor = gn,
            (yn.prototype = Object.create(Rt.prototype)).constructor = yn,
            (xn.prototype = Object.create(vt.prototype)).constructor = xn,
            (bn.prototype = Object.create(Rt.prototype)).constructor = bn,
            _n.prototype = Object.create(Rt.prototype),
            _n.prototype.constructor = _n,
            wn.prototype = Object.create(vt.prototype),
            wn.prototype.constructor = wn,
            Mn.prototype = Object.create(Rt.prototype),
            Mn.prototype.constructor = Mn,
            (En.prototype = Object.create(wn.prototype)).constructor = En,
            (Tn.prototype = Object.create(Mn.prototype)).constructor = Tn,
            (Sn.prototype = Object.create(vt.prototype)).constructor = Sn,
            (An.prototype = Object.create(Rt.prototype)).constructor = An;
            var ls = Object.freeze({
                WireframeGeometry: Ge,
                ParametricGeometry: Ve,
                ParametricBufferGeometry: We,
                TetrahedronGeometry: Ye,
                TetrahedronBufferGeometry: $e,
                OctahedronGeometry: Ze,
                OctahedronBufferGeometry: Je,
                IcosahedronGeometry: Ke,
                IcosahedronBufferGeometry: Qe,
                DodecahedronGeometry: tn,
                DodecahedronBufferGeometry: en,
                PolyhedronGeometry: Xe,
                PolyhedronBufferGeometry: qe,
                TubeGeometry: nn,
                TubeBufferGeometry: rn,
                TorusKnotGeometry: an,
                TorusKnotBufferGeometry: on,
                TorusGeometry: sn,
                TorusBufferGeometry: ln,
                TextGeometry: hn,
                TextBufferGeometry: dn,
                SphereGeometry: pn,
                SphereBufferGeometry: fn,
                RingGeometry: mn,
                RingBufferGeometry: vn,
                PlaneGeometry: It,
                PlaneBufferGeometry: Ot,
                LatheGeometry: gn,
                LatheBufferGeometry: yn,
                ShapeGeometry: xn,
                ShapeBufferGeometry: bn,
                ExtrudeGeometry: cn,
                ExtrudeBufferGeometry: un,
                EdgesGeometry: _n,
                ConeGeometry: En,
                ConeBufferGeometry: Tn,
                CylinderGeometry: wn,
                CylinderBufferGeometry: Mn,
                CircleGeometry: Sn,
                CircleBufferGeometry: An,
                BoxGeometry: Pt,
                BoxBufferGeometry: Ct
            });
            (Ln.prototype = Object.create(J.prototype)).constructor = Ln,
            Ln.prototype.isShadowMaterial = !0,
            (Rn.prototype = Object.create(K.prototype)).constructor = Rn,
            Rn.prototype.isRawShaderMaterial = !0,
            Pn.prototype = Object.create(J.prototype),
            Pn.prototype.constructor = Pn,
            Pn.prototype.isMeshStandardMaterial = !0,
            Pn.prototype.copy = function(t) {
                return J.prototype.copy.call(this, t),
                this.defines = {
                    STANDARD: ""
                },
                this.color.copy(t.color),
                this.roughness = t.roughness,
                this.metalness = t.metalness,
                this.map = t.map,
                this.lightMap = t.lightMap,
                this.lightMapIntensity = t.lightMapIntensity,
                this.aoMap = t.aoMap,
                this.aoMapIntensity = t.aoMapIntensity,
                this.emissive.copy(t.emissive),
                this.emissiveMap = t.emissiveMap,
                this.emissiveIntensity = t.emissiveIntensity,
                this.bumpMap = t.bumpMap,
                this.bumpScale = t.bumpScale,
                this.normalMap = t.normalMap,
                this.normalScale.copy(t.normalScale),
                this.displacementMap = t.displacementMap,
                this.displacementScale = t.displacementScale,
                this.displacementBias = t.displacementBias,
                this.roughnessMap = t.roughnessMap,
                this.metalnessMap = t.metalnessMap,
                this.alphaMap = t.alphaMap,
                this.envMap = t.envMap,
                this.envMapIntensity = t.envMapIntensity,
                this.refractionRatio = t.refractionRatio,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.wireframeLinecap = t.wireframeLinecap,
                this.wireframeLinejoin = t.wireframeLinejoin,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.morphNormals = t.morphNormals,
                this
            }
            ,
            (Cn.prototype = Object.create(Pn.prototype)).constructor = Cn,
            Cn.prototype.isMeshPhysicalMaterial = !0,
            Cn.prototype.copy = function(t) {
                return Pn.prototype.copy.call(this, t),
                this.defines = {
                    PHYSICAL: ""
                },
                this.reflectivity = t.reflectivity,
                this.clearCoat = t.clearCoat,
                this.clearCoatRoughness = t.clearCoatRoughness,
                this
            }
            ,
            In.prototype = Object.create(J.prototype),
            In.prototype.constructor = In,
            In.prototype.isMeshPhongMaterial = !0,
            In.prototype.copy = function(t) {
                return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.specular.copy(t.specular),
                this.shininess = t.shininess,
                this.map = t.map,
                this.lightMap = t.lightMap,
                this.lightMapIntensity = t.lightMapIntensity,
                this.aoMap = t.aoMap,
                this.aoMapIntensity = t.aoMapIntensity,
                this.emissive.copy(t.emissive),
                this.emissiveMap = t.emissiveMap,
                this.emissiveIntensity = t.emissiveIntensity,
                this.bumpMap = t.bumpMap,
                this.bumpScale = t.bumpScale,
                this.normalMap = t.normalMap,
                this.normalScale.copy(t.normalScale),
                this.displacementMap = t.displacementMap,
                this.displacementScale = t.displacementScale,
                this.displacementBias = t.displacementBias,
                this.specularMap = t.specularMap,
                this.alphaMap = t.alphaMap,
                this.envMap = t.envMap,
                this.combine = t.combine,
                this.reflectivity = t.reflectivity,
                this.refractionRatio = t.refractionRatio,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.wireframeLinecap = t.wireframeLinecap,
                this.wireframeLinejoin = t.wireframeLinejoin,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.morphNormals = t.morphNormals,
                this
            }
            ,
            (On.prototype = Object.create(In.prototype)).constructor = On,
            On.prototype.isMeshToonMaterial = !0,
            On.prototype.copy = function(t) {
                return In.prototype.copy.call(this, t),
                this.gradientMap = t.gradientMap,
                this
            }
            ,
            (Nn.prototype = Object.create(J.prototype)).constructor = Nn,
            Nn.prototype.isMeshNormalMaterial = !0,
            Nn.prototype.copy = function(t) {
                return J.prototype.copy.call(this, t),
                this.bumpMap = t.bumpMap,
                this.bumpScale = t.bumpScale,
                this.normalMap = t.normalMap,
                this.normalScale.copy(t.normalScale),
                this.displacementMap = t.displacementMap,
                this.displacementScale = t.displacementScale,
                this.displacementBias = t.displacementBias,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.morphNormals = t.morphNormals,
                this
            }
            ,
            (Dn.prototype = Object.create(J.prototype)).constructor = Dn,
            Dn.prototype.isMeshLambertMaterial = !0,
            Dn.prototype.copy = function(t) {
                return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.map = t.map,
                this.lightMap = t.lightMap,
                this.lightMapIntensity = t.lightMapIntensity,
                this.aoMap = t.aoMap,
                this.aoMapIntensity = t.aoMapIntensity,
                this.emissive.copy(t.emissive),
                this.emissiveMap = t.emissiveMap,
                this.emissiveIntensity = t.emissiveIntensity,
                this.specularMap = t.specularMap,
                this.alphaMap = t.alphaMap,
                this.envMap = t.envMap,
                this.combine = t.combine,
                this.reflectivity = t.reflectivity,
                this.refractionRatio = t.refractionRatio,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.wireframeLinecap = t.wireframeLinecap,
                this.wireframeLinejoin = t.wireframeLinejoin,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.morphNormals = t.morphNormals,
                this
            }
            ,
            (Un.prototype = Object.create(Oe.prototype)).constructor = Un,
            Un.prototype.isLineDashedMaterial = !0,
            Un.prototype.copy = function(t) {
                return Oe.prototype.copy.call(this, t),
                this.scale = t.scale,
                this.dashSize = t.dashSize,
                this.gapSize = t.gapSize,
                this
            }
            ;
            var cs = Object.freeze({
                ShadowMaterial: Ln,
                SpriteMaterial: Ae,
                RawShaderMaterial: Rn,
                ShaderMaterial: K,
                PointsMaterial: ke,
                MeshPhysicalMaterial: Cn,
                MeshStandardMaterial: Pn,
                MeshPhongMaterial: In,
                MeshToonMaterial: On,
                MeshNormalMaterial: Nn,
                MeshLambertMaterial: Dn,
                MeshDepthMaterial: Q,
                MeshDistanceMaterial: tt,
                MeshBasicMaterial: Nt,
                LineDashedMaterial: Un,
                LineBasicMaterial: Oe,
                Material: J
            })
              , us = {
                enabled: !1,
                files: {},
                add: function(t, e) {
                    !1 !== this.enabled && (this.files[t] = e)
                },
                get: function(t) {
                    if (!1 !== this.enabled)
                        return this.files[t]
                },
                remove: function(t) {
                    delete this.files[t]
                },
                clear: function() {
                    this.files = {}
                }
            }
              , hs = new kn;
            Object.assign(Bn.prototype, {
                load: function(t, e, n, r) {
                    void 0 === t && (t = ""),
                    void 0 !== this.path && (t = this.path + t);
                    var i = this
                      , a = us.get(t);
                    if (void 0 !== a)
                        return i.manager.itemStart(t),
                        setTimeout(function() {
                            e && e(a),
                            i.manager.itemEnd(t)
                        }, 0),
                        a;
                    var o = /^data:(.*?)(;base64)?,(.*)$/
                      , s = t.match(o);
                    if (s) {
                        var l = s[1]
                          , c = !!s[2]
                          , u = s[3];
                        u = window.decodeURIComponent(u),
                        c && (u = window.atob(u));
                        try {
                            var h, d = (this.responseType || "").toLowerCase();
                            switch (d) {
                            case "arraybuffer":
                            case "blob":
                                h = new ArrayBuffer(u.length);
                                for (var p = new Uint8Array(h), f = 0; f < u.length; f++)
                                    p[f] = u.charCodeAt(f);
                                "blob" === d && (h = new Blob([h],{
                                    type: l
                                }));
                                break;
                            case "document":
                                var m = new DOMParser;
                                h = m.parseFromString(u, l);
                                break;
                            case "json":
                                h = JSON.parse(u);
                                break;
                            default:
                                h = u
                            }
                            window.setTimeout(function() {
                                e && e(h),
                                i.manager.itemEnd(t)
                            }, 0)
                        } catch (e) {
                            window.setTimeout(function() {
                                r && r(e),
                                i.manager.itemEnd(t),
                                i.manager.itemError(t)
                            }, 0)
                        }
                    } else {
                        var v = new XMLHttpRequest;
                        v.open("GET", t, !0),
                        v.addEventListener("load", function(n) {
                            var a = n.target.response;
                            us.add(t, a),
                            200 === this.status ? (e && e(a),
                            i.manager.itemEnd(t)) : 0 === this.status ? (console.warn("THREE.FileLoader: HTTP Status 0 received."),
                            e && e(a),
                            i.manager.itemEnd(t)) : (r && r(n),
                            i.manager.itemEnd(t),
                            i.manager.itemError(t))
                        }, !1),
                        void 0 !== n && v.addEventListener("progress", function(t) {
                            n(t)
                        }, !1),
                        v.addEventListener("error", function(e) {
                            r && r(e),
                            i.manager.itemEnd(t),
                            i.manager.itemError(t)
                        }, !1),
                        void 0 !== this.responseType && (v.responseType = this.responseType),
                        void 0 !== this.withCredentials && (v.withCredentials = this.withCredentials),
                        v.overrideMimeType && v.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain");
                        for (var g in this.requestHeader)
                            v.setRequestHeader(g, this.requestHeader[g]);
                        v.send(null)
                    }
                    return i.manager.itemStart(t),
                    v
                },
                setPath: function(t) {
                    return this.path = t,
                    this
                },
                setResponseType: function(t) {
                    return this.responseType = t,
                    this
                },
                setWithCredentials: function(t) {
                    return this.withCredentials = t,
                    this
                },
                setMimeType: function(t) {
                    return this.mimeType = t,
                    this
                },
                setRequestHeader: function(t) {
                    return this.requestHeader = t,
                    this
                }
            }),
            Object.assign(Fn.prototype, {
                load: function(t, e, n, r) {
                    var i = this
                      , a = []
                      , o = new je;
                    o.image = a;
                    var s = new Bn(this.manager);
                    if (s.setPath(this.path),
                    s.setResponseType("arraybuffer"),
                    Array.isArray(t))
                        for (var l = 0, c = 0, u = t.length; c < u; ++c)
                            !function(c) {
                                s.load(t[c], function(t) {
                                    var n = i._parser(t, !0);
                                    a[c] = {
                                        width: n.width,
                                        height: n.height,
                                        format: n.format,
                                        mipmaps: n.mipmaps
                                    },
                                    6 === (l += 1) && (1 === n.mipmapCount && (o.minFilter = Za),
                                    o.format = n.format,
                                    o.needsUpdate = !0,
                                    e && e(o))
                                }, n, r)
                            }(c);
                    else
                        s.load(t, function(t) {
                            var n = i._parser(t, !0);
                            if (n.isCubemap)
                                for (var r = n.mipmaps.length / n.mipmapCount, s = 0; s < r; s++) {
                                    a[s] = {
                                        mipmaps: []
                                    };
                                    for (var l = 0; l < n.mipmapCount; l++)
                                        a[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + l]),
                                        a[s].format = n.format,
                                        a[s].width = n.width,
                                        a[s].height = n.height
                                }
                            else
                                o.image.width = n.width,
                                o.image.height = n.height,
                                o.mipmaps = n.mipmaps;
                            1 === n.mipmapCount && (o.minFilter = Za),
                            o.format = n.format,
                            o.needsUpdate = !0,
                            e && e(o)
                        }, n, r);
                    return o
                },
                setPath: function(t) {
                    return this.path = t,
                    this
                }
            }),
            Object.assign(zn.prototype, {
                load: function(t, e, n, r) {
                    var i = this
                      , a = new u
                      , o = new Bn(this.manager);
                    return o.setResponseType("arraybuffer"),
                    o.load(t, function(t) {
                        var n = i._parser(t);
                        n && (void 0 !== n.image ? a.image = n.image : void 0 !== n.data && (a.image.width = n.width,
                        a.image.height = n.height,
                        a.image.data = n.data),
                        a.wrapS = void 0 !== n.wrapS ? n.wrapS : Wa,
                        a.wrapT = void 0 !== n.wrapT ? n.wrapT : Wa,
                        a.magFilter = void 0 !== n.magFilter ? n.magFilter : Za,
                        a.minFilter = void 0 !== n.minFilter ? n.minFilter : Ka,
                        a.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1,
                        void 0 !== n.format && (a.format = n.format),
                        void 0 !== n.type && (a.type = n.type),
                        void 0 !== n.mipmaps && (a.mipmaps = n.mipmaps),
                        1 === n.mipmapCount && (a.minFilter = Za),
                        a.needsUpdate = !0,
                        e && e(a, n))
                    }, n, r),
                    a
                }
            }),
            Object.assign(jn.prototype, {
                crossOrigin: "Anonymous",
                load: function(t, e, n, r) {
                    void 0 === t && (t = ""),
                    void 0 !== this.path && (t = this.path + t);
                    var i = this
                      , a = us.get(t);
                    if (void 0 !== a)
                        return i.manager.itemStart(t),
                        setTimeout(function() {
                            e && e(a),
                            i.manager.itemEnd(t)
                        }, 0),
                        a;
                    var o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
                    return o.addEventListener("load", function() {
                        us.add(t, this),
                        e && e(this),
                        i.manager.itemEnd(t)
                    }, !1),
                    o.addEventListener("error", function(e) {
                        r && r(e),
                        i.manager.itemEnd(t),
                        i.manager.itemError(t)
                    }, !1),
                    "data:" !== t.substr(0, 5) && void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin),
                    i.manager.itemStart(t),
                    o.src = t,
                    o
                },
                setCrossOrigin: function(t) {
                    return this.crossOrigin = t,
                    this
                },
                setPath: function(t) {
                    return this.path = t,
                    this
                }
            }),
            Object.assign(Hn.prototype, {
                crossOrigin: "Anonymous",
                load: function(t, e, n, r) {
                    var i = new h
                      , a = new jn(this.manager);
                    a.setCrossOrigin(this.crossOrigin),
                    a.setPath(this.path);
                    for (var o = 0, s = 0; s < t.length; ++s)
                        !function(n) {
                            a.load(t[n], function(t) {
                                i.images[n] = t,
                                6 == ++o && (i.needsUpdate = !0,
                                e && e(i))
                            }, void 0, r)
                        }(s);
                    return i
                },
                setCrossOrigin: function(t) {
                    return this.crossOrigin = t,
                    this
                },
                setPath: function(t) {
                    return this.path = t,
                    this
                }
            }),
            Object.assign(Gn.prototype, {
                crossOrigin: "Anonymous",
                load: function(t, e, n, i) {
                    var a = new jn(this.manager);
                    a.setCrossOrigin(this.crossOrigin),
                    a.setPath(this.path);
                    var o = new r;
                    return o.image = a.load(t, function() {
                        var n = t.search(/\.(jpg|jpeg)$/) > 0 || 0 === t.search(/^data\:image\/jpeg/);
                        o.format = n ? po : fo,
                        o.needsUpdate = !0,
                        void 0 !== e && e(o)
                    }, n, i),
                    o
                },
                setCrossOrigin: function(t) {
                    return this.crossOrigin = t,
                    this
                },
                setPath: function(t) {
                    return this.path = t,
                    this
                }
            }),
            Vn.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Vn,
                isLight: !0,
                copy: function(t) {
                    return ut.prototype.copy.call(this, t),
                    this.color.copy(t.color),
                    this.intensity = t.intensity,
                    this
                },
                toJSON: function(t) {
                    var e = ut.prototype.toJSON.call(this, t);
                    return e.object.color = this.color.getHex(),
                    e.object.intensity = this.intensity,
                    void 0 !== this.groundColor && (e.object.groundColor = this.groundColor.getHex()),
                    void 0 !== this.distance && (e.object.distance = this.distance),
                    void 0 !== this.angle && (e.object.angle = this.angle),
                    void 0 !== this.decay && (e.object.decay = this.decay),
                    void 0 !== this.penumbra && (e.object.penumbra = this.penumbra),
                    void 0 !== this.shadow && (e.object.shadow = this.shadow.toJSON()),
                    e
                }
            }),
            Wn.prototype = Object.assign(Object.create(Vn.prototype), {
                constructor: Wn,
                isHemisphereLight: !0,
                copy: function(t) {
                    return Vn.prototype.copy.call(this, t),
                    this.groundColor.copy(t.groundColor),
                    this
                }
            }),
            Object.assign(Xn.prototype, {
                copy: function(t) {
                    return this.camera = t.camera.clone(),
                    this.bias = t.bias,
                    this.radius = t.radius,
                    this.mapSize.copy(t.mapSize),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                toJSON: function() {
                    var t = {};
                    return 0 !== this.bias && (t.bias = this.bias),
                    1 !== this.radius && (t.radius = this.radius),
                    512 === this.mapSize.x && 512 === this.mapSize.y || (t.mapSize = this.mapSize.toArray()),
                    t.camera = this.camera.toJSON(!1).object,
                    delete t.camera.matrix,
                    t
                }
            }),
            qn.prototype = Object.assign(Object.create(Xn.prototype), {
                constructor: qn,
                isSpotLightShadow: !0,
                update: function(t) {
                    var e = this.camera
                      , n = 2 * Go.RAD2DEG * t.angle
                      , r = this.mapSize.width / this.mapSize.height
                      , i = t.distance || e.far;
                    n === e.fov && r === e.aspect && i === e.far || (e.fov = n,
                    e.aspect = r,
                    e.far = i,
                    e.updateProjectionMatrix())
                }
            }),
            Yn.prototype = Object.assign(Object.create(Vn.prototype), {
                constructor: Yn,
                isSpotLight: !0,
                copy: function(t) {
                    return Vn.prototype.copy.call(this, t),
                    this.distance = t.distance,
                    this.angle = t.angle,
                    this.penumbra = t.penumbra,
                    this.decay = t.decay,
                    this.target = t.target.clone(),
                    this.shadow = t.shadow.clone(),
                    this
                }
            }),
            $n.prototype = Object.assign(Object.create(Vn.prototype), {
                constructor: $n,
                isPointLight: !0,
                copy: function(t) {
                    return Vn.prototype.copy.call(this, t),
                    this.distance = t.distance,
                    this.decay = t.decay,
                    this.shadow = t.shadow.clone(),
                    this
                }
            }),
            Zn.prototype = Object.assign(Object.create(Xn.prototype), {
                constructor: Zn
            }),
            Jn.prototype = Object.assign(Object.create(Vn.prototype), {
                constructor: Jn,
                isDirectionalLight: !0,
                copy: function(t) {
                    return Vn.prototype.copy.call(this, t),
                    this.target = t.target.clone(),
                    this.shadow = t.shadow.clone(),
                    this
                }
            }),
            Kn.prototype = Object.assign(Object.create(Vn.prototype), {
                constructor: Kn,
                isAmbientLight: !0
            }),
            Qn.prototype = Object.assign(Object.create(Vn.prototype), {
                constructor: Qn,
                isRectAreaLight: !0,
                copy: function(t) {
                    return Vn.prototype.copy.call(this, t),
                    this.width = t.width,
                    this.height = t.height,
                    this
                },
                toJSON: function(t) {
                    var e = Vn.prototype.toJSON.call(this, t);
                    return e.object.width = this.width,
                    e.object.height = this.height,
                    e
                }
            });
            var ds = {
                arraySlice: function(t, e, n) {
                    return ds.isTypedArray(t) ? new t.constructor(t.subarray(e, void 0 !== n ? n : t.length)) : t.slice(e, n)
                },
                convertArray: function(t, e, n) {
                    return !t || !n && t.constructor === e ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t)
                },
                isTypedArray: function(t) {
                    return ArrayBuffer.isView(t) && !(t instanceof DataView)
                },
                getKeyframeOrder: function(t) {
                    for (var e = t.length, n = new Array(e), r = 0; r !== e; ++r)
                        n[r] = r;
                    return n.sort(function(e, n) {
                        return t[e] - t[n]
                    }),
                    n
                },
                sortedArray: function(t, e, n) {
                    for (var r = t.length, i = new t.constructor(r), a = 0, o = 0; o !== r; ++a)
                        for (var s = n[a] * e, l = 0; l !== e; ++l)
                            i[o++] = t[s + l];
                    return i
                },
                flattenJSON: function(t, e, n, r) {
                    for (var i = 1, a = t[0]; void 0 !== a && void 0 === a[r]; )
                        a = t[i++];
                    if (void 0 !== a) {
                        var o = a[r];
                        if (void 0 !== o)
                            if (Array.isArray(o))
                                do {
                                    void 0 !== (o = a[r]) && (e.push(a.time),
                                    n.push.apply(n, o)),
                                    a = t[i++]
                                } while (void 0 !== a);
                            else if (void 0 !== o.toArray)
                                do {
                                    void 0 !== (o = a[r]) && (e.push(a.time),
                                    o.toArray(n, n.length)),
                                    a = t[i++]
                                } while (void 0 !== a);
                            else
                                do {
                                    void 0 !== (o = a[r]) && (e.push(a.time),
                                    n.push(o)),
                                    a = t[i++]
                                } while (void 0 !== a)
                    }
                }
            };
            Object.assign(tr.prototype, {
                evaluate: function(t) {
                    var e = this.parameterPositions
                      , n = this._cachedIndex
                      , r = e[n]
                      , i = e[n - 1];
                    t: {
                        e: {
                            var a;
                            n: {
                                r: if (!(t < r)) {
                                    for (s = n + 2; ; ) {
                                        if (void 0 === r) {
                                            if (t < i)
                                                break r;
                                            return n = e.length,
                                            this._cachedIndex = n,
                                            this.afterEnd_(n - 1, t, i)
                                        }
                                        if (n === s)
                                            break;
                                        if (i = r,
                                        r = e[++n],
                                        t < r)
                                            break e
                                    }
                                    a = e.length;
                                    break n
                                }
                                {
                                    if (t >= i)
                                        break t;
                                    var o = e[1];
                                    t < o && (n = 2,
                                    i = o);
                                    for (var s = n - 2; ; ) {
                                        if (void 0 === i)
                                            return this._cachedIndex = 0,
                                            this.beforeStart_(0, t, r);
                                        if (n === s)
                                            break;
                                        if (r = i,
                                        i = e[--n - 1],
                                        t >= i)
                                            break e
                                    }
                                    a = n,
                                    n = 0
                                }
                            }
                            for (; n < a; ) {
                                var l = n + a >>> 1;
                                t < e[l] ? a = l : n = l + 1
                            }
                            if (r = e[n],
                            void 0 === (i = e[n - 1]))
                                return this._cachedIndex = 0,
                                this.beforeStart_(0, t, r);
                            if (void 0 === r)
                                return n = e.length,
                                this._cachedIndex = n,
                                this.afterEnd_(n - 1, i, t)
                        }
                        this._cachedIndex = n,
                        this.intervalChanged_(n, i, r)
                    }
                    return this.interpolate_(n, i, t, r)
                },
                settings: null,
                DefaultSettings_: {},
                getSettings_: function() {
                    return this.settings || this.DefaultSettings_
                },
                copySampleValue_: function(t) {
                    for (var e = this.resultBuffer, n = this.sampleValues, r = this.valueSize, i = t * r, a = 0; a !== r; ++a)
                        e[a] = n[i + a];
                    return e
                },
                interpolate_: function(t, e, n, r) {
                    throw new Error("call to abstract method")
                },
                intervalChanged_: function(t, e, n) {}
            }),
            Object.assign(tr.prototype, {
                beforeStart_: tr.prototype.copySampleValue_,
                afterEnd_: tr.prototype.copySampleValue_
            }),
            er.prototype = Object.assign(Object.create(tr.prototype), {
                constructor: er,
                DefaultSettings_: {
                    endingStart: Po,
                    endingEnd: Po
                },
                intervalChanged_: function(t, e, n) {
                    var r = this.parameterPositions
                      , i = t - 2
                      , a = t + 1
                      , o = r[i]
                      , s = r[a];
                    if (void 0 === o)
                        switch (this.getSettings_().endingStart) {
                        case 2401:
                            i = t,
                            o = 2 * e - n;
                            break;
                        case 2402:
                            o = e + r[i = r.length - 2] - r[i + 1];
                            break;
                        default:
                            i = t,
                            o = n
                        }
                    if (void 0 === s)
                        switch (this.getSettings_().endingEnd) {
                        case 2401:
                            a = t,
                            s = 2 * n - e;
                            break;
                        case 2402:
                            a = 1,
                            s = n + r[1] - r[0];
                            break;
                        default:
                            a = t - 1,
                            s = e
                        }
                    var l = .5 * (n - e)
                      , c = this.valueSize;
                    this._weightPrev = l / (e - o),
                    this._weightNext = l / (s - n),
                    this._offsetPrev = i * c,
                    this._offsetNext = a * c
                },
                interpolate_: function(t, e, n, r) {
                    for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = t * o, l = s - o, c = this._offsetPrev, u = this._offsetNext, h = this._weightPrev, d = this._weightNext, p = (n - e) / (r - e), f = p * p, m = f * p, v = -h * m + 2 * h * f - h * p, g = (1 + h) * m + (-1.5 - 2 * h) * f + (-.5 + h) * p + 1, y = (-1 - d) * m + (1.5 + d) * f + .5 * p, x = d * m - d * f, b = 0; b !== o; ++b)
                        i[b] = v * a[c + b] + g * a[l + b] + y * a[s + b] + x * a[u + b];
                    return i
                }
            }),
            nr.prototype = Object.assign(Object.create(tr.prototype), {
                constructor: nr,
                interpolate_: function(t, e, n, r) {
                    for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = t * o, l = s - o, c = (n - e) / (r - e), u = 1 - c, h = 0; h !== o; ++h)
                        i[h] = a[l + h] * u + a[s + h] * c;
                    return i
                }
            }),
            rr.prototype = Object.assign(Object.create(tr.prototype), {
                constructor: rr,
                interpolate_: function(t, e, n, r) {
                    return this.copySampleValue_(t - 1)
                }
            });
            var ps;
            ps = {
                TimeBufferType: Float32Array,
                ValueBufferType: Float32Array,
                DefaultInterpolation: 2301,
                InterpolantFactoryMethodDiscrete: function(t) {
                    return new rr(this.times,this.values,this.getValueSize(),t)
                },
                InterpolantFactoryMethodLinear: function(t) {
                    return new nr(this.times,this.values,this.getValueSize(),t)
                },
                InterpolantFactoryMethodSmooth: function(t) {
                    return new er(this.times,this.values,this.getValueSize(),t)
                },
                setInterpolation: function(t) {
                    var e;
                    switch (t) {
                    case 2300:
                        e = this.InterpolantFactoryMethodDiscrete;
                        break;
                    case 2301:
                        e = this.InterpolantFactoryMethodLinear;
                        break;
                    case 2302:
                        e = this.InterpolantFactoryMethodSmooth
                    }
                    if (void 0 !== e)
                        this.createInterpolant = e;
                    else {
                        var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                        if (void 0 === this.createInterpolant) {
                            if (t === this.DefaultInterpolation)
                                throw new Error(n);
                            this.setInterpolation(this.DefaultInterpolation)
                        }
                        console.warn("THREE.KeyframeTrackPrototype:", n)
                    }
                },
                getInterpolation: function() {
                    switch (this.createInterpolant) {
                    case this.InterpolantFactoryMethodDiscrete:
                        return 2300;
                    case this.InterpolantFactoryMethodLinear:
                        return 2301;
                    case this.InterpolantFactoryMethodSmooth:
                        return 2302
                    }
                },
                getValueSize: function() {
                    return this.values.length / this.times.length
                },
                shift: function(t) {
                    if (0 !== t)
                        for (var e = this.times, n = 0, r = e.length; n !== r; ++n)
                            e[n] += t;
                    return this
                },
                scale: function(t) {
                    if (1 !== t)
                        for (var e = this.times, n = 0, r = e.length; n !== r; ++n)
                            e[n] *= t;
                    return this
                },
                trim: function(t, e) {
                    for (var n = this.times, r = n.length, i = 0, a = r - 1; i !== r && n[i] < t; )
                        ++i;
                    for (; -1 !== a && n[a] > e; )
                        --a;
                    if (++a,
                    0 !== i || a !== r) {
                        i >= a && (a = Math.max(a, 1),
                        i = a - 1);
                        var o = this.getValueSize();
                        this.times = ds.arraySlice(n, i, a),
                        this.values = ds.arraySlice(this.values, i * o, a * o)
                    }
                    return this
                },
                validate: function() {
                    var t = !0
                      , e = this.getValueSize();
                    e - Math.floor(e) != 0 && (console.error("THREE.KeyframeTrackPrototype: Invalid value size in track.", this),
                    t = !1);
                    var n = this.times
                      , r = this.values
                      , i = n.length;
                    0 === i && (console.error("THREE.KeyframeTrackPrototype: Track is empty.", this),
                    t = !1);
                    for (var a = null, o = 0; o !== i; o++) {
                        var s = n[o];
                        if ("number" == typeof s && isNaN(s)) {
                            console.error("THREE.KeyframeTrackPrototype: Time is not a valid number.", this, o, s),
                            t = !1;
                            break
                        }
                        if (null !== a && a > s) {
                            console.error("THREE.KeyframeTrackPrototype: Out of order keys.", this, o, s, a),
                            t = !1;
                            break
                        }
                        a = s
                    }
                    if (void 0 !== r && ds.isTypedArray(r))
                        for (var o = 0, l = r.length; o !== l; ++o) {
                            var c = r[o];
                            if (isNaN(c)) {
                                console.error("THREE.KeyframeTrackPrototype: Value is not a valid number.", this, o, c),
                                t = !1;
                                break
                            }
                        }
                    return t
                },
                optimize: function() {
                    for (var t = this.times, e = this.values, n = this.getValueSize(), r = 2302 === this.getInterpolation(), i = 1, a = t.length - 1, o = 1; o < a; ++o) {
                        var s = !1
                          , l = t[o];
                        if (l !== t[o + 1] && (1 !== o || l !== l[0]))
                            if (r)
                                s = !0;
                            else
                                for (var c = o * n, u = c - n, h = c + n, d = 0; d !== n; ++d) {
                                    var p = e[c + d];
                                    if (p !== e[u + d] || p !== e[h + d]) {
                                        s = !0;
                                        break
                                    }
                                }
                        if (s) {
                            if (o !== i) {
                                t[i] = t[o];
                                for (var f = o * n, m = i * n, d = 0; d !== n; ++d)
                                    e[m + d] = e[f + d]
                            }
                            ++i
                        }
                    }
                    if (a > 0) {
                        t[i] = t[a];
                        for (var f = a * n, m = i * n, d = 0; d !== n; ++d)
                            e[m + d] = e[f + d];
                        ++i
                    }
                    return i !== t.length && (this.times = ds.arraySlice(t, 0, i),
                    this.values = ds.arraySlice(e, 0, i * n)),
                    this
                }
            },
            ar.prototype = Object.assign(Object.create(ps), {
                constructor: ar,
                ValueTypeName: "vector"
            }),
            or.prototype = Object.assign(Object.create(tr.prototype), {
                constructor: or,
                interpolate_: function(t, e, n, r) {
                    for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, l = t * o, c = (n - e) / (r - e), u = l + o; l !== u; l += 4)
                        s.slerpFlat(i, 0, a, l - o, a, l, c);
                    return i
                }
            }),
            sr.prototype = Object.assign(Object.create(ps), {
                constructor: sr,
                ValueTypeName: "quaternion",
                DefaultInterpolation: 2301,
                InterpolantFactoryMethodLinear: function(t) {
                    return new or(this.times,this.values,this.getValueSize(),t)
                },
                InterpolantFactoryMethodSmooth: void 0
            }),
            lr.prototype = Object.assign(Object.create(ps), {
                constructor: lr,
                ValueTypeName: "number"
            }),
            cr.prototype = Object.assign(Object.create(ps), {
                constructor: cr,
                ValueTypeName: "string",
                ValueBufferType: Array,
                DefaultInterpolation: 2300,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }),
            ur.prototype = Object.assign(Object.create(ps), {
                constructor: ur,
                ValueTypeName: "bool",
                ValueBufferType: Array,
                DefaultInterpolation: 2300,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }),
            hr.prototype = Object.assign(Object.create(ps), {
                constructor: hr,
                ValueTypeName: "color"
            }),
            dr.prototype = ps,
            ps.constructor = dr,
            Object.assign(dr, {
                parse: function(t) {
                    if (void 0 === t.type)
                        throw new Error("track type undefined, can not parse");
                    var e = dr._getTrackTypeForValueTypeName(t.type);
                    if (void 0 === t.times) {
                        var n = []
                          , r = [];
                        ds.flattenJSON(t.keys, n, r, "value"),
                        t.times = n,
                        t.values = r
                    }
                    return void 0 !== e.parse ? e.parse(t) : new e(t.name,t.times,t.values,t.interpolation)
                },
                toJSON: function(t) {
                    var e, n = t.constructor;
                    if (void 0 !== n.toJSON)
                        e = n.toJSON(t);
                    else {
                        e = {
                            name: t.name,
                            times: ds.convertArray(t.times, Array),
                            values: ds.convertArray(t.values, Array)
                        };
                        var r = t.getInterpolation();
                        r !== t.DefaultInterpolation && (e.interpolation = r)
                    }
                    return e.type = t.ValueTypeName,
                    e
                },
                _getTrackTypeForValueTypeName: function(t) {
                    switch (t.toLowerCase()) {
                    case "scalar":
                    case "double":
                    case "float":
                    case "number":
                    case "integer":
                        return lr;
                    case "vector":
                    case "vector2":
                    case "vector3":
                    case "vector4":
                        return ar;
                    case "color":
                        return hr;
                    case "quaternion":
                        return sr;
                    case "bool":
                    case "boolean":
                        return ur;
                    case "string":
                        return cr
                    }
                    throw new Error("Unsupported typeName: " + t)
                }
            }),
            Object.assign(pr, {
                parse: function(t) {
                    for (var e = [], n = t.tracks, r = 1 / (t.fps || 1), i = 0, a = n.length; i !== a; ++i)
                        e.push(dr.parse(n[i]).scale(r));
                    return new pr(t.name,t.duration,e)
                },
                toJSON: function(t) {
                    for (var e = [], n = t.tracks, r = {
                        name: t.name,
                        duration: t.duration,
                        tracks: e
                    }, i = 0, a = n.length; i !== a; ++i)
                        e.push(dr.toJSON(n[i]));
                    return r
                },
                CreateFromMorphTargetSequence: function(t, e, n, r) {
                    for (var i = e.length, a = [], o = 0; o < i; o++) {
                        var s = []
                          , l = [];
                        s.push((o + i - 1) % i, o, (o + 1) % i),
                        l.push(0, 1, 0);
                        var c = ds.getKeyframeOrder(s);
                        s = ds.sortedArray(s, 1, c),
                        l = ds.sortedArray(l, 1, c),
                        r || 0 !== s[0] || (s.push(i),
                        l.push(l[0])),
                        a.push(new lr(".morphTargetInfluences[" + e[o].name + "]",s,l).scale(1 / n))
                    }
                    return new pr(t,-1,a)
                },
                findByName: function(t, e) {
                    var n = t;
                    if (!Array.isArray(t)) {
                        var r = t;
                        n = r.geometry && r.geometry.animations || r.animations
                    }
                    for (var i = 0; i < n.length; i++)
                        if (n[i].name === e)
                            return n[i];
                    return null
                },
                CreateClipsFromMorphTargetSequences: function(t, e, n) {
                    for (var r = {}, i = /^([\w-]*?)([\d]+)$/, a = 0, o = t.length; a < o; a++) {
                        var s = t[a]
                          , l = s.name.match(i);
                        if (l && l.length > 1) {
                            var c = r[h = l[1]];
                            c || (r[h] = c = []),
                            c.push(s)
                        }
                    }
                    var u = [];
                    for (var h in r)
                        u.push(pr.CreateFromMorphTargetSequence(h, r[h], e, n));
                    return u
                },
                parseAnimation: function(t, e) {
                    if (!t)
                        return console.error("THREE.AnimationClip: No animation in JSONLoader data."),
                        null;
                    for (var n = function(t, e, n, r, i) {
                        if (0 !== n.length) {
                            var a = []
                              , o = [];
                            ds.flattenJSON(n, a, o, r),
                            0 !== a.length && i.push(new t(e,a,o))
                        }
                    }, r = [], i = t.name || "default", a = t.length || -1, o = t.fps || 30, s = t.hierarchy || [], l = 0; l < s.length; l++) {
                        var c = s[l].keys;
                        if (c && 0 !== c.length)
                            if (c[0].morphTargets) {
                                for (var u = {}, h = 0; h < c.length; h++)
                                    if (c[h].morphTargets)
                                        for (m = 0; m < c[h].morphTargets.length; m++)
                                            u[c[h].morphTargets[m]] = -1;
                                for (var d in u) {
                                    for (var p = [], f = [], m = 0; m !== c[h].morphTargets.length; ++m) {
                                        var v = c[h];
                                        p.push(v.time),
                                        f.push(v.morphTarget === d ? 1 : 0)
                                    }
                                    r.push(new lr(".morphTargetInfluence[" + d + "]",p,f))
                                }
                                a = u.length * (o || 1)
                            } else {
                                var g = ".bones[" + e[l].name + "]";
                                n(ar, g + ".position", c, "pos", r),
                                n(sr, g + ".quaternion", c, "rot", r),
                                n(ar, g + ".scale", c, "scl", r)
                            }
                    }
                    return 0 === r.length ? null : new pr(i,a,r)
                }
            }),
            Object.assign(pr.prototype, {
                resetDuration: function() {
                    for (var t = 0, e = 0, n = this.tracks.length; e !== n; ++e) {
                        var r = this.tracks[e];
                        t = Math.max(t, r.times[r.times.length - 1])
                    }
                    this.duration = t
                },
                trim: function() {
                    for (var t = 0; t < this.tracks.length; t++)
                        this.tracks[t].trim(0, this.duration);
                    return this
                },
                optimize: function() {
                    for (var t = 0; t < this.tracks.length; t++)
                        this.tracks[t].optimize();
                    return this
                }
            }),
            Object.assign(fr.prototype, {
                load: function(t, e, n, r) {
                    var i = this;
                    new Bn(i.manager).load(t, function(t) {
                        e(i.parse(JSON.parse(t)))
                    }, n, r)
                },
                setTextures: function(t) {
                    this.textures = t
                },
                parse: function(t) {
                    function e(t) {
                        return void 0 === r[t] && console.warn("THREE.MaterialLoader: Undefined texture", t),
                        r[t]
                    }
                    var r = this.textures
                      , i = new cs[t.type];
                    if (void 0 !== t.uuid && (i.uuid = t.uuid),
                    void 0 !== t.name && (i.name = t.name),
                    void 0 !== t.color && i.color.setHex(t.color),
                    void 0 !== t.roughness && (i.roughness = t.roughness),
                    void 0 !== t.metalness && (i.metalness = t.metalness),
                    void 0 !== t.emissive && i.emissive.setHex(t.emissive),
                    void 0 !== t.specular && i.specular.setHex(t.specular),
                    void 0 !== t.shininess && (i.shininess = t.shininess),
                    void 0 !== t.clearCoat && (i.clearCoat = t.clearCoat),
                    void 0 !== t.clearCoatRoughness && (i.clearCoatRoughness = t.clearCoatRoughness),
                    void 0 !== t.uniforms && (i.uniforms = t.uniforms),
                    void 0 !== t.vertexShader && (i.vertexShader = t.vertexShader),
                    void 0 !== t.fragmentShader && (i.fragmentShader = t.fragmentShader),
                    void 0 !== t.vertexColors && (i.vertexColors = t.vertexColors),
                    void 0 !== t.fog && (i.fog = t.fog),
                    void 0 !== t.flatShading && (i.flatShading = t.flatShading),
                    void 0 !== t.blending && (i.blending = t.blending),
                    void 0 !== t.side && (i.side = t.side),
                    void 0 !== t.opacity && (i.opacity = t.opacity),
                    void 0 !== t.transparent && (i.transparent = t.transparent),
                    void 0 !== t.alphaTest && (i.alphaTest = t.alphaTest),
                    void 0 !== t.depthTest && (i.depthTest = t.depthTest),
                    void 0 !== t.depthWrite && (i.depthWrite = t.depthWrite),
                    void 0 !== t.colorWrite && (i.colorWrite = t.colorWrite),
                    void 0 !== t.wireframe && (i.wireframe = t.wireframe),
                    void 0 !== t.wireframeLinewidth && (i.wireframeLinewidth = t.wireframeLinewidth),
                    void 0 !== t.wireframeLinecap && (i.wireframeLinecap = t.wireframeLinecap),
                    void 0 !== t.wireframeLinejoin && (i.wireframeLinejoin = t.wireframeLinejoin),
                    void 0 !== t.skinning && (i.skinning = t.skinning),
                    void 0 !== t.morphTargets && (i.morphTargets = t.morphTargets),
                    void 0 !== t.dithering && (i.dithering = t.dithering),
                    void 0 !== t.visible && (i.visible = t.visible),
                    void 0 !== t.userData && (i.userData = t.userData),
                    void 0 !== t.shading && (i.flatShading = 1 === t.shading),
                    void 0 !== t.size && (i.size = t.size),
                    void 0 !== t.sizeAttenuation && (i.sizeAttenuation = t.sizeAttenuation),
                    void 0 !== t.map && (i.map = e(t.map)),
                    void 0 !== t.alphaMap && (i.alphaMap = e(t.alphaMap),
                    i.transparent = !0),
                    void 0 !== t.bumpMap && (i.bumpMap = e(t.bumpMap)),
                    void 0 !== t.bumpScale && (i.bumpScale = t.bumpScale),
                    void 0 !== t.normalMap && (i.normalMap = e(t.normalMap)),
                    void 0 !== t.normalScale) {
                        var a = t.normalScale;
                        !1 === Array.isArray(a) && (a = [a, a]),
                        i.normalScale = (new n).fromArray(a)
                    }
                    return void 0 !== t.displacementMap && (i.displacementMap = e(t.displacementMap)),
                    void 0 !== t.displacementScale && (i.displacementScale = t.displacementScale),
                    void 0 !== t.displacementBias && (i.displacementBias = t.displacementBias),
                    void 0 !== t.roughnessMap && (i.roughnessMap = e(t.roughnessMap)),
                    void 0 !== t.metalnessMap && (i.metalnessMap = e(t.metalnessMap)),
                    void 0 !== t.emissiveMap && (i.emissiveMap = e(t.emissiveMap)),
                    void 0 !== t.emissiveIntensity && (i.emissiveIntensity = t.emissiveIntensity),
                    void 0 !== t.specularMap && (i.specularMap = e(t.specularMap)),
                    void 0 !== t.envMap && (i.envMap = e(t.envMap)),
                    void 0 !== t.reflectivity && (i.reflectivity = t.reflectivity),
                    void 0 !== t.lightMap && (i.lightMap = e(t.lightMap)),
                    void 0 !== t.lightMapIntensity && (i.lightMapIntensity = t.lightMapIntensity),
                    void 0 !== t.aoMap && (i.aoMap = e(t.aoMap)),
                    void 0 !== t.aoMapIntensity && (i.aoMapIntensity = t.aoMapIntensity),
                    void 0 !== t.gradientMap && (i.gradientMap = e(t.gradientMap)),
                    i
                }
            }),
            Object.assign(mr.prototype, {
                load: function(t, e, n, r) {
                    var i = this;
                    new Bn(i.manager).load(t, function(t) {
                        e(i.parse(JSON.parse(t)))
                    }, n, r)
                },
                parse: function(t) {
                    var e = new Rt
                      , n = t.data.index;
                    if (void 0 !== n) {
                        o = new fs[n.type](n.array);
                        e.setIndex(new gt(o,1))
                    }
                    var r = t.data.attributes;
                    for (var i in r) {
                        var a = r[i]
                          , o = new fs[a.type](a.array);
                        e.addAttribute(i, new gt(o,a.itemSize,a.normalized))
                    }
                    var s = t.data.groups || t.data.drawcalls || t.data.offsets;
                    if (void 0 !== s)
                        for (var c = 0, u = s.length; c !== u; ++c) {
                            var h = s[c];
                            e.addGroup(h.start, h.count, h.materialIndex)
                        }
                    var d = t.data.boundingSphere;
                    if (void 0 !== d) {
                        var p = new l;
                        void 0 !== d.center && p.fromArray(d.center),
                        e.boundingSphere = new nt(p,d.radius)
                    }
                    return e
                }
            });
            var fs = {
                Int8Array: Int8Array,
                Uint8Array: Uint8Array,
                Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
                Int16Array: Int16Array,
                Uint16Array: Uint16Array,
                Int32Array: Int32Array,
                Uint32Array: Uint32Array,
                Float32Array: Float32Array,
                Float64Array: Float64Array
            };
            vr.Handlers = {
                handlers: [],
                add: function(t, e) {
                    this.handlers.push(t, e)
                },
                get: function(t) {
                    for (var e = this.handlers, n = 0, r = e.length; n < r; n += 2) {
                        var i = e[n]
                          , a = e[n + 1];
                        if (i.test(t))
                            return a
                    }
                    return null
                }
            },
            Object.assign(vr.prototype, {
                crossOrigin: void 0,
                extractUrlBase: function(t) {
                    var e = t.split("/");
                    return 1 === e.length ? "./" : (e.pop(),
                    e.join("/") + "/")
                },
                initMaterials: function(t, e, n) {
                    for (var r = [], i = 0; i < t.length; ++i)
                        r[i] = this.createMaterial(t[i], e, n);
                    return r
                },
                createMaterial: function() {
                    var t = {
                        NoBlending: Qi,
                        NormalBlending: ta,
                        AdditiveBlending: ea,
                        SubtractiveBlending: na,
                        MultiplyBlending: ra,
                        CustomBlending: ia
                    }
                      , e = new X
                      , n = new Gn
                      , r = new fr;
                    return function(i, a, o) {
                        function s(t, e, r, i, s) {
                            var c, u = a + t, h = vr.Handlers.get(u);
                            null !== h ? c = h.load(u) : (n.setCrossOrigin(o),
                            c = n.load(u)),
                            void 0 !== e && (c.repeat.fromArray(e),
                            1 !== e[0] && (c.wrapS = Va),
                            1 !== e[1] && (c.wrapT = Va)),
                            void 0 !== r && c.offset.fromArray(r),
                            void 0 !== i && ("repeat" === i[0] && (c.wrapS = Va),
                            "mirror" === i[0] && (c.wrapS = Xa),
                            "repeat" === i[1] && (c.wrapT = Va),
                            "mirror" === i[1] && (c.wrapT = Xa)),
                            void 0 !== s && (c.anisotropy = s);
                            var d = Go.generateUUID();
                            return l[d] = c,
                            d
                        }
                        var l = {}
                          , c = {
                            uuid: Go.generateUUID(),
                            type: "MeshLambertMaterial"
                        };
                        for (var u in i) {
                            var h = i[u];
                            switch (u) {
                            case "DbgColor":
                            case "DbgIndex":
                            case "opticalDensity":
                            case "illumination":
                                break;
                            case "DbgName":
                                c.name = h;
                                break;
                            case "blending":
                                c.blending = t[h];
                                break;
                            case "colorAmbient":
                            case "mapAmbient":
                                console.warn("THREE.Loader.createMaterial:", u, "is no longer supported.");
                                break;
                            case "colorDiffuse":
                                c.color = e.fromArray(h).getHex();
                                break;
                            case "colorSpecular":
                                c.specular = e.fromArray(h).getHex();
                                break;
                            case "colorEmissive":
                                c.emissive = e.fromArray(h).getHex();
                                break;
                            case "specularCoef":
                                c.shininess = h;
                                break;
                            case "shading":
                                "basic" === h.toLowerCase() && (c.type = "MeshBasicMaterial"),
                                "phong" === h.toLowerCase() && (c.type = "MeshPhongMaterial"),
                                "standard" === h.toLowerCase() && (c.type = "MeshStandardMaterial");
                                break;
                            case "mapDiffuse":
                                c.map = s(h, i.mapDiffuseRepeat, i.mapDiffuseOffset, i.mapDiffuseWrap, i.mapDiffuseAnisotropy);
                                break;
                            case "mapDiffuseRepeat":
                            case "mapDiffuseOffset":
                            case "mapDiffuseWrap":
                            case "mapDiffuseAnisotropy":
                                break;
                            case "mapEmissive":
                                c.emissiveMap = s(h, i.mapEmissiveRepeat, i.mapEmissiveOffset, i.mapEmissiveWrap, i.mapEmissiveAnisotropy);
                                break;
                            case "mapEmissiveRepeat":
                            case "mapEmissiveOffset":
                            case "mapEmissiveWrap":
                            case "mapEmissiveAnisotropy":
                                break;
                            case "mapLight":
                                c.lightMap = s(h, i.mapLightRepeat, i.mapLightOffset, i.mapLightWrap, i.mapLightAnisotropy);
                                break;
                            case "mapLightRepeat":
                            case "mapLightOffset":
                            case "mapLightWrap":
                            case "mapLightAnisotropy":
                                break;
                            case "mapAO":
                                c.aoMap = s(h, i.mapAORepeat, i.mapAOOffset, i.mapAOWrap, i.mapAOAnisotropy);
                                break;
                            case "mapAORepeat":
                            case "mapAOOffset":
                            case "mapAOWrap":
                            case "mapAOAnisotropy":
                                break;
                            case "mapBump":
                                c.bumpMap = s(h, i.mapBumpRepeat, i.mapBumpOffset, i.mapBumpWrap, i.mapBumpAnisotropy);
                                break;
                            case "mapBumpScale":
                                c.bumpScale = h;
                                break;
                            case "mapBumpRepeat":
                            case "mapBumpOffset":
                            case "mapBumpWrap":
                            case "mapBumpAnisotropy":
                                break;
                            case "mapNormal":
                                c.normalMap = s(h, i.mapNormalRepeat, i.mapNormalOffset, i.mapNormalWrap, i.mapNormalAnisotropy);
                                break;
                            case "mapNormalFactor":
                                c.normalScale = [h, h];
                                break;
                            case "mapNormalRepeat":
                            case "mapNormalOffset":
                            case "mapNormalWrap":
                            case "mapNormalAnisotropy":
                                break;
                            case "mapSpecular":
                                c.specularMap = s(h, i.mapSpecularRepeat, i.mapSpecularOffset, i.mapSpecularWrap, i.mapSpecularAnisotropy);
                                break;
                            case "mapSpecularRepeat":
                            case "mapSpecularOffset":
                            case "mapSpecularWrap":
                            case "mapSpecularAnisotropy":
                                break;
                            case "mapMetalness":
                                c.metalnessMap = s(h, i.mapMetalnessRepeat, i.mapMetalnessOffset, i.mapMetalnessWrap, i.mapMetalnessAnisotropy);
                                break;
                            case "mapMetalnessRepeat":
                            case "mapMetalnessOffset":
                            case "mapMetalnessWrap":
                            case "mapMetalnessAnisotropy":
                                break;
                            case "mapRoughness":
                                c.roughnessMap = s(h, i.mapRoughnessRepeat, i.mapRoughnessOffset, i.mapRoughnessWrap, i.mapRoughnessAnisotropy);
                                break;
                            case "mapRoughnessRepeat":
                            case "mapRoughnessOffset":
                            case "mapRoughnessWrap":
                            case "mapRoughnessAnisotropy":
                                break;
                            case "mapAlpha":
                                c.alphaMap = s(h, i.mapAlphaRepeat, i.mapAlphaOffset, i.mapAlphaWrap, i.mapAlphaAnisotropy);
                                break;
                            case "mapAlphaRepeat":
                            case "mapAlphaOffset":
                            case "mapAlphaWrap":
                            case "mapAlphaAnisotropy":
                                break;
                            case "flipSided":
                                c.side = Yi;
                                break;
                            case "doubleSided":
                                c.side = $i;
                                break;
                            case "transparency":
                                console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),
                                c.opacity = h;
                                break;
                            case "depthTest":
                            case "depthWrite":
                            case "colorWrite":
                            case "opacity":
                            case "reflectivity":
                            case "transparent":
                            case "visible":
                            case "wireframe":
                                c[u] = h;
                                break;
                            case "vertexColors":
                                !0 === h && (c.vertexColors = Ki),
                                "face" === h && (c.vertexColors = Ji);
                                break;
                            default:
                                console.error("THREE.Loader.createMaterial: Unsupported", u, h)
                            }
                        }
                        return "MeshBasicMaterial" === c.type && delete c.emissive,
                        "MeshPhongMaterial" !== c.type && delete c.specular,
                        c.opacity < 1 && (c.transparent = !0),
                        r.setTextures(l),
                        r.parse(c)
                    }
                }()
            }),
            Object.assign(gr.prototype, {
                load: function(t, e, n, r) {
                    var i = this
                      , a = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : vr.prototype.extractUrlBase(t)
                      , o = new Bn(this.manager);
                    o.setWithCredentials(this.withCredentials),
                    o.load(t, function(n) {
                        var r = JSON.parse(n)
                          , o = r.metadata;
                        if (void 0 !== o) {
                            var s = o.type;
                            if (void 0 !== s) {
                                if ("object" === s.toLowerCase())
                                    return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.ObjectLoader instead.");
                                if ("scene" === s.toLowerCase())
                                    return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.SceneLoader instead.")
                            }
                        }
                        var l = i.parse(r, a);
                        e(l.geometry, l.materials)
                    }, n, r)
                },
                setTexturePath: function(t) {
                    this.texturePath = t
                },
                parse: function() {
                    function t(t, e) {
                        function r(t, e) {
                            return t & 1 << e
                        }
                        var i, a, o, s, c, u, h, d, p, f, m, v, g, y, x, b, _, w, M, E, T, S, A, L, R, P = t.faces, C = t.vertices, I = t.normals, O = t.colors, N = t.scale, D = 0;
                        if (void 0 !== t.uvs) {
                            for (i = 0; i < t.uvs.length; i++)
                                t.uvs[i].length && D++;
                            for (i = 0; i < D; i++)
                                e.faceVertexUvs[i] = []
                        }
                        for (s = 0,
                        c = C.length; s < c; )
                            (w = new l).x = C[s++] * N,
                            w.y = C[s++] * N,
                            w.z = C[s++] * N,
                            e.vertices.push(w);
                        for (s = 0,
                        c = P.length; s < c; )
                            if (f = P[s++],
                            m = r(f, 0),
                            v = r(f, 1),
                            g = r(f, 3),
                            y = r(f, 4),
                            x = r(f, 5),
                            b = r(f, 6),
                            _ = r(f, 7),
                            m) {
                                if (E = new ft,
                                E.a = P[s],
                                E.b = P[s + 1],
                                E.c = P[s + 3],
                                T = new ft,
                                T.a = P[s + 1],
                                T.b = P[s + 2],
                                T.c = P[s + 3],
                                s += 4,
                                v && (p = P[s++],
                                E.materialIndex = p,
                                T.materialIndex = p),
                                o = e.faces.length,
                                g)
                                    for (i = 0; i < D; i++)
                                        for (L = t.uvs[i],
                                        e.faceVertexUvs[i][o] = [],
                                        e.faceVertexUvs[i][o + 1] = [],
                                        a = 0; a < 4; a++)
                                            R = new n(L[2 * (d = P[s++])],L[2 * d + 1]),
                                            2 !== a && e.faceVertexUvs[i][o].push(R),
                                            0 !== a && e.faceVertexUvs[i][o + 1].push(R);
                                if (y && (h = 3 * P[s++],
                                E.normal.set(I[h++], I[h++], I[h]),
                                T.normal.copy(E.normal)),
                                x)
                                    for (i = 0; i < 4; i++)
                                        h = 3 * P[s++],
                                        A = new l(I[h++],I[h++],I[h]),
                                        2 !== i && E.vertexNormals.push(A),
                                        0 !== i && T.vertexNormals.push(A);
                                if (b && (S = O[u = P[s++]],
                                E.color.setHex(S),
                                T.color.setHex(S)),
                                _)
                                    for (i = 0; i < 4; i++)
                                        S = O[u = P[s++]],
                                        2 !== i && E.vertexColors.push(new X(S)),
                                        0 !== i && T.vertexColors.push(new X(S));
                                e.faces.push(E),
                                e.faces.push(T)
                            } else {
                                if (M = new ft,
                                M.a = P[s++],
                                M.b = P[s++],
                                M.c = P[s++],
                                v && (p = P[s++],
                                M.materialIndex = p),
                                o = e.faces.length,
                                g)
                                    for (i = 0; i < D; i++)
                                        for (L = t.uvs[i],
                                        e.faceVertexUvs[i][o] = [],
                                        a = 0; a < 3; a++)
                                            R = new n(L[2 * (d = P[s++])],L[2 * d + 1]),
                                            e.faceVertexUvs[i][o].push(R);
                                if (y && (h = 3 * P[s++],
                                M.normal.set(I[h++], I[h++], I[h])),
                                x)
                                    for (i = 0; i < 3; i++)
                                        h = 3 * P[s++],
                                        A = new l(I[h++],I[h++],I[h]),
                                        M.vertexNormals.push(A);
                                if (b && (u = P[s++],
                                M.color.setHex(O[u])),
                                _)
                                    for (i = 0; i < 3; i++)
                                        u = P[s++],
                                        M.vertexColors.push(new X(O[u]));
                                e.faces.push(M)
                            }
                    }
                    function e(t, e) {
                        var n = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
                        if (t.skinWeights)
                            for (var r = 0, a = t.skinWeights.length; r < a; r += n) {
                                var o = t.skinWeights[r]
                                  , s = n > 1 ? t.skinWeights[r + 1] : 0
                                  , l = n > 2 ? t.skinWeights[r + 2] : 0
                                  , c = n > 3 ? t.skinWeights[r + 3] : 0;
                                e.skinWeights.push(new i(o,s,l,c))
                            }
                        if (t.skinIndices)
                            for (var r = 0, a = t.skinIndices.length; r < a; r += n) {
                                var u = t.skinIndices[r]
                                  , h = n > 1 ? t.skinIndices[r + 1] : 0
                                  , d = n > 2 ? t.skinIndices[r + 2] : 0
                                  , p = n > 3 ? t.skinIndices[r + 3] : 0;
                                e.skinIndices.push(new i(u,h,d,p))
                            }
                        e.bones = t.bones,
                        e.bones && e.bones.length > 0 && (e.skinWeights.length !== e.skinIndices.length || e.skinIndices.length !== e.vertices.length) && console.warn("When skinning, number of vertices (" + e.vertices.length + "), skinIndices (" + e.skinIndices.length + "), and skinWeights (" + e.skinWeights.length + ") should match.")
                    }
                    function r(t, e) {
                        var n = t.scale;
                        if (void 0 !== t.morphTargets)
                            for (var r = 0, i = t.morphTargets.length; r < i; r++) {
                                e.morphTargets[r] = {},
                                e.morphTargets[r].name = t.morphTargets[r].name,
                                e.morphTargets[r].vertices = [];
                                for (var a = e.morphTargets[r].vertices, o = t.morphTargets[r].vertices, s = 0, c = o.length; s < c; s += 3) {
                                    var u = new l;
                                    u.x = o[s] * n,
                                    u.y = o[s + 1] * n,
                                    u.z = o[s + 2] * n,
                                    a.push(u)
                                }
                            }
                        if (void 0 !== t.morphColors && t.morphColors.length > 0) {
                            console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
                            for (var h = e.faces, d = t.morphColors[0].colors, r = 0, i = h.length; r < i; r++)
                                h[r].color.fromArray(d, 3 * r)
                        }
                    }
                    function a(t, e) {
                        var n = []
                          , r = [];
                        void 0 !== t.animation && r.push(t.animation),
                        void 0 !== t.animations && (t.animations.length ? r = r.concat(t.animations) : r.push(t.animations));
                        for (var i = 0; i < r.length; i++) {
                            var a = pr.parseAnimation(r[i], e.bones);
                            a && n.push(a)
                        }
                        if (e.morphTargets) {
                            var o = pr.CreateClipsFromMorphTargetSequences(e.morphTargets, 10);
                            n = n.concat(o)
                        }
                        n.length > 0 && (e.animations = n)
                    }
                    return function(n, i) {
                        void 0 !== n.data && (n = n.data),
                        void 0 !== n.scale ? n.scale = 1 / n.scale : n.scale = 1;
                        var o = new vt;
                        return t(n, o),
                        e(n, o),
                        r(n, o),
                        a(n, o),
                        o.computeFaceNormals(),
                        o.computeBoundingSphere(),
                        void 0 === n.materials || 0 === n.materials.length ? {
                            geometry: o
                        } : {
                            geometry: o,
                            materials: vr.prototype.initMaterials(n.materials, i, this.crossOrigin)
                        }
                    }
                }()
            }),
            Object.assign(yr.prototype, {
                load: function(t, e, n, r) {
                    "" === this.texturePath && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
                    var i = this;
                    new Bn(i.manager).load(t, function(n) {
                        var a = null;
                        try {
                            a = JSON.parse(n)
                        } catch (e) {
                            return void 0 !== r && r(e),
                            void console.error("THREE:ObjectLoader: Can't parse " + t + ".", e.message)
                        }
                        var o = a.metadata;
                        void 0 !== o && void 0 !== o.type && "geometry" !== o.type.toLowerCase() ? i.parse(a, e) : console.error("THREE.ObjectLoader: Can't load " + t + ". Use THREE.JSONLoader instead.")
                    }, n, r)
                },
                setTexturePath: function(t) {
                    this.texturePath = t
                },
                setCrossOrigin: function(t) {
                    this.crossOrigin = t
                },
                parse: function(t, e) {
                    var n = this.parseGeometries(t.geometries)
                      , r = this.parseImages(t.images, function() {
                        void 0 !== e && e(o)
                    })
                      , i = this.parseTextures(t.textures, r)
                      , a = this.parseMaterials(t.materials, i)
                      , o = this.parseObject(t.object, n, a);
                    return t.animations && (o.animations = this.parseAnimations(t.animations)),
                    void 0 !== t.images && 0 !== t.images.length || void 0 !== e && e(o),
                    o
                },
                parseGeometries: function(t) {
                    var e = {};
                    if (void 0 !== t)
                        for (var n = new gr, r = new mr, i = 0, a = t.length; i < a; i++) {
                            var o, s = t[i];
                            switch (s.type) {
                            case "PlaneGeometry":
                            case "PlaneBufferGeometry":
                                o = new ls[s.type](s.width,s.height,s.widthSegments,s.heightSegments);
                                break;
                            case "BoxGeometry":
                            case "BoxBufferGeometry":
                            case "CubeGeometry":
                                o = new ls[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);
                                break;
                            case "CircleGeometry":
                            case "CircleBufferGeometry":
                                o = new ls[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);
                                break;
                            case "CylinderGeometry":
                            case "CylinderBufferGeometry":
                                o = new ls[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);
                                break;
                            case "ConeGeometry":
                            case "ConeBufferGeometry":
                                o = new ls[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);
                                break;
                            case "SphereGeometry":
                            case "SphereBufferGeometry":
                                o = new ls[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);
                                break;
                            case "DodecahedronGeometry":
                            case "IcosahedronGeometry":
                            case "OctahedronGeometry":
                            case "TetrahedronGeometry":
                                o = new ls[s.type](s.radius,s.detail);
                                break;
                            case "RingGeometry":
                            case "RingBufferGeometry":
                                o = new ls[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);
                                break;
                            case "TorusGeometry":
                            case "TorusBufferGeometry":
                                o = new ls[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);
                                break;
                            case "TorusKnotGeometry":
                            case "TorusKnotBufferGeometry":
                                o = new ls[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);
                                break;
                            case "LatheGeometry":
                            case "LatheBufferGeometry":
                                o = new ls[s.type](s.points,s.segments,s.phiStart,s.phiLength);
                                break;
                            case "BufferGeometry":
                                o = r.parse(s);
                                break;
                            case "Geometry":
                                o = n.parse(s, this.texturePath).geometry;
                                break;
                            default:
                                console.warn('THREE.ObjectLoader: Unsupported geometry type "' + s.type + '"');
                                continue
                            }
                            o.uuid = s.uuid,
                            void 0 !== s.name && (o.name = s.name),
                            e[s.uuid] = o
                        }
                    return e
                },
                parseMaterials: function(t, e) {
                    var n = {};
                    if (void 0 !== t) {
                        var r = new fr;
                        r.setTextures(e);
                        for (var i = 0, a = t.length; i < a; i++) {
                            var o = t[i];
                            if ("MultiMaterial" === o.type) {
                                for (var s = [], l = 0; l < o.materials.length; l++)
                                    s.push(r.parse(o.materials[l]));
                                n[o.uuid] = s
                            } else
                                n[o.uuid] = r.parse(o)
                        }
                    }
                    return n
                },
                parseAnimations: function(t) {
                    for (var e = [], n = 0; n < t.length; n++) {
                        var r = pr.parse(t[n]);
                        e.push(r)
                    }
                    return e
                },
                parseImages: function(t, e) {
                    var n = this
                      , r = {};
                    if (void 0 !== t && t.length > 0) {
                        var i = new jn(new kn(e));
                        i.setCrossOrigin(this.crossOrigin);
                        for (var a = 0, o = t.length; a < o; a++) {
                            var s = t[a]
                              , l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(s.url) ? s.url : n.texturePath + s.url;
                            r[s.uuid] = function(t) {
                                return n.manager.itemStart(t),
                                i.load(t, function() {
                                    n.manager.itemEnd(t)
                                }, void 0, function() {
                                    n.manager.itemEnd(t),
                                    n.manager.itemError(t)
                                })
                            }(l)
                        }
                    }
                    return r
                },
                parseTextures: function(t, e) {
                    function n(t, e) {
                        return "number" == typeof t ? t : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", t),
                        e[t])
                    }
                    var i = {};
                    if (void 0 !== t)
                        for (var a = 0, o = t.length; a < o; a++) {
                            var s = t[a];
                            void 0 === s.image && console.warn('THREE.ObjectLoader: No "image" specified for', s.uuid),
                            void 0 === e[s.image] && console.warn("THREE.ObjectLoader: Undefined image", s.image);
                            var l = new r(e[s.image]);
                            l.needsUpdate = !0,
                            l.uuid = s.uuid,
                            void 0 !== s.name && (l.name = s.name),
                            void 0 !== s.mapping && (l.mapping = n(s.mapping, ms)),
                            void 0 !== s.offset && l.offset.fromArray(s.offset),
                            void 0 !== s.repeat && l.repeat.fromArray(s.repeat),
                            void 0 !== s.wrap && (l.wrapS = n(s.wrap[0], vs),
                            l.wrapT = n(s.wrap[1], vs)),
                            void 0 !== s.minFilter && (l.minFilter = n(s.minFilter, gs)),
                            void 0 !== s.magFilter && (l.magFilter = n(s.magFilter, gs)),
                            void 0 !== s.anisotropy && (l.anisotropy = s.anisotropy),
                            void 0 !== s.flipY && (l.flipY = s.flipY),
                            i[s.uuid] = l
                        }
                    return i
                },
                parseObject: function() {
                    var t = new c;
                    return function(e, n, r) {
                        function i(t) {
                            return void 0 === n[t] && console.warn("THREE.ObjectLoader: Undefined geometry", t),
                            n[t]
                        }
                        function a(t) {
                            if (void 0 !== t) {
                                if (Array.isArray(t)) {
                                    for (var e = [], n = 0, i = t.length; n < i; n++) {
                                        var a = t[n];
                                        void 0 === r[a] && console.warn("THREE.ObjectLoader: Undefined material", a),
                                        e.push(r[a])
                                    }
                                    return e
                                }
                                return void 0 === r[t] && console.warn("THREE.ObjectLoader: Undefined material", t),
                                r[t]
                            }
                        }
                        var o;
                        switch (e.type) {
                        case "Scene":
                            o = new Te,
                            void 0 !== e.background && Number.isInteger(e.background) && (o.background = new X(e.background)),
                            void 0 !== e.fog && ("Fog" === e.fog.type ? o.fog = new Ee(e.fog.color,e.fog.near,e.fog.far) : "FogExp2" === e.fog.type && (o.fog = new Me(e.fog.color,e.fog.density)));
                            break;
                        case "PerspectiveCamera":
                            o = new pt(e.fov,e.aspect,e.near,e.far),
                            void 0 !== e.focus && (o.focus = e.focus),
                            void 0 !== e.zoom && (o.zoom = e.zoom),
                            void 0 !== e.filmGauge && (o.filmGauge = e.filmGauge),
                            void 0 !== e.filmOffset && (o.filmOffset = e.filmOffset),
                            void 0 !== e.view && (o.view = Object.assign({}, e.view));
                            break;
                        case "OrthographicCamera":
                            o = new dt(e.left,e.right,e.top,e.bottom,e.near,e.far);
                            break;
                        case "AmbientLight":
                            o = new Kn(e.color,e.intensity);
                            break;
                        case "DirectionalLight":
                            o = new Jn(e.color,e.intensity);
                            break;
                        case "PointLight":
                            o = new $n(e.color,e.intensity,e.distance,e.decay);
                            break;
                        case "RectAreaLight":
                            o = new Qn(e.color,e.intensity,e.width,e.height);
                            break;
                        case "SpotLight":
                            o = new Yn(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);
                            break;
                        case "HemisphereLight":
                            o = new Wn(e.color,e.groundColor,e.intensity);
                            break;
                        case "SkinnedMesh":
                            console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
                        case "Mesh":
                            var s = i(e.geometry)
                              , l = a(e.material);
                            o = s.bones && s.bones.length > 0 ? new Ie(s,l) : new Bt(s,l);
                            break;
                        case "LOD":
                            o = new Re;
                            break;
                        case "Line":
                            o = new Ne(i(e.geometry),a(e.material),e.mode);
                            break;
                        case "LineLoop":
                            o = new Ue(i(e.geometry),a(e.material));
                            break;
                        case "LineSegments":
                            o = new De(i(e.geometry),a(e.material));
                            break;
                        case "PointCloud":
                        case "Points":
                            o = new Be(i(e.geometry),a(e.material));
                            break;
                        case "Sprite":
                            o = new Le(a(e.material));
                            break;
                        case "Group":
                            o = new Fe;
                            break;
                        default:
                            o = new ut
                        }
                        if (o.uuid = e.uuid,
                        void 0 !== e.name && (o.name = e.name),
                        void 0 !== e.matrix ? (t.fromArray(e.matrix),
                        t.decompose(o.position, o.quaternion, o.scale)) : (void 0 !== e.position && o.position.fromArray(e.position),
                        void 0 !== e.rotation && o.rotation.fromArray(e.rotation),
                        void 0 !== e.quaternion && o.quaternion.fromArray(e.quaternion),
                        void 0 !== e.scale && o.scale.fromArray(e.scale)),
                        void 0 !== e.castShadow && (o.castShadow = e.castShadow),
                        void 0 !== e.receiveShadow && (o.receiveShadow = e.receiveShadow),
                        e.shadow && (void 0 !== e.shadow.bias && (o.shadow.bias = e.shadow.bias),
                        void 0 !== e.shadow.radius && (o.shadow.radius = e.shadow.radius),
                        void 0 !== e.shadow.mapSize && o.shadow.mapSize.fromArray(e.shadow.mapSize),
                        void 0 !== e.shadow.camera && (o.shadow.camera = this.parseObject(e.shadow.camera))),
                        void 0 !== e.visible && (o.visible = e.visible),
                        void 0 !== e.userData && (o.userData = e.userData),
                        void 0 !== e.children)
                            for (var c = e.children, u = 0; u < c.length; u++)
                                o.add(this.parseObject(c[u], n, r));
                        if ("LOD" === e.type)
                            for (var h = e.levels, d = 0; d < h.length; d++) {
                                var p = h[d]
                                  , f = o.getObjectByProperty("uuid", p.object);
                                void 0 !== f && o.addLevel(f, p.distance)
                            }
                        return o
                    }
                }()
            });
            var ms = {
                UVMapping: 300,
                CubeReflectionMapping: ka,
                CubeRefractionMapping: Ba,
                EquirectangularReflectionMapping: Fa,
                EquirectangularRefractionMapping: za,
                SphericalReflectionMapping: ja,
                CubeUVReflectionMapping: Ha,
                CubeUVRefractionMapping: Ga
            }
              , vs = {
                RepeatWrapping: Va,
                ClampToEdgeWrapping: Wa,
                MirroredRepeatWrapping: Xa
            }
              , gs = {
                NearestFilter: qa,
                NearestMipMapNearestFilter: Ya,
                NearestMipMapLinearFilter: $a,
                LinearFilter: Za,
                LinearMipMapNearestFilter: Ja,
                LinearMipMapLinearFilter: Ka
            };
            Object.assign(Rr.prototype, {
                getPoint: function() {
                    return console.warn("THREE.Curve: .getPoint() not implemented."),
                    null
                },
                getPointAt: function(t) {
                    var e = this.getUtoTmapping(t);
                    return this.getPoint(e)
                },
                getPoints: function(t) {
                    void 0 === t && (t = 5);
                    for (var e = [], n = 0; n <= t; n++)
                        e.push(this.getPoint(n / t));
                    return e
                },
                getSpacedPoints: function(t) {
                    void 0 === t && (t = 5);
                    for (var e = [], n = 0; n <= t; n++)
                        e.push(this.getPointAt(n / t));
                    return e
                },
                getLength: function() {
                    var t = this.getLengths();
                    return t[t.length - 1]
                },
                getLengths: function(t) {
                    if (void 0 === t && (t = this.arcLengthDivisions),
                    this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate)
                        return this.cacheArcLengths;
                    this.needsUpdate = !1;
                    var e, n, r = [], i = this.getPoint(0), a = 0;
                    for (r.push(0),
                    n = 1; n <= t; n++)
                        a += (e = this.getPoint(n / t)).distanceTo(i),
                        r.push(a),
                        i = e;
                    return this.cacheArcLengths = r,
                    r
                },
                updateArcLengths: function() {
                    this.needsUpdate = !0,
                    this.getLengths()
                },
                getUtoTmapping: function(t, e) {
                    var n, r = this.getLengths(), i = 0, a = r.length;
                    n = e || t * r[a - 1];
                    for (var o, s = 0, l = a - 1; s <= l; )
                        if (i = Math.floor(s + (l - s) / 2),
                        (o = r[i] - n) < 0)
                            s = i + 1;
                        else {
                            if (!(o > 0)) {
                                l = i;
                                break
                            }
                            l = i - 1
                        }
                    if (i = l,
                    r[i] === n)
                        return i / (a - 1);
                    var c = r[i];
                    return (i + (n - c) / (r[i + 1] - c)) / (a - 1)
                },
                getTangent: function(t) {
                    var e = t - 1e-4
                      , n = t + 1e-4;
                    e < 0 && (e = 0),
                    n > 1 && (n = 1);
                    var r = this.getPoint(e);
                    return this.getPoint(n).clone().sub(r).normalize()
                },
                getTangentAt: function(t) {
                    var e = this.getUtoTmapping(t);
                    return this.getTangent(e)
                },
                computeFrenetFrames: function(t, e) {
                    var n, r, i, a = new l, o = [], s = [], u = [], h = new l, d = new c;
                    for (n = 0; n <= t; n++)
                        r = n / t,
                        o[n] = this.getTangentAt(r),
                        o[n].normalize();
                    s[0] = new l,
                    u[0] = new l;
                    var p = Number.MAX_VALUE
                      , f = Math.abs(o[0].x)
                      , m = Math.abs(o[0].y)
                      , v = Math.abs(o[0].z);
                    for (f <= p && (p = f,
                    a.set(1, 0, 0)),
                    m <= p && (p = m,
                    a.set(0, 1, 0)),
                    v <= p && a.set(0, 0, 1),
                    h.crossVectors(o[0], a).normalize(),
                    s[0].crossVectors(o[0], h),
                    u[0].crossVectors(o[0], s[0]),
                    n = 1; n <= t; n++)
                        s[n] = s[n - 1].clone(),
                        u[n] = u[n - 1].clone(),
                        h.crossVectors(o[n - 1], o[n]),
                        h.length() > Number.EPSILON && (h.normalize(),
                        i = Math.acos(Go.clamp(o[n - 1].dot(o[n]), -1, 1)),
                        s[n].applyMatrix4(d.makeRotationAxis(h, i))),
                        u[n].crossVectors(o[n], s[n]);
                    if (!0 === e)
                        for (i = Math.acos(Go.clamp(s[0].dot(s[t]), -1, 1)),
                        i /= t,
                        o[0].dot(h.crossVectors(s[0], s[t])) > 0 && (i = -i),
                        n = 1; n <= t; n++)
                            s[n].applyMatrix4(d.makeRotationAxis(o[n], i * n)),
                            u[n].crossVectors(o[n], s[n]);
                    return {
                        tangents: o,
                        normals: s,
                        binormals: u
                    }
                }
            }),
            (Pr.prototype = Object.create(Rr.prototype)).constructor = Pr,
            Pr.prototype.isLineCurve = !0,
            Pr.prototype.getPoint = function(t) {
                if (1 === t)
                    return this.v2.clone();
                var e = this.v2.clone().sub(this.v1);
                return e.multiplyScalar(t).add(this.v1),
                e
            }
            ,
            Pr.prototype.getPointAt = function(t) {
                return this.getPoint(t)
            }
            ,
            Pr.prototype.getTangent = function(t) {
                return this.v2.clone().sub(this.v1).normalize()
            }
            ,
            Cr.prototype = Object.assign(Object.create(Rr.prototype), {
                constructor: Cr,
                add: function(t) {
                    this.curves.push(t)
                },
                closePath: function() {
                    var t = this.curves[0].getPoint(0)
                      , e = this.curves[this.curves.length - 1].getPoint(1);
                    t.equals(e) || this.curves.push(new Pr(e,t))
                },
                getPoint: function(t) {
                    for (var e = t * this.getLength(), n = this.getCurveLengths(), r = 0; r < n.length; ) {
                        if (n[r] >= e) {
                            var i = n[r] - e
                              , a = this.curves[r]
                              , o = a.getLength()
                              , s = 0 === o ? 0 : 1 - i / o;
                            return a.getPointAt(s)
                        }
                        r++
                    }
                    return null
                },
                getLength: function() {
                    var t = this.getCurveLengths();
                    return t[t.length - 1]
                },
                updateArcLengths: function() {
                    this.needsUpdate = !0,
                    this.cacheLengths = null,
                    this.getCurveLengths()
                },
                getCurveLengths: function() {
                    if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                        return this.cacheLengths;
                    for (var t = [], e = 0, n = 0, r = this.curves.length; n < r; n++)
                        e += this.curves[n].getLength(),
                        t.push(e);
                    return this.cacheLengths = t,
                    t
                },
                getSpacedPoints: function(t) {
                    void 0 === t && (t = 40);
                    for (var e = [], n = 0; n <= t; n++)
                        e.push(this.getPoint(n / t));
                    return this.autoClose && e.push(e[0]),
                    e
                },
                getPoints: function(t) {
                    t = t || 12;
                    for (var e, n = [], r = 0, i = this.curves; r < i.length; r++)
                        for (var a = i[r], o = a && a.isEllipseCurve ? 2 * t : a && a.isLineCurve ? 1 : a && a.isSplineCurve ? t * a.points.length : t, s = a.getPoints(o), l = 0; l < s.length; l++) {
                            var c = s[l];
                            e && e.equals(c) || (n.push(c),
                            e = c)
                        }
                    return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]),
                    n
                },
                createPointsGeometry: function(t) {
                    var e = this.getPoints(t);
                    return this.createGeometry(e)
                },
                createSpacedPointsGeometry: function(t) {
                    var e = this.getSpacedPoints(t);
                    return this.createGeometry(e)
                },
                createGeometry: function(t) {
                    for (var e = new vt, n = 0, r = t.length; n < r; n++) {
                        var i = t[n];
                        e.vertices.push(new l(i.x,i.y,i.z || 0))
                    }
                    return e
                }
            }),
            Ir.prototype = Object.create(Rr.prototype),
            Ir.prototype.constructor = Ir,
            Ir.prototype.isEllipseCurve = !0,
            Ir.prototype.getPoint = function(t) {
                for (var e = 2 * Math.PI, r = this.aEndAngle - this.aStartAngle, i = Math.abs(r) < Number.EPSILON; r < 0; )
                    r += e;
                for (; r > e; )
                    r -= e;
                r < Number.EPSILON && (r = i ? 0 : e),
                !0 !== this.aClockwise || i || (r === e ? r = -e : r -= e);
                var a = this.aStartAngle + t * r
                  , o = this.aX + this.xRadius * Math.cos(a)
                  , s = this.aY + this.yRadius * Math.sin(a);
                if (0 !== this.aRotation) {
                    var l = Math.cos(this.aRotation)
                      , c = Math.sin(this.aRotation)
                      , u = o - this.aX
                      , h = s - this.aY;
                    o = u * l - h * c + this.aX,
                    s = u * c + h * l + this.aY
                }
                return new n(o,s)
            }
            ,
            (Or.prototype = Object.create(Rr.prototype)).constructor = Or,
            Or.prototype.isSplineCurve = !0,
            Or.prototype.getPoint = function(t) {
                var e = this.points
                  , r = (e.length - 1) * t
                  , i = Math.floor(r)
                  , a = r - i
                  , o = e[0 === i ? i : i - 1]
                  , s = e[i]
                  , l = e[i > e.length - 2 ? e.length - 1 : i + 1]
                  , c = e[i > e.length - 3 ? e.length - 1 : i + 2];
                return new n(xr(a, o.x, s.x, l.x, c.x),xr(a, o.y, s.y, l.y, c.y))
            }
            ,
            (Nr.prototype = Object.create(Rr.prototype)).constructor = Nr,
            Nr.prototype.getPoint = function(t) {
                var e = this.v0
                  , r = this.v1
                  , i = this.v2
                  , a = this.v3;
                return new n(Lr(t, e.x, r.x, i.x, a.x),Lr(t, e.y, r.y, i.y, a.y))
            }
            ,
            (Dr.prototype = Object.create(Rr.prototype)).constructor = Dr,
            Dr.prototype.getPoint = function(t) {
                var e = this.v0
                  , r = this.v1
                  , i = this.v2;
                return new n(Mr(t, e.x, r.x, i.x),Mr(t, e.y, r.y, i.y))
            }
            ;
            var ys = Object.assign(Object.create(Cr.prototype), {
                fromPoints: function(t) {
                    this.moveTo(t[0].x, t[0].y);
                    for (var e = 1, n = t.length; e < n; e++)
                        this.lineTo(t[e].x, t[e].y)
                },
                moveTo: function(t, e) {
                    this.currentPoint.set(t, e)
                },
                lineTo: function(t, e) {
                    var r = new Pr(this.currentPoint.clone(),new n(t,e));
                    this.curves.push(r),
                    this.currentPoint.set(t, e)
                },
                quadraticCurveTo: function(t, e, r, i) {
                    var a = new Dr(this.currentPoint.clone(),new n(t,e),new n(r,i));
                    this.curves.push(a),
                    this.currentPoint.set(r, i)
                },
                bezierCurveTo: function(t, e, r, i, a, o) {
                    var s = new Nr(this.currentPoint.clone(),new n(t,e),new n(r,i),new n(a,o));
                    this.curves.push(s),
                    this.currentPoint.set(a, o)
                },
                splineThru: function(t) {
                    var e = new Or([this.currentPoint.clone()].concat(t));
                    this.curves.push(e),
                    this.currentPoint.copy(t[t.length - 1])
                },
                arc: function(t, e, n, r, i, a) {
                    var o = this.currentPoint.x
                      , s = this.currentPoint.y;
                    this.absarc(t + o, e + s, n, r, i, a)
                },
                absarc: function(t, e, n, r, i, a) {
                    this.absellipse(t, e, n, n, r, i, a)
                },
                ellipse: function(t, e, n, r, i, a, o, s) {
                    var l = this.currentPoint.x
                      , c = this.currentPoint.y;
                    this.absellipse(t + l, e + c, n, r, i, a, o, s)
                },
                absellipse: function(t, e, n, r, i, a, o, s) {
                    var l = new Ir(t,e,n,r,i,a,o,s);
                    if (this.curves.length > 0) {
                        var c = l.getPoint(0);
                        c.equals(this.currentPoint) || this.lineTo(c.x, c.y)
                    }
                    this.curves.push(l);
                    var u = l.getPoint(1);
                    this.currentPoint.copy(u)
                }
            });
            Ur.prototype = ys,
            ys.constructor = Ur,
            kr.prototype = Object.assign(Object.create(ys), {
                constructor: kr,
                getPointsHoles: function(t) {
                    for (var e = [], n = 0, r = this.holes.length; n < r; n++)
                        e[n] = this.holes[n].getPoints(t);
                    return e
                },
                extractAllPoints: function(t) {
                    return {
                        shape: this.getPoints(t),
                        holes: this.getPointsHoles(t)
                    }
                },
                extractPoints: function(t) {
                    return this.extractAllPoints(t)
                }
            }),
            Object.assign(Br.prototype, {
                moveTo: function(t, e) {
                    this.currentPath = new Ur,
                    this.subPaths.push(this.currentPath),
                    this.currentPath.moveTo(t, e)
                },
                lineTo: function(t, e) {
                    this.currentPath.lineTo(t, e)
                },
                quadraticCurveTo: function(t, e, n, r) {
                    this.currentPath.quadraticCurveTo(t, e, n, r)
                },
                bezierCurveTo: function(t, e, n, r, i, a) {
                    this.currentPath.bezierCurveTo(t, e, n, r, i, a)
                },
                splineThru: function(t) {
                    this.currentPath.splineThru(t)
                },
                toShapes: function(t, e) {
                    function n(t) {
                        for (var e = [], n = 0, r = t.length; n < r; n++) {
                            var i = t[n]
                              , a = new kr;
                            a.curves = i.curves,
                            e.push(a)
                        }
                        return e
                    }
                    var r = ss.isClockWise
                      , i = this.subPaths;
                    if (0 === i.length)
                        return [];
                    if (!0 === e)
                        return n(i);
                    var a, o, s, l = [];
                    if (1 === i.length)
                        return o = i[0],
                        s = new kr,
                        s.curves = o.curves,
                        l.push(s),
                        l;
                    var c = !r(i[0].getPoints());
                    c = t ? !c : c;
                    var u, h = [], d = [], p = [], f = 0;
                    d[f] = void 0,
                    p[f] = [];
                    for (var m = 0, v = i.length; m < v; m++)
                        a = r(u = (o = i[m]).getPoints()),
                        (a = t ? !a : a) ? (!c && d[f] && f++,
                        d[f] = {
                            s: new kr,
                            p: u
                        },
                        d[f].s.curves = o.curves,
                        c && f++,
                        p[f] = []) : p[f].push({
                            h: o,
                            p: u[0]
                        });
                    if (!d[0])
                        return n(i);
                    if (d.length > 1) {
                        for (var g = !1, y = [], x = 0, b = d.length; x < b; x++)
                            h[x] = [];
                        for (var x = 0, b = d.length; x < b; x++)
                            for (var _ = p[x], w = 0; w < _.length; w++) {
                                for (var M = _[w], E = !0, T = 0; T < d.length; T++)
                                    (function(t, e) {
                                        for (var n = e.length, r = !1, i = n - 1, a = 0; a < n; i = a++) {
                                            var o = e[i]
                                              , s = e[a]
                                              , l = s.x - o.x
                                              , c = s.y - o.y;
                                            if (Math.abs(c) > Number.EPSILON) {
                                                if (c < 0 && (o = e[a],
                                                l = -l,
                                                s = e[i],
                                                c = -c),
                                                t.y < o.y || t.y > s.y)
                                                    continue;
                                                if (t.y === o.y) {
                                                    if (t.x === o.x)
                                                        return !0
                                                } else {
                                                    var u = c * (t.x - o.x) - l * (t.y - o.y);
                                                    if (0 === u)
                                                        return !0;
                                                    if (u < 0)
                                                        continue;
                                                    r = !r
                                                }
                                            } else {
                                                if (t.y !== o.y)
                                                    continue;
                                                if (s.x <= t.x && t.x <= o.x || o.x <= t.x && t.x <= s.x)
                                                    return !0
                                            }
                                        }
                                        return r
                                    }
                                    )(M.p, d[T].p) && (x !== T && y.push({
                                        froms: x,
                                        tos: T,
                                        hole: w
                                    }),
                                    E ? (E = !1,
                                    h[T].push(M)) : g = !0);
                                E && h[x].push(M)
                            }
                        y.length > 0 && (g || (p = h))
                    }
                    for (var S, m = 0, A = d.length; m < A; m++) {
                        s = d[m].s,
                        l.push(s);
                        for (var L = 0, R = (S = p[m]).length; L < R; L++)
                            s.holes.push(S[L].h)
                    }
                    return l
                }
            }),
            Object.assign(Fr.prototype, {
                isFont: !0,
                generateShapes: function(t, e, n) {
                    function r(t, e, r, a) {
                        var o = i.glyphs[t] || i.glyphs["?"];
                        if (o) {
                            var s, l, c, u, h, d, p, f, m, v, g, y = new Br, x = [];
                            if (o.o)
                                for (var b = o._cachedOutline || (o._cachedOutline = o.o.split(" ")), _ = 0, w = b.length; _ < w; )
                                    switch (b[_++]) {
                                    case "m":
                                        s = b[_++] * e + r,
                                        l = b[_++] * e + a,
                                        y.moveTo(s, l);
                                        break;
                                    case "l":
                                        s = b[_++] * e + r,
                                        l = b[_++] * e + a,
                                        y.lineTo(s, l);
                                        break;
                                    case "q":
                                        if (c = b[_++] * e + r,
                                        u = b[_++] * e + a,
                                        p = b[_++] * e + r,
                                        f = b[_++] * e + a,
                                        y.quadraticCurveTo(p, f, c, u),
                                        g = x[x.length - 1]) {
                                            h = g.x,
                                            d = g.y;
                                            for (M = 1; M <= n; M++)
                                                Mr(E = M / n, h, p, c),
                                                Mr(E, d, f, u)
                                        }
                                        break;
                                    case "b":
                                        if (c = b[_++] * e + r,
                                        u = b[_++] * e + a,
                                        p = b[_++] * e + r,
                                        f = b[_++] * e + a,
                                        m = b[_++] * e + r,
                                        v = b[_++] * e + a,
                                        y.bezierCurveTo(p, f, m, v, c, u),
                                        g = x[x.length - 1]) {
                                            h = g.x,
                                            d = g.y;
                                            for (var M = 1; M <= n; M++) {
                                                var E = M / n;
                                                Lr(E, h, p, m, c),
                                                Lr(E, d, f, v, u)
                                            }
                                        }
                                    }
                            return {
                                offsetX: o.ha * e,
                                path: y
                            }
                        }
                    }
                    void 0 === e && (e = 100),
                    void 0 === n && (n = 4);
                    for (var i = this.data, a = function(t) {
                        for (var n = String(t).split(""), a = e / i.resolution, o = (i.boundingBox.yMax - i.boundingBox.yMin + i.underlineThickness) * a, s = 0, l = 0, c = [], u = 0; u < n.length; u++) {
                            var h = n[u];
                            if ("\n" === h)
                                s = 0,
                                l -= o;
                            else {
                                var d = r(h, a, s, l);
                                s += d.offsetX,
                                c.push(d.path)
                            }
                        }
                        return c
                    }(t), o = [], s = 0, l = a.length; s < l; s++)
                        Array.prototype.push.apply(o, a[s].toShapes());
                    return o
                }
            }),
            Object.assign(zr.prototype, {
                load: function(t, e, n, r) {
                    var i = this;
                    new Bn(this.manager).load(t, function(t) {
                        var n;
                        try {
                            n = JSON.parse(t)
                        } catch (e) {
                            console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),
                            n = JSON.parse(t.substring(65, t.length - 2))
                        }
                        var r = i.parse(n);
                        e && e(r)
                    }, n, r)
                },
                parse: function(t) {
                    return new Fr(t)
                }
            });
            var xs, bs = {
                getContext: function() {
                    return void 0 === xs && (xs = new (window.AudioContext || window.webkitAudioContext)),
                    xs
                },
                setContext: function(t) {
                    xs = t
                }
            };
            Object.assign(jr.prototype, {
                load: function(t, e, n, r) {
                    var i = new Bn(this.manager);
                    i.setResponseType("arraybuffer"),
                    i.load(t, function(t) {
                        bs.getContext().decodeAudioData(t, function(t) {
                            e(t)
                        })
                    }, n, r)
                }
            }),
            Object.assign(Hr.prototype, {
                update: function() {
                    var t, e, n, r, i, a, o, s, l = new c, u = new c;
                    return function(c) {
                        if (t !== this || e !== c.focus || n !== c.fov || r !== c.aspect * this.aspect || i !== c.near || a !== c.far || o !== c.zoom || s !== this.eyeSep) {
                            t = this,
                            e = c.focus,
                            n = c.fov,
                            r = c.aspect * this.aspect,
                            i = c.near,
                            a = c.far,
                            o = c.zoom;
                            var h, d, p = c.projectionMatrix.clone(), f = (s = this.eyeSep / 2) * i / e, m = i * Math.tan(Go.DEG2RAD * n * .5) / o;
                            u.elements[12] = -s,
                            l.elements[12] = s,
                            h = -m * r + f,
                            d = m * r + f,
                            p.elements[0] = 2 * i / (d - h),
                            p.elements[8] = (d + h) / (d - h),
                            this.cameraL.projectionMatrix.copy(p),
                            h = -m * r - f,
                            d = m * r - f,
                            p.elements[0] = 2 * i / (d - h),
                            p.elements[8] = (d + h) / (d - h),
                            this.cameraR.projectionMatrix.copy(p)
                        }
                        this.cameraL.matrixWorld.copy(c.matrixWorld).multiply(u),
                        this.cameraR.matrixWorld.copy(c.matrixWorld).multiply(l)
                    }
                }()
            }),
            (Gr.prototype = Object.create(ut.prototype)).constructor = Gr,
            Vr.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Vr,
                getInput: function() {
                    return this.gain
                },
                removeFilter: function() {
                    null !== this.filter && (this.gain.disconnect(this.filter),
                    this.filter.disconnect(this.context.destination),
                    this.gain.connect(this.context.destination),
                    this.filter = null)
                },
                getFilter: function() {
                    return this.filter
                },
                setFilter: function(t) {
                    null !== this.filter ? (this.gain.disconnect(this.filter),
                    this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
                    this.filter = t,
                    this.gain.connect(this.filter),
                    this.filter.connect(this.context.destination)
                },
                getMasterVolume: function() {
                    return this.gain.gain.value
                },
                setMasterVolume: function(t) {
                    this.gain.gain.value = t
                },
                updateMatrixWorld: function() {
                    var t = new l
                      , e = new s
                      , n = new l
                      , r = new l;
                    return function(i) {
                        ut.prototype.updateMatrixWorld.call(this, i);
                        var a = this.context.listener
                          , o = this.up;
                        this.matrixWorld.decompose(t, e, n),
                        r.set(0, 0, -1).applyQuaternion(e),
                        a.positionX ? (a.positionX.setValueAtTime(t.x, this.context.currentTime),
                        a.positionY.setValueAtTime(t.y, this.context.currentTime),
                        a.positionZ.setValueAtTime(t.z, this.context.currentTime),
                        a.forwardX.setValueAtTime(r.x, this.context.currentTime),
                        a.forwardY.setValueAtTime(r.y, this.context.currentTime),
                        a.forwardZ.setValueAtTime(r.z, this.context.currentTime),
                        a.upX.setValueAtTime(o.x, this.context.currentTime),
                        a.upY.setValueAtTime(o.y, this.context.currentTime),
                        a.upZ.setValueAtTime(o.z, this.context.currentTime)) : (a.setPosition(t.x, t.y, t.z),
                        a.setOrientation(r.x, r.y, r.z, o.x, o.y, o.z))
                    }
                }()
            }),
            Wr.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Wr,
                getOutput: function() {
                    return this.gain
                },
                setNodeSource: function(t) {
                    return this.hasPlaybackControl = !1,
                    this.sourceType = "audioNode",
                    this.source = t,
                    this.connect(),
                    this
                },
                setBuffer: function(t) {
                    return this.buffer = t,
                    this.sourceType = "buffer",
                    this.autoplay && this.play(),
                    this
                },
                play: function() {
                    if (!0 !== this.isPlaying) {
                        if (!1 !== this.hasPlaybackControl) {
                            var t = this.context.createBufferSource();
                            return t.buffer = this.buffer,
                            t.loop = this.loop,
                            t.onended = this.onEnded.bind(this),
                            t.playbackRate.setValueAtTime(this.playbackRate, this.startTime),
                            t.start(0, this.startTime),
                            this.isPlaying = !0,
                            this.source = t,
                            this.connect()
                        }
                        console.warn("THREE.Audio: this Audio has no playback control.")
                    } else
                        console.warn("THREE.Audio: Audio is already playing.")
                },
                pause: function() {
                    if (!1 !== this.hasPlaybackControl)
                        return this.source.stop(),
                        this.startTime = this.context.currentTime,
                        this.isPlaying = !1,
                        this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                },
                stop: function() {
                    if (!1 !== this.hasPlaybackControl)
                        return this.source.stop(),
                        this.startTime = 0,
                        this.isPlaying = !1,
                        this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                },
                connect: function() {
                    if (this.filters.length > 0) {
                        this.source.connect(this.filters[0]);
                        for (var t = 1, e = this.filters.length; t < e; t++)
                            this.filters[t - 1].connect(this.filters[t]);
                        this.filters[this.filters.length - 1].connect(this.getOutput())
                    } else
                        this.source.connect(this.getOutput());
                    return this
                },
                disconnect: function() {
                    if (this.filters.length > 0) {
                        this.source.disconnect(this.filters[0]);
                        for (var t = 1, e = this.filters.length; t < e; t++)
                            this.filters[t - 1].disconnect(this.filters[t]);
                        this.filters[this.filters.length - 1].disconnect(this.getOutput())
                    } else
                        this.source.disconnect(this.getOutput());
                    return this
                },
                getFilters: function() {
                    return this.filters
                },
                setFilters: function(t) {
                    return t || (t = []),
                    !0 === this.isPlaying ? (this.disconnect(),
                    this.filters = t,
                    this.connect()) : this.filters = t,
                    this
                },
                getFilter: function() {
                    return this.getFilters()[0]
                },
                setFilter: function(t) {
                    return this.setFilters(t ? [t] : [])
                },
                setPlaybackRate: function(t) {
                    if (!1 !== this.hasPlaybackControl)
                        return this.playbackRate = t,
                        !0 === this.isPlaying && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime),
                        this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                },
                getPlaybackRate: function() {
                    return this.playbackRate
                },
                onEnded: function() {
                    this.isPlaying = !1
                },
                getLoop: function() {
                    return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."),
                    !1) : this.loop
                },
                setLoop: function(t) {
                    if (!1 !== this.hasPlaybackControl)
                        return this.loop = t,
                        !0 === this.isPlaying && (this.source.loop = this.loop),
                        this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                },
                getVolume: function() {
                    return this.gain.gain.value
                },
                setVolume: function(t) {
                    return this.gain.gain.value = t,
                    this
                }
            }),
            Xr.prototype = Object.assign(Object.create(Wr.prototype), {
                constructor: Xr,
                getOutput: function() {
                    return this.panner
                },
                getRefDistance: function() {
                    return this.panner.refDistance
                },
                setRefDistance: function(t) {
                    this.panner.refDistance = t
                },
                getRolloffFactor: function() {
                    return this.panner.rolloffFactor
                },
                setRolloffFactor: function(t) {
                    this.panner.rolloffFactor = t
                },
                getDistanceModel: function() {
                    return this.panner.distanceModel
                },
                setDistanceModel: function(t) {
                    this.panner.distanceModel = t
                },
                getMaxDistance: function() {
                    return this.panner.maxDistance
                },
                setMaxDistance: function(t) {
                    this.panner.maxDistance = t
                },
                updateMatrixWorld: function() {
                    var t = new l;
                    return function(e) {
                        ut.prototype.updateMatrixWorld.call(this, e),
                        t.setFromMatrixPosition(this.matrixWorld),
                        this.panner.setPosition(t.x, t.y, t.z)
                    }
                }()
            }),
            Object.assign(qr.prototype, {
                getFrequencyData: function() {
                    return this.analyser.getByteFrequencyData(this.data),
                    this.data
                },
                getAverageFrequency: function() {
                    for (var t = 0, e = this.getFrequencyData(), n = 0; n < e.length; n++)
                        t += e[n];
                    return t / e.length
                }
            }),
            Object.assign(Yr.prototype, {
                accumulate: function(t, e) {
                    var n = this.buffer
                      , r = this.valueSize
                      , i = t * r + r
                      , a = this.cumulativeWeight;
                    if (0 === a) {
                        for (var o = 0; o !== r; ++o)
                            n[i + o] = n[o];
                        a = e
                    } else {
                        var s = e / (a += e);
                        this._mixBufferRegion(n, i, 0, s, r)
                    }
                    this.cumulativeWeight = a
                },
                apply: function(t) {
                    var e = this.valueSize
                      , n = this.buffer
                      , r = t * e + e
                      , i = this.cumulativeWeight
                      , a = this.binding;
                    if (this.cumulativeWeight = 0,
                    i < 1) {
                        var o = 3 * e;
                        this._mixBufferRegion(n, r, o, 1 - i, e)
                    }
                    for (var s = e, l = e + e; s !== l; ++s)
                        if (n[s] !== n[s + e]) {
                            a.setValue(n, r);
                            break
                        }
                },
                saveOriginalState: function() {
                    var t = this.binding
                      , e = this.buffer
                      , n = this.valueSize
                      , r = 3 * n;
                    t.getValue(e, r);
                    for (var i = n, a = r; i !== a; ++i)
                        e[i] = e[r + i % n];
                    this.cumulativeWeight = 0
                },
                restoreOriginalState: function() {
                    var t = 3 * this.valueSize;
                    this.binding.setValue(this.buffer, t)
                },
                _select: function(t, e, n, r, i) {
                    if (r >= .5)
                        for (var a = 0; a !== i; ++a)
                            t[e + a] = t[n + a]
                },
                _slerp: function(t, e, n, r) {
                    s.slerpFlat(t, e, t, e, t, n, r)
                },
                _lerp: function(t, e, n, r, i) {
                    for (var a = 1 - r, o = 0; o !== i; ++o) {
                        var s = e + o;
                        t[s] = t[s] * a + t[n + o] * r
                    }
                }
            }),
            Object.assign($r.prototype, {
                getValue: function(t, e) {
                    this.bind();
                    var n = this._targetGroup.nCachedObjects_
                      , r = this._bindings[n];
                    void 0 !== r && r.getValue(t, e)
                },
                setValue: function(t, e) {
                    for (var n = this._bindings, r = this._targetGroup.nCachedObjects_, i = n.length; r !== i; ++r)
                        n[r].setValue(t, e)
                },
                bind: function() {
                    for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                        t[e].bind()
                },
                unbind: function() {
                    for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                        t[e].unbind()
                }
            }),
            Object.assign(Zr, {
                Composite: $r,
                create: function(t, e, n) {
                    return t && t.isAnimationObjectGroup ? new Zr.Composite(t,e,n) : new Zr(t,e,n)
                },
                sanitizeNodeName: function(t) {
                    return t.replace(/\s/g, "_").replace(/[^\w-]/g, "")
                },
                parseTrackName: function() {
                    var t = /((?:[\w-]+[\/:])*)/
                      , e = /([\w-\.]+)?/
                      , n = /(?:\.([\w-]+)(?:\[(.+)\])?)?/
                      , r = /\.([\w-]+)(?:\[(.+)\])?/
                      , i = new RegExp("^" + t.source + e.source + n.source + r.source + "$")
                      , a = ["material", "materials", "bones"];
                    return function(t) {
                        var e = i.exec(t);
                        if (!e)
                            throw new Error("PropertyBinding: Cannot parse trackName: " + t);
                        var n = {
                            nodeName: e[2],
                            objectName: e[3],
                            objectIndex: e[4],
                            propertyName: e[5],
                            propertyIndex: e[6]
                        }
                          , r = n.nodeName && n.nodeName.lastIndexOf(".");
                        if (void 0 !== r && -1 !== r) {
                            var o = n.nodeName.substring(r + 1);
                            -1 !== a.indexOf(o) && (n.nodeName = n.nodeName.substring(0, r),
                            n.objectName = o)
                        }
                        if (null === n.propertyName || 0 === n.propertyName.length)
                            throw new Error("PropertyBinding: can not parse propertyName from trackName: " + t);
                        return n
                    }
                }(),
                findNode: function(t, e) {
                    if (!e || "" === e || "root" === e || "." === e || -1 === e || e === t.name || e === t.uuid)
                        return t;
                    if (t.skeleton) {
                        var n = function(t) {
                            for (var n = 0; n < t.bones.length; n++) {
                                var r = t.bones[n];
                                if (r.name === e)
                                    return r
                            }
                            return null
                        }(t.skeleton);
                        if (n)
                            return n
                    }
                    if (t.children) {
                        var r = function(t) {
                            for (var n = 0; n < t.length; n++) {
                                var i = t[n];
                                if (i.name === e || i.uuid === e)
                                    return i;
                                var a = r(i.children);
                                if (a)
                                    return a
                            }
                            return null
                        }
                          , i = r(t.children);
                        if (i)
                            return i
                    }
                    return null
                }
            }),
            Object.assign(Zr.prototype, {
                _getValue_unavailable: function() {},
                _setValue_unavailable: function() {},
                BindingType: {
                    Direct: 0,
                    EntireArray: 1,
                    ArrayElement: 2,
                    HasFromToArray: 3
                },
                Versioning: {
                    None: 0,
                    NeedsUpdate: 1,
                    MatrixWorldNeedsUpdate: 2
                },
                GetterByBindingType: [function(t, e) {
                    t[e] = this.node[this.propertyName]
                }
                , function(t, e) {
                    for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                        t[e++] = n[r]
                }
                , function(t, e) {
                    t[e] = this.resolvedProperty[this.propertyIndex]
                }
                , function(t, e) {
                    this.resolvedProperty.toArray(t, e)
                }
                ],
                SetterByBindingTypeAndVersioning: [[function(t, e) {
                    this.node[this.propertyName] = t[e]
                }
                , function(t, e) {
                    this.node[this.propertyName] = t[e],
                    this.targetObject.needsUpdate = !0
                }
                , function(t, e) {
                    this.node[this.propertyName] = t[e],
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ], [function(t, e) {
                    for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                        n[r] = t[e++]
                }
                , function(t, e) {
                    for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                        n[r] = t[e++];
                    this.targetObject.needsUpdate = !0
                }
                , function(t, e) {
                    for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                        n[r] = t[e++];
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ], [function(t, e) {
                    this.resolvedProperty[this.propertyIndex] = t[e]
                }
                , function(t, e) {
                    this.resolvedProperty[this.propertyIndex] = t[e],
                    this.targetObject.needsUpdate = !0
                }
                , function(t, e) {
                    this.resolvedProperty[this.propertyIndex] = t[e],
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ], [function(t, e) {
                    this.resolvedProperty.fromArray(t, e)
                }
                , function(t, e) {
                    this.resolvedProperty.fromArray(t, e),
                    this.targetObject.needsUpdate = !0
                }
                , function(t, e) {
                    this.resolvedProperty.fromArray(t, e),
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ]],
                getValue: function(t, e) {
                    this.bind(),
                    this.getValue(t, e)
                },
                setValue: function(t, e) {
                    this.bind(),
                    this.setValue(t, e)
                },
                bind: function() {
                    var t = this.node
                      , e = this.parsedPath
                      , n = e.objectName
                      , r = e.propertyName
                      , i = e.propertyIndex;
                    if (t || (t = Zr.findNode(this.rootNode, e.nodeName) || this.rootNode,
                    this.node = t),
                    this.getValue = this._getValue_unavailable,
                    this.setValue = this._setValue_unavailable,
                    t) {
                        if (n) {
                            var a = e.objectIndex;
                            switch (n) {
                            case "materials":
                                if (!t.material)
                                    return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                                if (!t.material.materials)
                                    return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                                t = t.material.materials;
                                break;
                            case "bones":
                                if (!t.skeleton)
                                    return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                                t = t.skeleton.bones;
                                for (c = 0; c < t.length; c++)
                                    if (t[c].name === a) {
                                        a = c;
                                        break
                                    }
                                break;
                            default:
                                if (void 0 === t[n])
                                    return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                                t = t[n]
                            }
                            if (void 0 !== a) {
                                if (void 0 === t[a])
                                    return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, t);
                                t = t[a]
                            }
                        }
                        var o = t[r];
                        if (void 0 !== o) {
                            var s = this.Versioning.None;
                            void 0 !== t.needsUpdate ? (s = this.Versioning.NeedsUpdate,
                            this.targetObject = t) : void 0 !== t.matrixWorldNeedsUpdate && (s = this.Versioning.MatrixWorldNeedsUpdate,
                            this.targetObject = t);
                            var l = this.BindingType.Direct;
                            if (void 0 !== i) {
                                if ("morphTargetInfluences" === r) {
                                    if (!t.geometry)
                                        return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                                    if (t.geometry.isBufferGeometry) {
                                        if (!t.geometry.morphAttributes)
                                            return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                                        for (c = 0; c < this.node.geometry.morphAttributes.position.length; c++)
                                            if (t.geometry.morphAttributes.position[c].name === i) {
                                                i = c;
                                                break
                                            }
                                    } else {
                                        if (!t.geometry.morphTargets)
                                            return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                                        for (var c = 0; c < this.node.geometry.morphTargets.length; c++)
                                            if (t.geometry.morphTargets[c].name === i) {
                                                i = c;
                                                break
                                            }
                                    }
                                }
                                l = this.BindingType.ArrayElement,
                                this.resolvedProperty = o,
                                this.propertyIndex = i
                            } else
                                void 0 !== o.fromArray && void 0 !== o.toArray ? (l = this.BindingType.HasFromToArray,
                                this.resolvedProperty = o) : Array.isArray(o) ? (l = this.BindingType.EntireArray,
                                this.resolvedProperty = o) : this.propertyName = r;
                            this.getValue = this.GetterByBindingType[l],
                            this.setValue = this.SetterByBindingTypeAndVersioning[l][s]
                        } else {
                            var u = e.nodeName;
                            console.error("THREE.PropertyBinding: Trying to update property for track: " + u + "." + r + " but it wasn't found.", t)
                        }
                    } else
                        console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.")
                },
                unbind: function() {
                    this.node = null,
                    this.getValue = this._getValue_unbound,
                    this.setValue = this._setValue_unbound
                }
            }),
            Object.assign(Zr.prototype, {
                _getValue_unbound: Zr.prototype.getValue,
                _setValue_unbound: Zr.prototype.setValue
            }),
            Object.assign(Jr.prototype, {
                isAnimationObjectGroup: !0,
                add: function(t) {
                    for (var e = this._objects, n = e.length, r = this.nCachedObjects_, i = this._indicesByUUID, a = this._paths, o = this._parsedPaths, s = this._bindings, l = s.length, c = 0, u = arguments.length; c !== u; ++c) {
                        var h = arguments[c]
                          , d = h.uuid
                          , p = i[d]
                          , f = void 0;
                        if (void 0 === p) {
                            p = n++,
                            i[d] = p,
                            e.push(h);
                            for (var m = 0, v = l; m !== v; ++m)
                                s[m].push(new Zr(h,a[m],o[m]))
                        } else if (p < r) {
                            f = e[p];
                            var g = --r
                              , y = e[g];
                            i[y.uuid] = p,
                            e[p] = y,
                            i[d] = g,
                            e[g] = h;
                            for (var m = 0, v = l; m !== v; ++m) {
                                var x = s[m]
                                  , b = x[g]
                                  , _ = x[p];
                                x[p] = b,
                                void 0 === _ && (_ = new Zr(h,a[m],o[m])),
                                x[g] = _
                            }
                        } else
                            e[p] !== f && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
                    }
                    this.nCachedObjects_ = r
                },
                remove: function(t) {
                    for (var e = this._objects, n = this.nCachedObjects_, r = this._indicesByUUID, i = this._bindings, a = i.length, o = 0, s = arguments.length; o !== s; ++o) {
                        var l = arguments[o]
                          , c = l.uuid
                          , u = r[c];
                        if (void 0 !== u && u >= n) {
                            var h = n++
                              , d = e[h];
                            r[d.uuid] = u,
                            e[u] = d,
                            r[c] = h,
                            e[h] = l;
                            for (var p = 0, f = a; p !== f; ++p) {
                                var m = i[p]
                                  , v = m[h]
                                  , g = m[u];
                                m[u] = v,
                                m[h] = g
                            }
                        }
                    }
                    this.nCachedObjects_ = n
                },
                uncache: function(t) {
                    for (var e = this._objects, n = e.length, r = this.nCachedObjects_, i = this._indicesByUUID, a = this._bindings, o = a.length, s = 0, l = arguments.length; s !== l; ++s) {
                        var c = arguments[s].uuid
                          , u = i[c];
                        if (void 0 !== u)
                            if (delete i[c],
                            u < r) {
                                var h = --r
                                  , d = e[h]
                                  , p = e[y = --n];
                                i[d.uuid] = u,
                                e[u] = d,
                                i[p.uuid] = h,
                                e[h] = p,
                                e.pop();
                                for (var f = 0, m = o; f !== m; ++f) {
                                    var v = (x = a[f])[h]
                                      , g = x[y];
                                    x[u] = v,
                                    x[h] = g,
                                    x.pop()
                                }
                            } else {
                                var y = --n;
                                i[(p = e[y]).uuid] = u,
                                e[u] = p,
                                e.pop();
                                for (var f = 0, m = o; f !== m; ++f) {
                                    var x = a[f];
                                    x[u] = x[y],
                                    x.pop()
                                }
                            }
                    }
                    this.nCachedObjects_ = r
                },
                subscribe_: function(t, e) {
                    var n = this._bindingsIndicesByPath
                      , r = n[t]
                      , i = this._bindings;
                    if (void 0 !== r)
                        return i[r];
                    var a = this._paths
                      , o = this._parsedPaths
                      , s = this._objects
                      , l = s.length
                      , c = this.nCachedObjects_
                      , u = new Array(l);
                    r = i.length,
                    n[t] = r,
                    a.push(t),
                    o.push(e),
                    i.push(u);
                    for (var h = c, d = s.length; h !== d; ++h) {
                        var p = s[h];
                        u[h] = new Zr(p,t,e)
                    }
                    return u
                },
                unsubscribe_: function(t) {
                    var e = this._bindingsIndicesByPath
                      , n = e[t];
                    if (void 0 !== n) {
                        var r = this._paths
                          , i = this._parsedPaths
                          , a = this._bindings
                          , o = a.length - 1
                          , s = a[o];
                        e[t[o]] = n,
                        a[n] = s,
                        a.pop(),
                        i[n] = i[o],
                        i.pop(),
                        r[n] = r[o],
                        r.pop()
                    }
                }
            }),
            Object.assign(Kr.prototype, {
                play: function() {
                    return this._mixer._activateAction(this),
                    this
                },
                stop: function() {
                    return this._mixer._deactivateAction(this),
                    this.reset()
                },
                reset: function() {
                    return this.paused = !1,
                    this.enabled = !0,
                    this.time = 0,
                    this._loopCount = -1,
                    this._startTime = null,
                    this.stopFading().stopWarping()
                },
                isRunning: function() {
                    return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
                },
                isScheduled: function() {
                    return this._mixer._isActiveAction(this)
                },
                startAt: function(t) {
                    return this._startTime = t,
                    this
                },
                setLoop: function(t, e) {
                    return this.loop = t,
                    this.repetitions = e,
                    this
                },
                setEffectiveWeight: function(t) {
                    return this.weight = t,
                    this._effectiveWeight = this.enabled ? t : 0,
                    this.stopFading()
                },
                getEffectiveWeight: function() {
                    return this._effectiveWeight
                },
                fadeIn: function(t) {
                    return this._scheduleFading(t, 0, 1)
                },
                fadeOut: function(t) {
                    return this._scheduleFading(t, 1, 0)
                },
                crossFadeFrom: function(t, e, n) {
                    if (t.fadeOut(e),
                    this.fadeIn(e),
                    n) {
                        var r = this._clip.duration
                          , i = t._clip.duration
                          , a = i / r
                          , o = r / i;
                        t.warp(1, a, e),
                        this.warp(o, 1, e)
                    }
                    return this
                },
                crossFadeTo: function(t, e, n) {
                    return t.crossFadeFrom(this, e, n)
                },
                stopFading: function() {
                    var t = this._weightInterpolant;
                    return null !== t && (this._weightInterpolant = null,
                    this._mixer._takeBackControlInterpolant(t)),
                    this
                },
                setEffectiveTimeScale: function(t) {
                    return this.timeScale = t,
                    this._effectiveTimeScale = this.paused ? 0 : t,
                    this.stopWarping()
                },
                getEffectiveTimeScale: function() {
                    return this._effectiveTimeScale
                },
                setDuration: function(t) {
                    return this.timeScale = this._clip.duration / t,
                    this.stopWarping()
                },
                syncWith: function(t) {
                    return this.time = t.time,
                    this.timeScale = t.timeScale,
                    this.stopWarping()
                },
                halt: function(t) {
                    return this.warp(this._effectiveTimeScale, 0, t)
                },
                warp: function(t, e, n) {
                    var r = this._mixer
                      , i = r.time
                      , a = this._timeScaleInterpolant
                      , o = this.timeScale;
                    null === a && (a = r._lendControlInterpolant(),
                    this._timeScaleInterpolant = a);
                    var s = a.parameterPositions
                      , l = a.sampleValues;
                    return s[0] = i,
                    s[1] = i + n,
                    l[0] = t / o,
                    l[1] = e / o,
                    this
                },
                stopWarping: function() {
                    var t = this._timeScaleInterpolant;
                    return null !== t && (this._timeScaleInterpolant = null,
                    this._mixer._takeBackControlInterpolant(t)),
                    this
                },
                getMixer: function() {
                    return this._mixer
                },
                getClip: function() {
                    return this._clip
                },
                getRoot: function() {
                    return this._localRoot || this._mixer._root
                },
                _update: function(t, e, n, r) {
                    if (this.enabled) {
                        var i = this._startTime;
                        if (null !== i) {
                            var a = (t - i) * n;
                            if (a < 0 || 0 === n)
                                return;
                            this._startTime = null,
                            e = n * a
                        }
                        e *= this._updateTimeScale(t);
                        var o = this._updateTime(e)
                          , s = this._updateWeight(t);
                        if (s > 0)
                            for (var l = this._interpolants, c = this._propertyBindings, u = 0, h = l.length; u !== h; ++u)
                                l[u].evaluate(o),
                                c[u].accumulate(r, s)
                    } else
                        this._updateWeight(t)
                },
                _updateWeight: function(t) {
                    var e = 0;
                    if (this.enabled) {
                        e = this.weight;
                        var n = this._weightInterpolant;
                        if (null !== n) {
                            var r = n.evaluate(t)[0];
                            e *= r,
                            t > n.parameterPositions[1] && (this.stopFading(),
                            0 === r && (this.enabled = !1))
                        }
                    }
                    return this._effectiveWeight = e,
                    e
                },
                _updateTimeScale: function(t) {
                    var e = 0;
                    if (!this.paused) {
                        e = this.timeScale;
                        var n = this._timeScaleInterpolant;
                        null !== n && (e *= n.evaluate(t)[0],
                        t > n.parameterPositions[1] && (this.stopWarping(),
                        0 === e ? this.paused = !0 : this.timeScale = e))
                    }
                    return this._effectiveTimeScale = e,
                    e
                },
                _updateTime: function(t) {
                    var e = this.time + t;
                    if (0 === t)
                        return e;
                    var n = this._clip.duration
                      , r = this.loop
                      , i = this._loopCount;
                    if (2200 === r) {
                        -1 === i && (this._loopCount = 0,
                        this._setEndings(!0, !0, !1));
                        t: {
                            if (e >= n)
                                e = n;
                            else {
                                if (!(e < 0))
                                    break t;
                                e = 0
                            }
                            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                            this._mixer.dispatchEvent({
                                type: "finished",
                                action: this,
                                direction: t < 0 ? -1 : 1
                            })
                        }
                    } else {
                        var a = 2202 === r;
                        if (-1 === i && (t >= 0 ? (i = 0,
                        this._setEndings(!0, 0 === this.repetitions, a)) : this._setEndings(0 === this.repetitions, !0, a)),
                        e >= n || e < 0) {
                            var o = Math.floor(e / n);
                            e -= n * o,
                            i += Math.abs(o);
                            var s = this.repetitions - i;
                            if (s < 0)
                                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                                e = t > 0 ? n : 0,
                                this._mixer.dispatchEvent({
                                    type: "finished",
                                    action: this,
                                    direction: t > 0 ? 1 : -1
                                });
                            else {
                                if (0 === s) {
                                    var l = t < 0;
                                    this._setEndings(l, !l, a)
                                } else
                                    this._setEndings(!1, !1, a);
                                this._loopCount = i,
                                this._mixer.dispatchEvent({
                                    type: "loop",
                                    action: this,
                                    loopDelta: o
                                })
                            }
                        }
                        if (a && 1 == (1 & i))
                            return this.time = e,
                            n - e
                    }
                    return this.time = e,
                    e
                },
                _setEndings: function(t, e, n) {
                    var r = this._interpolantSettings;
                    n ? (r.endingStart = 2401,
                    r.endingEnd = 2401) : (r.endingStart = t ? this.zeroSlopeAtStart ? 2401 : Po : 2402,
                    r.endingEnd = e ? this.zeroSlopeAtEnd ? 2401 : Po : 2402)
                },
                _scheduleFading: function(t, e, n) {
                    var r = this._mixer
                      , i = r.time
                      , a = this._weightInterpolant;
                    null === a && (a = r._lendControlInterpolant(),
                    this._weightInterpolant = a);
                    var o = a.parameterPositions
                      , s = a.sampleValues;
                    return o[0] = i,
                    s[0] = e,
                    o[1] = i + t,
                    s[1] = n,
                    this
                }
            }),
            Object.assign(Qr.prototype, e.prototype, {
                _bindAction: function(t, e) {
                    var n = t._localRoot || this._root
                      , r = t._clip.tracks
                      , i = r.length
                      , a = t._propertyBindings
                      , o = t._interpolants
                      , s = n.uuid
                      , l = this._bindingsByRootAndName
                      , c = l[s];
                    void 0 === c && (c = {},
                    l[s] = c);
                    for (var u = 0; u !== i; ++u) {
                        var h = r[u]
                          , d = h.name
                          , p = c[d];
                        if (void 0 !== p)
                            a[u] = p;
                        else {
                            if (void 0 !== (p = a[u])) {
                                null === p._cacheIndex && (++p.referenceCount,
                                this._addInactiveBinding(p, s, d));
                                continue
                            }
                            var f = e && e._propertyBindings[u].binding.parsedPath;
                            ++(p = new Yr(Zr.create(n, d, f),h.ValueTypeName,h.getValueSize())).referenceCount,
                            this._addInactiveBinding(p, s, d),
                            a[u] = p
                        }
                        o[u].resultBuffer = p.buffer
                    }
                },
                _activateAction: function(t) {
                    if (!this._isActiveAction(t)) {
                        if (null === t._cacheIndex) {
                            var e = (t._localRoot || this._root).uuid
                              , n = t._clip.uuid
                              , r = this._actionsByClip[n];
                            this._bindAction(t, r && r.knownActions[0]),
                            this._addInactiveAction(t, n, e)
                        }
                        for (var i = t._propertyBindings, a = 0, o = i.length; a !== o; ++a) {
                            var s = i[a];
                            0 == s.useCount++ && (this._lendBinding(s),
                            s.saveOriginalState())
                        }
                        this._lendAction(t)
                    }
                },
                _deactivateAction: function(t) {
                    if (this._isActiveAction(t)) {
                        for (var e = t._propertyBindings, n = 0, r = e.length; n !== r; ++n) {
                            var i = e[n];
                            0 == --i.useCount && (i.restoreOriginalState(),
                            this._takeBackBinding(i))
                        }
                        this._takeBackAction(t)
                    }
                },
                _initMemoryManager: function() {
                    this._actions = [],
                    this._nActiveActions = 0,
                    this._actionsByClip = {},
                    this._bindings = [],
                    this._nActiveBindings = 0,
                    this._bindingsByRootAndName = {},
                    this._controlInterpolants = [],
                    this._nActiveControlInterpolants = 0;
                    var t = this;
                    this.stats = {
                        actions: {
                            get total() {
                                return t._actions.length
                            },
                            get inUse() {
                                return t._nActiveActions
                            }
                        },
                        bindings: {
                            get total() {
                                return t._bindings.length
                            },
                            get inUse() {
                                return t._nActiveBindings
                            }
                        },
                        controlInterpolants: {
                            get total() {
                                return t._controlInterpolants.length
                            },
                            get inUse() {
                                return t._nActiveControlInterpolants
                            }
                        }
                    }
                },
                _isActiveAction: function(t) {
                    var e = t._cacheIndex;
                    return null !== e && e < this._nActiveActions
                },
                _addInactiveAction: function(t, e, n) {
                    var r = this._actions
                      , i = this._actionsByClip
                      , a = i[e];
                    if (void 0 === a)
                        a = {
                            knownActions: [t],
                            actionByRoot: {}
                        },
                        t._byClipCacheIndex = 0,
                        i[e] = a;
                    else {
                        var o = a.knownActions;
                        t._byClipCacheIndex = o.length,
                        o.push(t)
                    }
                    t._cacheIndex = r.length,
                    r.push(t),
                    a.actionByRoot[n] = t
                },
                _removeInactiveAction: function(t) {
                    var e = this._actions
                      , n = e[e.length - 1]
                      , r = t._cacheIndex;
                    n._cacheIndex = r,
                    e[r] = n,
                    e.pop(),
                    t._cacheIndex = null;
                    var i = t._clip.uuid
                      , a = this._actionsByClip
                      , o = a[i]
                      , s = o.knownActions
                      , l = s[s.length - 1]
                      , c = t._byClipCacheIndex;
                    l._byClipCacheIndex = c,
                    s[c] = l,
                    s.pop(),
                    t._byClipCacheIndex = null,
                    delete o.actionByRoot[(t._localRoot || this._root).uuid],
                    0 === s.length && delete a[i],
                    this._removeInactiveBindingsForAction(t)
                },
                _removeInactiveBindingsForAction: function(t) {
                    for (var e = t._propertyBindings, n = 0, r = e.length; n !== r; ++n) {
                        var i = e[n];
                        0 == --i.referenceCount && this._removeInactiveBinding(i)
                    }
                },
                _lendAction: function(t) {
                    var e = this._actions
                      , n = t._cacheIndex
                      , r = this._nActiveActions++
                      , i = e[r];
                    t._cacheIndex = r,
                    e[r] = t,
                    i._cacheIndex = n,
                    e[n] = i
                },
                _takeBackAction: function(t) {
                    var e = this._actions
                      , n = t._cacheIndex
                      , r = --this._nActiveActions
                      , i = e[r];
                    t._cacheIndex = r,
                    e[r] = t,
                    i._cacheIndex = n,
                    e[n] = i
                },
                _addInactiveBinding: function(t, e, n) {
                    var r = this._bindingsByRootAndName
                      , i = r[e]
                      , a = this._bindings;
                    void 0 === i && (i = {},
                    r[e] = i),
                    i[n] = t,
                    t._cacheIndex = a.length,
                    a.push(t)
                },
                _removeInactiveBinding: function(t) {
                    var e = this._bindings
                      , n = t.binding
                      , r = n.rootNode.uuid
                      , i = n.path
                      , a = this._bindingsByRootAndName
                      , o = a[r]
                      , s = e[e.length - 1]
                      , l = t._cacheIndex;
                    s._cacheIndex = l,
                    e[l] = s,
                    e.pop(),
                    delete o[i];
                    t: {
                        for (var c in o)
                            break t;
                        delete a[r]
                    }
                },
                _lendBinding: function(t) {
                    var e = this._bindings
                      , n = t._cacheIndex
                      , r = this._nActiveBindings++
                      , i = e[r];
                    t._cacheIndex = r,
                    e[r] = t,
                    i._cacheIndex = n,
                    e[n] = i
                },
                _takeBackBinding: function(t) {
                    var e = this._bindings
                      , n = t._cacheIndex
                      , r = --this._nActiveBindings
                      , i = e[r];
                    t._cacheIndex = r,
                    e[r] = t,
                    i._cacheIndex = n,
                    e[n] = i
                },
                _lendControlInterpolant: function() {
                    var t = this._controlInterpolants
                      , e = this._nActiveControlInterpolants++
                      , n = t[e];
                    return void 0 === n && ((n = new nr(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex = e,
                    t[e] = n),
                    n
                },
                _takeBackControlInterpolant: function(t) {
                    var e = this._controlInterpolants
                      , n = t.__cacheIndex
                      , r = --this._nActiveControlInterpolants
                      , i = e[r];
                    t.__cacheIndex = r,
                    e[r] = t,
                    i.__cacheIndex = n,
                    e[n] = i
                },
                _controlInterpolantsResultBuffer: new Float32Array(1),
                clipAction: function(t, e) {
                    var n = e || this._root
                      , r = n.uuid
                      , i = "string" == typeof t ? pr.findByName(n, t) : t
                      , a = null !== i ? i.uuid : t
                      , o = this._actionsByClip[a]
                      , s = null;
                    if (void 0 !== o) {
                        var l = o.actionByRoot[r];
                        if (void 0 !== l)
                            return l;
                        s = o.knownActions[0],
                        null === i && (i = s._clip)
                    }
                    if (null === i)
                        return null;
                    var c = new Kr(this,i,e);
                    return this._bindAction(c, s),
                    this._addInactiveAction(c, a, r),
                    c
                },
                existingAction: function(t, e) {
                    var n = e || this._root
                      , r = n.uuid
                      , i = "string" == typeof t ? pr.findByName(n, t) : t
                      , a = i ? i.uuid : t
                      , o = this._actionsByClip[a];
                    return void 0 !== o ? o.actionByRoot[r] || null : null
                },
                stopAllAction: function() {
                    var t = this._actions
                      , e = this._nActiveActions
                      , n = this._bindings
                      , r = this._nActiveBindings;
                    this._nActiveActions = 0,
                    this._nActiveBindings = 0;
                    for (i = 0; i !== e; ++i)
                        t[i].reset();
                    for (var i = 0; i !== r; ++i)
                        n[i].useCount = 0;
                    return this
                },
                update: function(t) {
                    t *= this.timeScale;
                    for (var e = this._actions, n = this._nActiveActions, r = this.time += t, i = Math.sign(t), a = this._accuIndex ^= 1, o = 0; o !== n; ++o)
                        e[o]._update(r, t, i, a);
                    for (var s = this._bindings, l = this._nActiveBindings, o = 0; o !== l; ++o)
                        s[o].apply(a);
                    return this
                },
                getRoot: function() {
                    return this._root
                },
                uncacheClip: function(t) {
                    var e = this._actions
                      , n = t.uuid
                      , r = this._actionsByClip
                      , i = r[n];
                    if (void 0 !== i) {
                        for (var a = i.knownActions, o = 0, s = a.length; o !== s; ++o) {
                            var l = a[o];
                            this._deactivateAction(l);
                            var c = l._cacheIndex
                              , u = e[e.length - 1];
                            l._cacheIndex = null,
                            l._byClipCacheIndex = null,
                            u._cacheIndex = c,
                            e[c] = u,
                            e.pop(),
                            this._removeInactiveBindingsForAction(l)
                        }
                        delete r[n]
                    }
                },
                uncacheRoot: function(t) {
                    var e = t.uuid
                      , n = this._actionsByClip;
                    for (var r in n) {
                        var i = n[r].actionByRoot[e];
                        void 0 !== i && (this._deactivateAction(i),
                        this._removeInactiveAction(i))
                    }
                    var a = this._bindingsByRootAndName[e];
                    if (void 0 !== a)
                        for (var o in a) {
                            var s = a[o];
                            s.restoreOriginalState(),
                            this._removeInactiveBinding(s)
                        }
                },
                uncacheAction: function(t, e) {
                    var n = this.existingAction(t, e);
                    null !== n && (this._deactivateAction(n),
                    this._removeInactiveAction(n))
                }
            }),
            ti.prototype.clone = function() {
                return new ti(void 0 === this.value.clone ? this.value : this.value.clone())
            }
            ,
            ei.prototype = Object.assign(Object.create(Rt.prototype), {
                constructor: ei,
                isInstancedBufferGeometry: !0,
                addGroup: function(t, e, n) {
                    this.groups.push({
                        start: t,
                        count: e,
                        materialIndex: n
                    })
                },
                copy: function(t) {
                    var e = t.index;
                    null !== e && this.setIndex(e.clone());
                    var n = t.attributes;
                    for (var r in n) {
                        var i = n[r];
                        this.addAttribute(r, i.clone())
                    }
                    for (var a = t.groups, o = 0, s = a.length; o < s; o++) {
                        var l = a[o];
                        this.addGroup(l.start, l.count, l.materialIndex)
                    }
                    return this
                }
            }),
            Object.defineProperties(ni.prototype, {
                count: {
                    get: function() {
                        return this.data.count
                    }
                },
                array: {
                    get: function() {
                        return this.data.array
                    }
                }
            }),
            Object.assign(ni.prototype, {
                isInterleavedBufferAttribute: !0,
                setX: function(t, e) {
                    return this.data.array[t * this.data.stride + this.offset] = e,
                    this
                },
                setY: function(t, e) {
                    return this.data.array[t * this.data.stride + this.offset + 1] = e,
                    this
                },
                setZ: function(t, e) {
                    return this.data.array[t * this.data.stride + this.offset + 2] = e,
                    this
                },
                setW: function(t, e) {
                    return this.data.array[t * this.data.stride + this.offset + 3] = e,
                    this
                },
                getX: function(t) {
                    return this.data.array[t * this.data.stride + this.offset]
                },
                getY: function(t) {
                    return this.data.array[t * this.data.stride + this.offset + 1]
                },
                getZ: function(t) {
                    return this.data.array[t * this.data.stride + this.offset + 2]
                },
                getW: function(t) {
                    return this.data.array[t * this.data.stride + this.offset + 3]
                },
                setXY: function(t, e, n) {
                    return t = t * this.data.stride + this.offset,
                    this.data.array[t + 0] = e,
                    this.data.array[t + 1] = n,
                    this
                },
                setXYZ: function(t, e, n, r) {
                    return t = t * this.data.stride + this.offset,
                    this.data.array[t + 0] = e,
                    this.data.array[t + 1] = n,
                    this.data.array[t + 2] = r,
                    this
                },
                setXYZW: function(t, e, n, r, i) {
                    return t = t * this.data.stride + this.offset,
                    this.data.array[t + 0] = e,
                    this.data.array[t + 1] = n,
                    this.data.array[t + 2] = r,
                    this.data.array[t + 3] = i,
                    this
                }
            }),
            Object.defineProperty(ri.prototype, "needsUpdate", {
                set: function(t) {
                    !0 === t && this.version++
                }
            }),
            Object.assign(ri.prototype, {
                isInterleavedBuffer: !0,
                setArray: function(t) {
                    if (Array.isArray(t))
                        throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                    this.count = void 0 !== t ? t.length / this.stride : 0,
                    this.array = t
                },
                setDynamic: function(t) {
                    return this.dynamic = t,
                    this
                },
                copy: function(t) {
                    return this.array = new t.array.constructor(t.array),
                    this.count = t.count,
                    this.stride = t.stride,
                    this.dynamic = t.dynamic,
                    this
                },
                copyAt: function(t, e, n) {
                    t *= this.stride,
                    n *= e.stride;
                    for (var r = 0, i = this.stride; r < i; r++)
                        this.array[t + r] = e.array[n + r];
                    return this
                },
                set: function(t, e) {
                    return void 0 === e && (e = 0),
                    this.array.set(t, e),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                onUpload: function(t) {
                    return this.onUploadCallback = t,
                    this
                }
            }),
            ii.prototype = Object.assign(Object.create(ri.prototype), {
                constructor: ii,
                isInstancedInterleavedBuffer: !0,
                copy: function(t) {
                    return ri.prototype.copy.call(this, t),
                    this.meshPerAttribute = t.meshPerAttribute,
                    this
                }
            }),
            ai.prototype = Object.assign(Object.create(gt.prototype), {
                constructor: ai,
                isInstancedBufferAttribute: !0,
                copy: function(t) {
                    return gt.prototype.copy.call(this, t),
                    this.meshPerAttribute = t.meshPerAttribute,
                    this
                }
            }),
            Object.assign(oi.prototype, {
                linePrecision: 1,
                set: function(t, e) {
                    this.ray.set(t, e)
                },
                setFromCamera: function(t, e) {
                    e && e.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(e.matrixWorld),
                    this.ray.direction.set(t.x, t.y, .5).unproject(e).sub(this.ray.origin).normalize()) : e && e.isOrthographicCamera ? (this.ray.origin.set(t.x, t.y, (e.near + e.far) / (e.near - e.far)).unproject(e),
                    this.ray.direction.set(0, 0, -1).transformDirection(e.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.")
                },
                intersectObject: function(t, e) {
                    var n = [];
                    return li(t, this, n, e),
                    n.sort(si),
                    n
                },
                intersectObjects: function(t, e) {
                    var n = [];
                    if (!1 === Array.isArray(t))
                        return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),
                        n;
                    for (var r = 0, i = t.length; r < i; r++)
                        li(t[r], this, n, e);
                    return n.sort(si),
                    n
                }
            }),
            Object.assign(ci.prototype, {
                start: function() {
                    this.startTime = ("undefined" == typeof performance ? Date : performance).now(),
                    this.oldTime = this.startTime,
                    this.elapsedTime = 0,
                    this.running = !0
                },
                stop: function() {
                    this.getElapsedTime(),
                    this.running = !1,
                    this.autoStart = !1
                },
                getElapsedTime: function() {
                    return this.getDelta(),
                    this.elapsedTime
                },
                getDelta: function() {
                    var t = 0;
                    if (this.autoStart && !this.running)
                        return this.start(),
                        0;
                    if (this.running) {
                        var e = ("undefined" == typeof performance ? Date : performance).now();
                        t = (e - this.oldTime) / 1e3,
                        this.oldTime = e,
                        this.elapsedTime += t
                    }
                    return t
                }
            }),
            Object.assign(ui.prototype, {
                set: function(t, e, n) {
                    return this.radius = t,
                    this.phi = e,
                    this.theta = n,
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.radius = t.radius,
                    this.phi = t.phi,
                    this.theta = t.theta,
                    this
                },
                makeSafe: function() {
                    return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)),
                    this
                },
                setFromVector3: function(t) {
                    return this.radius = t.length(),
                    0 === this.radius ? (this.theta = 0,
                    this.phi = 0) : (this.theta = Math.atan2(t.x, t.z),
                    this.phi = Math.acos(Go.clamp(t.y / this.radius, -1, 1))),
                    this
                }
            }),
            Object.assign(hi.prototype, {
                set: function(t, e, n) {
                    return this.radius = t,
                    this.theta = e,
                    this.y = n,
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.radius = t.radius,
                    this.theta = t.theta,
                    this.y = t.y,
                    this
                },
                setFromVector3: function(t) {
                    return this.radius = Math.sqrt(t.x * t.x + t.z * t.z),
                    this.theta = Math.atan2(t.x, t.z),
                    this.y = t.y,
                    this
                }
            }),
            (di.prototype = Object.create(ut.prototype)).constructor = di,
            di.prototype.isImmediateRenderObject = !0,
            (pi.prototype = Object.create(De.prototype)).constructor = pi,
            pi.prototype.update = function() {
                var t = new l
                  , e = new l
                  , n = new rt;
                return function() {
                    var r = ["a", "b", "c"];
                    this.object.updateMatrixWorld(!0),
                    n.getNormalMatrix(this.object.matrixWorld);
                    var i = this.object.matrixWorld
                      , a = this.geometry.attributes.position
                      , o = this.object.geometry;
                    if (o && o.isGeometry)
                        for (var s = o.vertices, l = o.faces, c = 0, u = 0, h = l.length; u < h; u++)
                            for (var d = l[u], p = 0, f = d.vertexNormals.length; p < f; p++) {
                                var m = s[d[r[p]]]
                                  , v = d.vertexNormals[p];
                                t.copy(m).applyMatrix4(i),
                                e.copy(v).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                                a.setXYZ(c, t.x, t.y, t.z),
                                c += 1,
                                a.setXYZ(c, e.x, e.y, e.z),
                                c += 1
                            }
                    else if (o && o.isBufferGeometry)
                        for (var g = o.attributes.position, y = o.attributes.normal, c = 0, p = 0, f = g.count; p < f; p++)
                            t.set(g.getX(p), g.getY(p), g.getZ(p)).applyMatrix4(i),
                            e.set(y.getX(p), y.getY(p), y.getZ(p)),
                            e.applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                            a.setXYZ(c, t.x, t.y, t.z),
                            c += 1,
                            a.setXYZ(c, e.x, e.y, e.z),
                            c += 1;
                    a.needsUpdate = !0
                }
            }(),
            (fi.prototype = Object.create(ut.prototype)).constructor = fi,
            fi.prototype.dispose = function() {
                this.cone.geometry.dispose(),
                this.cone.material.dispose()
            }
            ,
            fi.prototype.update = function() {
                var t = new l
                  , e = new l;
                return function() {
                    this.light.updateMatrixWorld();
                    var n = this.light.distance ? this.light.distance : 1e3
                      , r = n * Math.tan(this.light.angle);
                    this.cone.scale.set(r, r, n),
                    t.setFromMatrixPosition(this.light.matrixWorld),
                    e.setFromMatrixPosition(this.light.target.matrixWorld),
                    this.cone.lookAt(e.sub(t)),
                    void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
                }
            }(),
            (vi.prototype = Object.create(De.prototype)).constructor = vi,
            vi.prototype.onBeforeRender = function() {
                var t = new l
                  , e = new c
                  , n = new c;
                return function() {
                    var r = this.bones
                      , i = this.geometry
                      , a = i.getAttribute("position");
                    n.getInverse(this.root.matrixWorld);
                    for (var o = 0, s = 0; o < r.length; o++) {
                        var l = r[o];
                        l.parent && l.parent.isBone && (e.multiplyMatrices(n, l.matrixWorld),
                        t.setFromMatrixPosition(e),
                        a.setXYZ(s, t.x, t.y, t.z),
                        e.multiplyMatrices(n, l.parent.matrixWorld),
                        t.setFromMatrixPosition(e),
                        a.setXYZ(s + 1, t.x, t.y, t.z),
                        s += 2)
                    }
                    i.getAttribute("position").needsUpdate = !0
                }
            }(),
            (gi.prototype = Object.create(Bt.prototype)).constructor = gi,
            gi.prototype.dispose = function() {
                this.geometry.dispose(),
                this.material.dispose()
            }
            ,
            gi.prototype.update = function() {
                void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
            }
            ,
            (yi.prototype = Object.create(ut.prototype)).constructor = yi,
            yi.prototype.dispose = function() {
                this.children[0].geometry.dispose(),
                this.children[0].material.dispose()
            }
            ,
            yi.prototype.update = function() {
                var t = .5 * this.light.width
                  , e = .5 * this.light.height
                  , n = this.line.geometry.attributes.position
                  , r = n.array;
                r[0] = t,
                r[1] = -e,
                r[2] = 0,
                r[3] = t,
                r[4] = e,
                r[5] = 0,
                r[6] = -t,
                r[7] = e,
                r[8] = 0,
                r[9] = -t,
                r[10] = -e,
                r[11] = 0,
                r[12] = t,
                r[13] = -e,
                r[14] = 0,
                n.needsUpdate = !0,
                void 0 !== this.color ? this.line.material.color.set(this.color) : this.line.material.color.copy(this.light.color)
            }
            ,
            (xi.prototype = Object.create(ut.prototype)).constructor = xi,
            xi.prototype.dispose = function() {
                this.children[0].geometry.dispose(),
                this.children[0].material.dispose()
            }
            ,
            xi.prototype.update = function() {
                var t = new l
                  , e = new X
                  , n = new X;
                return function() {
                    var r = this.children[0];
                    if (void 0 !== this.color)
                        this.material.color.set(this.color);
                    else {
                        var i = r.geometry.getAttribute("color");
                        e.copy(this.light.color),
                        n.copy(this.light.groundColor);
                        for (var a = 0, o = i.count; a < o; a++) {
                            var s = a < o / 2 ? e : n;
                            i.setXYZ(a, s.r, s.g, s.b)
                        }
                        i.needsUpdate = !0
                    }
                    r.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())
                }
            }(),
            (bi.prototype = Object.create(De.prototype)).constructor = bi,
            (_i.prototype = Object.create(De.prototype)).constructor = _i,
            (wi.prototype = Object.create(De.prototype)).constructor = wi,
            wi.prototype.update = function() {
                var t = new l
                  , e = new l
                  , n = new rt;
                return function() {
                    this.object.updateMatrixWorld(!0),
                    n.getNormalMatrix(this.object.matrixWorld);
                    for (var r = this.object.matrixWorld, i = this.geometry.attributes.position, a = this.object.geometry, o = a.vertices, s = a.faces, l = 0, c = 0, u = s.length; c < u; c++) {
                        var h = s[c]
                          , d = h.normal;
                        t.copy(o[h.a]).add(o[h.b]).add(o[h.c]).divideScalar(3).applyMatrix4(r),
                        e.copy(d).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                        i.setXYZ(l, t.x, t.y, t.z),
                        l += 1,
                        i.setXYZ(l, e.x, e.y, e.z),
                        l += 1
                    }
                    i.needsUpdate = !0
                }
            }(),
            (Mi.prototype = Object.create(ut.prototype)).constructor = Mi,
            Mi.prototype.dispose = function() {
                this.lightPlane.geometry.dispose(),
                this.lightPlane.material.dispose(),
                this.targetLine.geometry.dispose(),
                this.targetLine.material.dispose()
            }
            ,
            Mi.prototype.update = function() {
                var t = new l
                  , e = new l
                  , n = new l;
                return function() {
                    t.setFromMatrixPosition(this.light.matrixWorld),
                    e.setFromMatrixPosition(this.light.target.matrixWorld),
                    n.subVectors(e, t),
                    this.lightPlane.lookAt(n),
                    void 0 !== this.color ? (this.lightPlane.material.color.set(this.color),
                    this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color),
                    this.targetLine.material.color.copy(this.light.color)),
                    this.targetLine.lookAt(n),
                    this.targetLine.scale.z = n.length()
                }
            }(),
            (Ei.prototype = Object.create(De.prototype)).constructor = Ei,
            Ei.prototype.update = function() {
                function t(t, a, o, s) {
                    r.set(a, o, s).unproject(i);
                    var l = n[t];
                    if (void 0 !== l)
                        for (var c = e.getAttribute("position"), u = 0, h = l.length; u < h; u++)
                            c.setXYZ(l[u], r.x, r.y, r.z)
                }
                var e, n, r = new l, i = new ht;
                return function() {
                    e = this.geometry,
                    n = this.pointMap;
                    i.projectionMatrix.copy(this.camera.projectionMatrix),
                    t("c", 0, 0, -1),
                    t("t", 0, 0, 1),
                    t("n1", -1, -1, -1),
                    t("n2", 1, -1, -1),
                    t("n3", -1, 1, -1),
                    t("n4", 1, 1, -1),
                    t("f1", -1, -1, 1),
                    t("f2", 1, -1, 1),
                    t("f3", -1, 1, 1),
                    t("f4", 1, 1, 1),
                    t("u1", .7, 1.1, -1),
                    t("u2", -.7, 1.1, -1),
                    t("u3", 0, 2, -1),
                    t("cf1", -1, 0, 1),
                    t("cf2", 1, 0, 1),
                    t("cf3", 0, -1, 1),
                    t("cf4", 0, 1, 1),
                    t("cn1", -1, 0, -1),
                    t("cn2", 1, 0, -1),
                    t("cn3", 0, -1, -1),
                    t("cn4", 0, 1, -1),
                    e.getAttribute("position").needsUpdate = !0
                }
            }(),
            Ti.prototype = Object.create(De.prototype),
            Ti.prototype.constructor = Ti,
            Ti.prototype.update = function() {
                var t = new et;
                return function(e) {
                    if (void 0 !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."),
                    void 0 !== this.object && t.setFromObject(this.object),
                    !t.isEmpty()) {
                        var n = t.min
                          , r = t.max
                          , i = this.geometry.attributes.position
                          , a = i.array;
                        a[0] = r.x,
                        a[1] = r.y,
                        a[2] = r.z,
                        a[3] = n.x,
                        a[4] = r.y,
                        a[5] = r.z,
                        a[6] = n.x,
                        a[7] = n.y,
                        a[8] = r.z,
                        a[9] = r.x,
                        a[10] = n.y,
                        a[11] = r.z,
                        a[12] = r.x,
                        a[13] = r.y,
                        a[14] = n.z,
                        a[15] = n.x,
                        a[16] = r.y,
                        a[17] = n.z,
                        a[18] = n.x,
                        a[19] = n.y,
                        a[20] = n.z,
                        a[21] = r.x,
                        a[22] = n.y,
                        a[23] = n.z,
                        i.needsUpdate = !0,
                        this.geometry.computeBoundingSphere()
                    }
                }
            }(),
            Ti.prototype.setFromObject = function(t) {
                return this.object = t,
                this.update(),
                this
            }
            ,
            (Si.prototype = Object.create(De.prototype)).constructor = Si,
            Si.prototype.onBeforeRender = function() {
                var t = this.box;
                t.isEmpty() || (t.getCenter(this.position),
                t.getSize(this.scale),
                this.scale.multiplyScalar(.5))
            }
            ,
            (Ai.prototype = Object.create(Ne.prototype)).constructor = Ai,
            Ai.prototype.onBeforeRender = function() {
                var t = -this.plane.constant;
                Math.abs(t) < 1e-8 && (t = 1e-8),
                this.scale.set(.5 * this.size, .5 * this.size, t),
                this.lookAt(this.plane.normal),
                this.updateMatrixWorld()
            }
            ;
            var _s, ws;
            (Li.prototype = Object.create(ut.prototype)).constructor = Li,
            Li.prototype.setDirection = function() {
                var t, e = new l;
                return function(n) {
                    n.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : n.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (e.set(n.z, 0, -n.x).normalize(),
                    t = Math.acos(n.y),
                    this.quaternion.setFromAxisAngle(e, t))
                }
            }(),
            Li.prototype.setLength = function(t, e, n) {
                void 0 === e && (e = .2 * t),
                void 0 === n && (n = .2 * e),
                this.line.scale.set(1, Math.max(0, t - e), 1),
                this.line.updateMatrix(),
                this.cone.scale.set(n, e, n),
                this.cone.position.y = t,
                this.cone.updateMatrix()
            }
            ,
            Li.prototype.setColor = function(t) {
                this.line.material.color.copy(t),
                this.cone.material.color.copy(t)
            }
            ,
            (Ri.prototype = Object.create(De.prototype)).constructor = Ri;
            var Ms = new l
              , Es = new Pi
              , Ts = new Pi
              , Ss = new Pi;
            Ci.prototype = Object.create(Rr.prototype),
            Ci.prototype.constructor = Ci,
            Ci.prototype.getPoint = function(t) {
                var e = this.points
                  , n = e.length
                  , r = (n - (this.closed ? 0 : 1)) * t
                  , i = Math.floor(r)
                  , a = r - i;
                this.closed ? i += i > 0 ? 0 : (Math.floor(Math.abs(i) / e.length) + 1) * e.length : 0 === a && i === n - 1 && (i = n - 2,
                a = 1);
                var o, s, c, u;
                if (this.closed || i > 0 ? o = e[(i - 1) % n] : (Ms.subVectors(e[0], e[1]).add(e[0]),
                o = Ms),
                s = e[i % n],
                c = e[(i + 1) % n],
                this.closed || i + 2 < n ? u = e[(i + 2) % n] : (Ms.subVectors(e[n - 1], e[n - 2]).add(e[n - 1]),
                u = Ms),
                void 0 === this.type || "centripetal" === this.type || "chordal" === this.type) {
                    var h = "chordal" === this.type ? .5 : .25
                      , d = Math.pow(o.distanceToSquared(s), h)
                      , p = Math.pow(s.distanceToSquared(c), h)
                      , f = Math.pow(c.distanceToSquared(u), h);
                    p < 1e-4 && (p = 1),
                    d < 1e-4 && (d = p),
                    f < 1e-4 && (f = p),
                    Es.initNonuniformCatmullRom(o.x, s.x, c.x, u.x, d, p, f),
                    Ts.initNonuniformCatmullRom(o.y, s.y, c.y, u.y, d, p, f),
                    Ss.initNonuniformCatmullRom(o.z, s.z, c.z, u.z, d, p, f)
                } else if ("catmullrom" === this.type) {
                    var m = void 0 !== this.tension ? this.tension : .5;
                    Es.initCatmullRom(o.x, s.x, c.x, u.x, m),
                    Ts.initCatmullRom(o.y, s.y, c.y, u.y, m),
                    Ss.initCatmullRom(o.z, s.z, c.z, u.z, m)
                }
                return new l(Es.calc(a),Ts.calc(a),Ss.calc(a))
            }
            ,
            (Ii.prototype = Object.create(Rr.prototype)).constructor = Ii,
            Ii.prototype.getPoint = function(t) {
                var e = this.v0
                  , n = this.v1
                  , r = this.v2
                  , i = this.v3;
                return new l(Lr(t, e.x, n.x, r.x, i.x),Lr(t, e.y, n.y, r.y, i.y),Lr(t, e.z, n.z, r.z, i.z))
            }
            ,
            (Oi.prototype = Object.create(Rr.prototype)).constructor = Oi,
            Oi.prototype.getPoint = function(t) {
                var e = this.v0
                  , n = this.v1
                  , r = this.v2;
                return new l(Mr(t, e.x, n.x, r.x),Mr(t, e.y, n.y, r.y),Mr(t, e.z, n.z, r.z))
            }
            ,
            (Ni.prototype = Object.create(Rr.prototype)).constructor = Ni,
            Ni.prototype.getPoint = function(t) {
                if (1 === t)
                    return this.v2.clone();
                var e = new l;
                return e.subVectors(this.v2, this.v1),
                e.multiplyScalar(t),
                e.add(this.v1),
                e
            }
            ,
            (Di.prototype = Object.create(Ir.prototype)).constructor = Di;
            var As = {
                createMultiMaterialObject: function(t, e) {
                    for (var n = new Fe, r = 0, i = e.length; r < i; r++)
                        n.add(new Bt(t,e[r]));
                    return n
                },
                detach: function(t, e, n) {
                    t.applyMatrix(e.matrixWorld),
                    e.remove(t),
                    n.add(t)
                },
                attach: function(t, e, n) {
                    t.applyMatrix((new c).getInverse(n.matrixWorld)),
                    e.remove(t),
                    n.add(t)
                }
            };
            Rr.create = function(t, e) {
                return console.log("THREE.Curve.create() has been deprecated"),
                t.prototype = Object.create(Rr.prototype),
                t.prototype.constructor = t,
                t.prototype.getPoint = e,
                t
            }
            ,
            Ui.prototype = Object.create(Ci.prototype),
            ki.prototype = Object.create(Ci.prototype),
            Bi.prototype = Object.create(Ci.prototype),
            Object.assign(Bi.prototype, {
                initFromArray: function(t) {
                    console.error("THREE.Spline: .initFromArray() has been removed.")
                },
                getControlPointsArray: function(t) {
                    console.error("THREE.Spline: .getControlPointsArray() has been removed.")
                },
                reparametrizeByArcLength: function(t) {
                    console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")
                }
            }),
            bi.prototype.setColors = function() {
                console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
            }
            ,
            vi.prototype.update = function() {
                console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
            }
            ,
            Object.assign(q.prototype, {
                center: function(t) {
                    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),
                    this.getCenter(t)
                },
                empty: function() {
                    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),
                    this.isEmpty()
                },
                isIntersectionBox: function(t) {
                    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(t)
                },
                size: function(t) {
                    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),
                    this.getSize(t)
                }
            }),
            Object.assign(et.prototype, {
                center: function(t) {
                    return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),
                    this.getCenter(t)
                },
                empty: function() {
                    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),
                    this.isEmpty()
                },
                isIntersectionBox: function(t) {
                    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(t)
                },
                isIntersectionSphere: function(t) {
                    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
                    this.intersectsSphere(t)
                },
                size: function(t) {
                    return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),
                    this.getSize(t)
                }
            }),
            Ut.prototype.center = function(t) {
                return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),
                this.getCenter(t)
            }
            ,
            Go.random16 = function() {
                return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),
                Math.random()
            }
            ,
            Object.assign(rt.prototype, {
                flattenToArrayOffset: function(t, e) {
                    return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
                    this.toArray(t, e)
                },
                multiplyVector3: function(t) {
                    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
                    t.applyMatrix3(this)
                },
                multiplyVector3Array: function(t) {
                    console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
                },
                applyToBuffer: function(t, e, n) {
                    return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),
                    this.applyToBufferAttribute(t)
                },
                applyToVector3Array: function(t, e, n) {
                    console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
                }
            }),
            Object.assign(c.prototype, {
                extractPosition: function(t) {
                    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),
                    this.copyPosition(t)
                },
                flattenToArrayOffset: function(t, e) {
                    return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
                    this.toArray(t, e)
                },
                getPosition: function() {
                    var t;
                    return function() {
                        return void 0 === t && (t = new l),
                        console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),
                        t.setFromMatrixColumn(this, 3)
                    }
                }(),
                setRotationFromQuaternion: function(t) {
                    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),
                    this.makeRotationFromQuaternion(t)
                },
                multiplyToArray: function() {
                    console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
                },
                multiplyVector3: function(t) {
                    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),
                    t.applyMatrix4(this)
                },
                multiplyVector4: function(t) {
                    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
                    t.applyMatrix4(this)
                },
                multiplyVector3Array: function(t) {
                    console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
                },
                rotateAxis: function(t) {
                    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
                    t.transformDirection(this)
                },
                crossVector: function(t) {
                    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
                    t.applyMatrix4(this)
                },
                translate: function() {
                    console.error("THREE.Matrix4: .translate() has been removed.")
                },
                rotateX: function() {
                    console.error("THREE.Matrix4: .rotateX() has been removed.")
                },
                rotateY: function() {
                    console.error("THREE.Matrix4: .rotateY() has been removed.")
                },
                rotateZ: function() {
                    console.error("THREE.Matrix4: .rotateZ() has been removed.")
                },
                rotateByAxis: function() {
                    console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
                },
                applyToBuffer: function(t, e, n) {
                    return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),
                    this.applyToBufferAttribute(t)
                },
                applyToVector3Array: function(t, e, n) {
                    console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
                },
                makeFrustum: function(t, e, n, r, i, a) {
                    return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),
                    this.makePerspective(t, e, r, n, i, a)
                }
            }),
            it.prototype.isIntersectionLine = function(t) {
                return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),
                this.intersectsLine(t)
            }
            ,
            s.prototype.multiplyVector3 = function(t) {
                return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
                t.applyQuaternion(this)
            }
            ,
            Object.assign(Dt.prototype, {
                isIntersectionBox: function(t) {
                    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(t)
                },
                isIntersectionPlane: function(t) {
                    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),
                    this.intersectsPlane(t)
                },
                isIntersectionSphere: function(t) {
                    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
                    this.intersectsSphere(t)
                }
            }),
            Object.assign(kr.prototype, {
                extrude: function(t) {
                    return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),
                    new cn(this,t)
                },
                makeGeometry: function(t) {
                    return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),
                    new xn(this,t)
                }
            }),
            Object.assign(n.prototype, {
                fromAttribute: function(t, e, n) {
                    return console.error("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),
                    this.fromBufferAttribute(t, e, n)
                }
            }),
            Object.assign(l.prototype, {
                setEulerFromRotationMatrix: function() {
                    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
                },
                setEulerFromQuaternion: function() {
                    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
                },
                getPositionFromMatrix: function(t) {
                    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
                    this.setFromMatrixPosition(t)
                },
                getScaleFromMatrix: function(t) {
                    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),
                    this.setFromMatrixScale(t)
                },
                getColumnFromMatrix: function(t, e) {
                    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),
                    this.setFromMatrixColumn(e, t)
                },
                applyProjection: function(t) {
                    return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),
                    this.applyMatrix4(t)
                },
                fromAttribute: function(t, e, n) {
                    return console.error("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),
                    this.fromBufferAttribute(t, e, n)
                }
            }),
            Object.assign(i.prototype, {
                fromAttribute: function(t, e, n) {
                    return console.error("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),
                    this.fromBufferAttribute(t, e, n)
                }
            }),
            vt.prototype.computeTangents = function() {
                console.warn("THREE.Geometry: .computeTangents() has been removed.")
            }
            ,
            Object.assign(ut.prototype, {
                getChildByName: function(t) {
                    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),
                    this.getObjectByName(t)
                },
                renderDepth: function() {
                    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
                },
                translate: function(t, e) {
                    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),
                    this.translateOnAxis(e, t)
                }
            }),
            Object.defineProperties(ut.prototype, {
                eulerOrder: {
                    get: function() {
                        return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                        this.rotation.order
                    },
                    set: function(t) {
                        console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                        this.rotation.order = t
                    }
                },
                useQuaternion: {
                    get: function() {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    },
                    set: function() {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    }
                }
            }),
            Object.defineProperties(Re.prototype, {
                objects: {
                    get: function() {
                        return console.warn("THREE.LOD: .objects has been renamed to .levels."),
                        this.levels
                    }
                }
            }),
            Object.defineProperty(Pe.prototype, "useVertexTexture", {
                get: function() {
                    console.warn("THREE.Skeleton: useVertexTexture has been removed.")
                },
                set: function() {
                    console.warn("THREE.Skeleton: useVertexTexture has been removed.")
                }
            }),
            Object.defineProperty(Rr.prototype, "__arcLengthDivisions", {
                get: function() {
                    return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
                    this.arcLengthDivisions
                },
                set: function(t) {
                    console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
                    this.arcLengthDivisions = t
                }
            }),
            pt.prototype.setLens = function(t, e) {
                console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),
                void 0 !== e && (this.filmGauge = e),
                this.setFocalLength(t)
            }
            ,
            Object.defineProperties(Vn.prototype, {
                onlyShadow: {
                    set: function() {
                        console.warn("THREE.Light: .onlyShadow has been removed.")
                    }
                },
                shadowCameraFov: {
                    set: function(t) {
                        console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),
                        this.shadow.camera.fov = t
                    }
                },
                shadowCameraLeft: {
                    set: function(t) {
                        console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),
                        this.shadow.camera.left = t
                    }
                },
                shadowCameraRight: {
                    set: function(t) {
                        console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),
                        this.shadow.camera.right = t
                    }
                },
                shadowCameraTop: {
                    set: function(t) {
                        console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),
                        this.shadow.camera.top = t
                    }
                },
                shadowCameraBottom: {
                    set: function(t) {
                        console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),
                        this.shadow.camera.bottom = t
                    }
                },
                shadowCameraNear: {
                    set: function(t) {
                        console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),
                        this.shadow.camera.near = t
                    }
                },
                shadowCameraFar: {
                    set: function(t) {
                        console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),
                        this.shadow.camera.far = t
                    }
                },
                shadowCameraVisible: {
                    set: function() {
                        console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
                    }
                },
                shadowBias: {
                    set: function(t) {
                        console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
                        this.shadow.bias = t
                    }
                },
                shadowDarkness: {
                    set: function() {
                        console.warn("THREE.Light: .shadowDarkness has been removed.")
                    }
                },
                shadowMapWidth: {
                    set: function(t) {
                        console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),
                        this.shadow.mapSize.width = t
                    }
                },
                shadowMapHeight: {
                    set: function(t) {
                        console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),
                        this.shadow.mapSize.height = t
                    }
                }
            }),
            Object.defineProperties(gt.prototype, {
                length: {
                    get: function() {
                        return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),
                        this.array.length
                    }
                }
            }),
            Object.assign(Rt.prototype, {
                addIndex: function(t) {
                    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),
                    this.setIndex(t)
                },
                addDrawCall: function(t, e, n) {
                    void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),
                    console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),
                    this.addGroup(t, e)
                },
                clearDrawCalls: function() {
                    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),
                    this.clearGroups()
                },
                computeTangents: function() {
                    console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
                },
                computeOffsets: function() {
                    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
                }
            }),
            Object.defineProperties(Rt.prototype, {
                drawcalls: {
                    get: function() {
                        return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),
                        this.groups
                    }
                },
                offsets: {
                    get: function() {
                        return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),
                        this.groups
                    }
                }
            }),
            Object.defineProperties(ti.prototype, {
                dynamic: {
                    set: function() {
                        console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")
                    }
                },
                onUpdate: {
                    value: function() {
                        return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),
                        this
                    }
                }
            }),
            Object.defineProperties(J.prototype, {
                wrapAround: {
                    get: function() {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    },
                    set: function() {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    }
                },
                wrapRGB: {
                    get: function() {
                        return console.warn("THREE.Material: .wrapRGB has been removed."),
                        new X
                    }
                },
                shading: {
                    get: function() {
                        console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
                    },
                    set: function(t) {
                        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                        this.flatShading = 1 === t
                    }
                }
            }),
            Object.defineProperties(In.prototype, {
                metal: {
                    get: function() {
                        return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),
                        !1
                    },
                    set: function() {
                        console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
                    }
                }
            }),
            Object.defineProperties(K.prototype, {
                derivatives: {
                    get: function() {
                        return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                        this.extensions.derivatives
                    },
                    set: function(t) {
                        console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                        this.extensions.derivatives = t
                    }
                }
            }),
            Object.assign(we.prototype, {
                getCurrentRenderTarget: function() {
                    return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),
                    this.getRenderTarget()
                },
                getMaxAnisotropy: function() {
                    return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),
                    this.capabilities.getMaxAnisotropy()
                },
                getPrecision: function() {
                    return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),
                    this.capabilities.precision
                },
                supportsFloatTextures: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),
                    this.extensions.get("OES_texture_float")
                },
                supportsHalfFloatTextures: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),
                    this.extensions.get("OES_texture_half_float")
                },
                supportsStandardDerivatives: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),
                    this.extensions.get("OES_standard_derivatives")
                },
                supportsCompressedTextureS3TC: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),
                    this.extensions.get("WEBGL_compressed_texture_s3tc")
                },
                supportsCompressedTexturePVRTC: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),
                    this.extensions.get("WEBGL_compressed_texture_pvrtc")
                },
                supportsBlendMinMax: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),
                    this.extensions.get("EXT_blend_minmax")
                },
                supportsVertexTextures: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),
                    this.capabilities.vertexTextures
                },
                supportsInstancedArrays: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),
                    this.extensions.get("ANGLE_instanced_arrays")
                },
                enableScissorTest: function(t) {
                    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),
                    this.setScissorTest(t)
                },
                initMaterial: function() {
                    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
                },
                addPrePlugin: function() {
                    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
                },
                addPostPlugin: function() {
                    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
                },
                updateShadowMap: function() {
                    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
                }
            }),
            Object.defineProperties(we.prototype, {
                shadowMapEnabled: {
                    get: function() {
                        return this.shadowMap.enabled
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),
                        this.shadowMap.enabled = t
                    }
                },
                shadowMapType: {
                    get: function() {
                        return this.shadowMap.type
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),
                        this.shadowMap.type = t
                    }
                },
                shadowMapCullFace: {
                    get: function() {
                        return this.shadowMap.cullFace
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),
                        this.shadowMap.cullFace = t
                    }
                }
            }),
            Object.defineProperties(ot.prototype, {
                cullFace: {
                    get: function() {
                        return this.renderReverseSided ? Gi : Hi
                    },
                    set: function(t) {
                        var e = t !== Hi;
                        console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to " + e + "."),
                        this.renderReverseSided = e
                    }
                }
            }),
            Object.defineProperties(a.prototype, {
                wrapS: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                        this.texture.wrapS
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                        this.texture.wrapS = t
                    }
                },
                wrapT: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                        this.texture.wrapT
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                        this.texture.wrapT = t
                    }
                },
                magFilter: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                        this.texture.magFilter
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                        this.texture.magFilter = t
                    }
                },
                minFilter: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                        this.texture.minFilter
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                        this.texture.minFilter = t
                    }
                },
                anisotropy: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                        this.texture.anisotropy
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                        this.texture.anisotropy = t
                    }
                },
                offset: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                        this.texture.offset
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                        this.texture.offset = t
                    }
                },
                repeat: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                        this.texture.repeat
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                        this.texture.repeat = t
                    }
                },
                format: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                        this.texture.format
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                        this.texture.format = t
                    }
                },
                type: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                        this.texture.type
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                        this.texture.type = t
                    }
                },
                generateMipmaps: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                        this.texture.generateMipmaps
                    },
                    set: function(t) {
                        console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                        this.texture.generateMipmaps = t
                    }
                }
            }),
            Wr.prototype.load = function(t) {
                console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
                var e = this;
                return (new jr).load(t, function(t) {
                    e.setBuffer(t)
                }),
                this
            }
            ,
            qr.prototype.getData = function() {
                return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),
                this.getFrequencyData()
            }
            ,
            Gr.prototype.updateCubeMap = function(t, e) {
                return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),
                this.update(t, e)
            }
            ;
            var Ls = {
                merge: function(t, e, n) {
                    console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
                    var r;
                    e.isMesh && (e.matrixAutoUpdate && e.updateMatrix(),
                    r = e.matrix,
                    e = e.geometry),
                    t.merge(e, r, n)
                },
                center: function(t) {
                    return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),
                    t.center()
                }
            }
              , Rs = {
                crossOrigin: void 0,
                loadTexture: function(t, e, n, r) {
                    console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
                    var i = new Gn;
                    i.setCrossOrigin(this.crossOrigin);
                    var a = i.load(t, n, void 0, r);
                    return e && (a.mapping = e),
                    a
                },
                loadTextureCube: function(t, e, n, r) {
                    console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
                    var i = new Hn;
                    i.setCrossOrigin(this.crossOrigin);
                    var a = i.load(t, n, void 0, r);
                    return e && (a.mapping = e),
                    a
                },
                loadCompressedTexture: function() {
                    console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
                },
                loadCompressedTextureCube: function() {
                    console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
                }
            };
            t.WebGLRenderTargetCube = o,
            t.WebGLRenderTarget = a,
            t.WebGLRenderer = we,
            t.ShaderLib = ns,
            t.UniformsLib = Qo,
            t.UniformsUtils = ts,
            t.ShaderChunk = es,
            t.FogExp2 = Me,
            t.Fog = Ee,
            t.Scene = Te,
            t.LensFlare = Se,
            t.Sprite = Le,
            t.LOD = Re,
            t.SkinnedMesh = Ie,
            t.Skeleton = Pe,
            t.Bone = Ce,
            t.Mesh = Bt,
            t.LineSegments = De,
            t.LineLoop = Ue,
            t.Line = Ne,
            t.Points = Be,
            t.Group = Fe,
            t.VideoTexture = ze,
            t.DataTexture = u,
            t.CompressedTexture = je,
            t.CubeTexture = h,
            t.CanvasTexture = $,
            t.DepthTexture = He,
            t.Texture = r,
            t.CompressedTextureLoader = Fn,
            t.DataTextureLoader = zn,
            t.CubeTextureLoader = Hn,
            t.TextureLoader = Gn,
            t.ObjectLoader = yr,
            t.MaterialLoader = fr,
            t.BufferGeometryLoader = mr,
            t.DefaultLoadingManager = hs,
            t.LoadingManager = kn,
            t.JSONLoader = gr,
            t.ImageLoader = jn,
            t.FontLoader = zr,
            t.FileLoader = Bn,
            t.Loader = vr,
            t.Cache = us,
            t.AudioLoader = jr,
            t.SpotLightShadow = qn,
            t.SpotLight = Yn,
            t.PointLight = $n,
            t.RectAreaLight = Qn,
            t.HemisphereLight = Wn,
            t.DirectionalLightShadow = Zn,
            t.DirectionalLight = Jn,
            t.AmbientLight = Kn,
            t.LightShadow = Xn,
            t.Light = Vn,
            t.StereoCamera = Hr,
            t.PerspectiveCamera = pt,
            t.OrthographicCamera = dt,
            t.CubeCamera = Gr,
            t.ArrayCamera = ge,
            t.Camera = ht,
            t.AudioListener = Vr,
            t.PositionalAudio = Xr,
            t.AudioContext = bs,
            t.AudioAnalyser = qr,
            t.Audio = Wr,
            t.VectorKeyframeTrack = ar,
            t.StringKeyframeTrack = cr,
            t.QuaternionKeyframeTrack = sr,
            t.NumberKeyframeTrack = lr,
            t.ColorKeyframeTrack = hr,
            t.BooleanKeyframeTrack = ur,
            t.PropertyMixer = Yr,
            t.PropertyBinding = Zr,
            t.KeyframeTrack = dr,
            t.AnimationUtils = ds,
            t.AnimationObjectGroup = Jr,
            t.AnimationMixer = Qr,
            t.AnimationClip = pr,
            t.Uniform = ti,
            t.InstancedBufferGeometry = ei,
            t.BufferGeometry = Rt,
            t.GeometryIdCount = mt,
            t.Geometry = vt,
            t.InterleavedBufferAttribute = ni,
            t.InstancedInterleavedBuffer = ii,
            t.InterleavedBuffer = ri,
            t.InstancedBufferAttribute = ai,
            t.Face3 = ft,
            t.Object3D = ut,
            t.Raycaster = oi,
            t.Layers = ct,
            t.EventDispatcher = e,
            t.Clock = ci,
            t.QuaternionLinearInterpolant = or,
            t.LinearInterpolant = nr,
            t.DiscreteInterpolant = rr,
            t.CubicInterpolant = er,
            t.Interpolant = tr,
            t.Triangle = kt,
            t.Math = Go,
            t.Spherical = ui,
            t.Cylindrical = hi,
            t.Plane = it,
            t.Frustum = at,
            t.Sphere = nt,
            t.Ray = Dt,
            t.Matrix4 = c,
            t.Matrix3 = rt,
            t.Box3 = et,
            t.Box2 = q,
            t.Line3 = Ut,
            t.Euler = lt,
            t.Vector4 = i,
            t.Vector3 = l,
            t.Vector2 = n,
            t.Quaternion = s,
            t.Color = X,
            t.ImmediateRenderObject = di,
            t.VertexNormalsHelper = pi,
            t.SpotLightHelper = fi,
            t.SkeletonHelper = vi,
            t.PointLightHelper = gi,
            t.RectAreaLightHelper = yi,
            t.HemisphereLightHelper = xi,
            t.GridHelper = bi,
            t.PolarGridHelper = _i,
            t.FaceNormalsHelper = wi,
            t.DirectionalLightHelper = Mi,
            t.CameraHelper = Ei,
            t.BoxHelper = Ti,
            t.Box3Helper = Si,
            t.PlaneHelper = Ai,
            t.ArrowHelper = Li,
            t.AxisHelper = Ri,
            t.CatmullRomCurve3 = Ci,
            t.CubicBezierCurve3 = Ii,
            t.QuadraticBezierCurve3 = Oi,
            t.LineCurve3 = Ni,
            t.ArcCurve = Di,
            t.EllipseCurve = Ir,
            t.SplineCurve = Or,
            t.CubicBezierCurve = Nr,
            t.QuadraticBezierCurve = Dr,
            t.LineCurve = Pr,
            t.Shape = kr,
            t.Path = Ur,
            t.ShapePath = Br,
            t.Font = Fr,
            t.CurvePath = Cr,
            t.Curve = Rr,
            t.ShapeUtils = ss,
            t.SceneUtils = As,
            t.WebGLUtils = _e,
            t.WireframeGeometry = Ge,
            t.ParametricGeometry = Ve,
            t.ParametricBufferGeometry = We,
            t.TetrahedronGeometry = Ye,
            t.TetrahedronBufferGeometry = $e,
            t.OctahedronGeometry = Ze,
            t.OctahedronBufferGeometry = Je,
            t.IcosahedronGeometry = Ke,
            t.IcosahedronBufferGeometry = Qe,
            t.DodecahedronGeometry = tn,
            t.DodecahedronBufferGeometry = en,
            t.PolyhedronGeometry = Xe,
            t.PolyhedronBufferGeometry = qe,
            t.TubeGeometry = nn,
            t.TubeBufferGeometry = rn,
            t.TorusKnotGeometry = an,
            t.TorusKnotBufferGeometry = on,
            t.TorusGeometry = sn,
            t.TorusBufferGeometry = ln,
            t.TextGeometry = hn,
            t.TextBufferGeometry = dn,
            t.SphereGeometry = pn,
            t.SphereBufferGeometry = fn,
            t.RingGeometry = mn,
            t.RingBufferGeometry = vn,
            t.PlaneGeometry = It,
            t.PlaneBufferGeometry = Ot,
            t.LatheGeometry = gn,
            t.LatheBufferGeometry = yn,
            t.ShapeGeometry = xn,
            t.ShapeBufferGeometry = bn,
            t.ExtrudeGeometry = cn,
            t.ExtrudeBufferGeometry = un,
            t.EdgesGeometry = _n,
            t.ConeGeometry = En,
            t.ConeBufferGeometry = Tn,
            t.CylinderGeometry = wn,
            t.CylinderBufferGeometry = Mn,
            t.CircleGeometry = Sn,
            t.CircleBufferGeometry = An,
            t.BoxGeometry = Pt,
            t.BoxBufferGeometry = Ct,
            t.ShadowMaterial = Ln,
            t.SpriteMaterial = Ae,
            t.RawShaderMaterial = Rn,
            t.ShaderMaterial = K,
            t.PointsMaterial = ke,
            t.MeshPhysicalMaterial = Cn,
            t.MeshStandardMaterial = Pn,
            t.MeshPhongMaterial = In,
            t.MeshToonMaterial = On,
            t.MeshNormalMaterial = Nn,
            t.MeshLambertMaterial = Dn,
            t.MeshDepthMaterial = Q,
            t.MeshDistanceMaterial = tt,
            t.MeshBasicMaterial = Nt,
            t.LineDashedMaterial = Un,
            t.LineBasicMaterial = Oe,
            t.Material = J,
            t.Float64BufferAttribute = St,
            t.Float32BufferAttribute = Tt,
            t.Uint32BufferAttribute = Et,
            t.Int32BufferAttribute = Mt,
            t.Uint16BufferAttribute = wt,
            t.Int16BufferAttribute = _t,
            t.Uint8ClampedBufferAttribute = bt,
            t.Uint8BufferAttribute = xt,
            t.Int8BufferAttribute = yt,
            t.BufferAttribute = gt,
            t.REVISION = Fi,
            t.MOUSE = zi,
            t.CullFaceNone = ji,
            t.CullFaceBack = Hi,
            t.CullFaceFront = Gi,
            t.CullFaceFrontBack = 3,
            t.FrontFaceDirectionCW = Vi,
            t.FrontFaceDirectionCCW = 1,
            t.BasicShadowMap = 0,
            t.PCFShadowMap = Wi,
            t.PCFSoftShadowMap = Xi,
            t.FrontSide = qi,
            t.BackSide = Yi,
            t.DoubleSide = $i,
            t.FlatShading = 1,
            t.SmoothShading = 2,
            t.NoColors = Zi,
            t.FaceColors = Ji,
            t.VertexColors = Ki,
            t.NoBlending = Qi,
            t.NormalBlending = ta,
            t.AdditiveBlending = ea,
            t.SubtractiveBlending = na,
            t.MultiplyBlending = ra,
            t.CustomBlending = ia,
            t.AddEquation = aa,
            t.SubtractEquation = oa,
            t.ReverseSubtractEquation = sa,
            t.MinEquation = la,
            t.MaxEquation = ca,
            t.ZeroFactor = ua,
            t.OneFactor = ha,
            t.SrcColorFactor = da,
            t.OneMinusSrcColorFactor = pa,
            t.SrcAlphaFactor = fa,
            t.OneMinusSrcAlphaFactor = ma,
            t.DstAlphaFactor = va,
            t.OneMinusDstAlphaFactor = ga,
            t.DstColorFactor = ya,
            t.OneMinusDstColorFactor = xa,
            t.SrcAlphaSaturateFactor = ba,
            t.NeverDepth = _a,
            t.AlwaysDepth = wa,
            t.LessDepth = Ma,
            t.LessEqualDepth = Ea,
            t.EqualDepth = Ta,
            t.GreaterEqualDepth = Sa,
            t.GreaterDepth = Aa,
            t.NotEqualDepth = La,
            t.MultiplyOperation = Ra,
            t.MixOperation = Pa,
            t.AddOperation = Ca,
            t.NoToneMapping = Ia,
            t.LinearToneMapping = Oa,
            t.ReinhardToneMapping = Na,
            t.Uncharted2ToneMapping = Da,
            t.CineonToneMapping = Ua,
            t.UVMapping = 300,
            t.CubeReflectionMapping = ka,
            t.CubeRefractionMapping = Ba,
            t.EquirectangularReflectionMapping = Fa,
            t.EquirectangularRefractionMapping = za,
            t.SphericalReflectionMapping = ja,
            t.CubeUVReflectionMapping = Ha,
            t.CubeUVRefractionMapping = Ga,
            t.RepeatWrapping = Va,
            t.ClampToEdgeWrapping = Wa,
            t.MirroredRepeatWrapping = Xa,
            t.NearestFilter = qa,
            t.NearestMipMapNearestFilter = Ya,
            t.NearestMipMapLinearFilter = $a,
            t.LinearFilter = Za,
            t.LinearMipMapNearestFilter = Ja,
            t.LinearMipMapLinearFilter = Ka,
            t.UnsignedByteType = Qa,
            t.ByteType = to,
            t.ShortType = eo,
            t.UnsignedShortType = no,
            t.IntType = ro,
            t.UnsignedIntType = io,
            t.FloatType = ao,
            t.HalfFloatType = oo,
            t.UnsignedShort4444Type = so,
            t.UnsignedShort5551Type = lo,
            t.UnsignedShort565Type = co,
            t.UnsignedInt248Type = uo,
            t.AlphaFormat = ho,
            t.RGBFormat = po,
            t.RGBAFormat = fo,
            t.LuminanceFormat = mo,
            t.LuminanceAlphaFormat = vo,
            t.RGBEFormat = go,
            t.DepthFormat = yo,
            t.DepthStencilFormat = xo,
            t.RGB_S3TC_DXT1_Format = bo,
            t.RGBA_S3TC_DXT1_Format = _o,
            t.RGBA_S3TC_DXT3_Format = wo,
            t.RGBA_S3TC_DXT5_Format = Mo,
            t.RGB_PVRTC_4BPPV1_Format = Eo,
            t.RGB_PVRTC_2BPPV1_Format = To,
            t.RGBA_PVRTC_4BPPV1_Format = So,
            t.RGBA_PVRTC_2BPPV1_Format = Ao,
            t.RGB_ETC1_Format = Lo,
            t.LoopOnce = 2200,
            t.LoopRepeat = Ro,
            t.LoopPingPong = 2202,
            t.InterpolateDiscrete = 2300,
            t.InterpolateLinear = 2301,
            t.InterpolateSmooth = 2302,
            t.ZeroCurvatureEnding = Po,
            t.ZeroSlopeEnding = 2401,
            t.WrapAroundEnding = 2402,
            t.TrianglesDrawMode = Co,
            t.TriangleStripDrawMode = Io,
            t.TriangleFanDrawMode = Oo,
            t.LinearEncoding = No,
            t.sRGBEncoding = Do,
            t.GammaEncoding = Uo,
            t.RGBEEncoding = ko,
            t.LogLuvEncoding = 3003,
            t.RGBM7Encoding = Bo,
            t.RGBM16Encoding = Fo,
            t.RGBDEncoding = zo,
            t.BasicDepthPacking = jo,
            t.RGBADepthPacking = Ho,
            t.CubeGeometry = Pt,
            t.Face4 = function(t, e, n, r, i, a, o) {
                return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),
                new ft(t,e,n,i,a,o)
            }
            ,
            t.LineStrip = 0,
            t.LinePieces = 1,
            t.MeshFaceMaterial = function(t) {
                return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),
                t
            }
            ,
            t.MultiMaterial = function(t) {
                return void 0 === t && (t = []),
                console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),
                t.isMultiMaterial = !0,
                t.materials = t,
                t.clone = function() {
                    return t.slice()
                }
                ,
                t
            }
            ,
            t.PointCloud = function(t, e) {
                return console.warn("THREE.PointCloud has been renamed to THREE.Points."),
                new Be(t,e)
            }
            ,
            t.Particle = function(t) {
                return console.warn("THREE.Particle has been renamed to THREE.Sprite."),
                new Le(t)
            }
            ,
            t.ParticleSystem = function(t, e) {
                return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),
                new Be(t,e)
            }
            ,
            t.PointCloudMaterial = function(t) {
                return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),
                new ke(t)
            }
            ,
            t.ParticleBasicMaterial = function(t) {
                return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),
                new ke(t)
            }
            ,
            t.ParticleSystemMaterial = function(t) {
                return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),
                new ke(t)
            }
            ,
            t.Vertex = function(t, e, n) {
                return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),
                new l(t,e,n)
            }
            ,
            t.DynamicBufferAttribute = function(t, e) {
                return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),
                new gt(t,e).setDynamic(!0)
            }
            ,
            t.Int8Attribute = function(t, e) {
                return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),
                new yt(t,e)
            }
            ,
            t.Uint8Attribute = function(t, e) {
                return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),
                new xt(t,e)
            }
            ,
            t.Uint8ClampedAttribute = function(t, e) {
                return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),
                new bt(t,e)
            }
            ,
            t.Int16Attribute = function(t, e) {
                return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),
                new _t(t,e)
            }
            ,
            t.Uint16Attribute = function(t, e) {
                return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),
                new wt(t,e)
            }
            ,
            t.Int32Attribute = function(t, e) {
                return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),
                new Mt(t,e)
            }
            ,
            t.Uint32Attribute = function(t, e) {
                return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),
                new Et(t,e)
            }
            ,
            t.Float32Attribute = function(t, e) {
                return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),
                new Tt(t,e)
            }
            ,
            t.Float64Attribute = function(t, e) {
                return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),
                new St(t,e)
            }
            ,
            t.ClosedSplineCurve3 = Ui,
            t.SplineCurve3 = ki,
            t.Spline = Bi,
            t.BoundingBoxHelper = function(t, e) {
                return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),
                new Ti(t,e)
            }
            ,
            t.EdgesHelper = function(t, e) {
                return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),
                new De(new _n(t.geometry),new Oe({
                    color: void 0 !== e ? e : 16777215
                }))
            }
            ,
            t.WireframeHelper = function(t, e) {
                return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),
                new De(new Ge(t.geometry),new Oe({
                    color: void 0 !== e ? e : 16777215
                }))
            }
            ,
            t.XHRLoader = function(t) {
                return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),
                new Bn(t)
            }
            ,
            t.BinaryTextureLoader = function(t) {
                return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),
                new zn(t)
            }
            ,
            t.GeometryUtils = Ls,
            t.ImageUtils = Rs,
            t.Projector = function() {
                console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),
                this.projectVector = function(t, e) {
                    console.warn("THREE.Projector: .projectVector() is now vector.project()."),
                    t.project(e)
                }
                ,
                this.unprojectVector = function(t, e) {
                    console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),
                    t.unproject(e)
                }
                ,
                this.pickingRay = function() {
                    console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")
                }
            }
            ,
            t.CanvasRenderer = function() {
                console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),
                this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                this.clear = function() {}
                ,
                this.render = function() {}
                ,
                this.setClearColor = function() {}
                ,
                this.setSize = function() {}
            }
            ,
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        })
    }
    , {}],
    35: [function(t, e, n) {
        (function(t) {
            !function(t, r) {
                "object" == typeof n && void 0 !== e ? e.exports = r() : "function" == typeof define && define.amd ? define(r) : t.Vue = r()
            }(this, function() {
                "use strict";
                function e(t) {
                    return void 0 === t || null === t
                }
                function n(t) {
                    return void 0 !== t && null !== t
                }
                function r(t) {
                    return !0 === t
                }
                function i(t) {
                    return !1 === t
                }
                function a(t) {
                    return "string" == typeof t || "number" == typeof t || "boolean" == typeof t
                }
                function o(t) {
                    return null !== t && "object" == typeof t
                }
                function s(t) {
                    return "[object Object]" === vi.call(t)
                }
                function l(t) {
                    return "[object RegExp]" === vi.call(t)
                }
                function c(t) {
                    var e = parseFloat(t);
                    return e >= 0 && Math.floor(e) === e && isFinite(t)
                }
                function u(t) {
                    return null == t ? "" : "object" == typeof t ? JSON.stringify(t, null, 2) : String(t)
                }
                function h(t) {
                    var e = parseFloat(t);
                    return isNaN(e) ? t : e
                }
                function d(t, e) {
                    for (var n = Object.create(null), r = t.split(","), i = 0; i < r.length; i++)
                        n[r[i]] = !0;
                    return e ? function(t) {
                        return n[t.toLowerCase()]
                    }
                    : function(t) {
                        return n[t]
                    }
                }
                function p(t, e) {
                    if (t.length) {
                        var n = t.indexOf(e);
                        if (n > -1)
                            return t.splice(n, 1)
                    }
                }
                function f(t, e) {
                    return xi.call(t, e)
                }
                function m(t) {
                    var e = Object.create(null);
                    return function(n) {
                        return e[n] || (e[n] = t(n))
                    }
                }
                function v(t, e) {
                    function n(n) {
                        var r = arguments.length;
                        return r ? r > 1 ? t.apply(e, arguments) : t.call(e, n) : t.call(e)
                    }
                    return n._length = t.length,
                    n
                }
                function g(t, e) {
                    e = e || 0;
                    for (var n = t.length - e, r = new Array(n); n--; )
                        r[n] = t[n + e];
                    return r
                }
                function y(t, e) {
                    for (var n in e)
                        t[n] = e[n];
                    return t
                }
                function x(t) {
                    for (var e = {}, n = 0; n < t.length; n++)
                        t[n] && y(e, t[n]);
                    return e
                }
                function b(t, e, n) {}
                function _(t, e) {
                    if (t === e)
                        return !0;
                    var n = o(t)
                      , r = o(e);
                    if (!n || !r)
                        return !n && !r && String(t) === String(e);
                    try {
                        var i = Array.isArray(t)
                          , a = Array.isArray(e);
                        if (i && a)
                            return t.length === e.length && t.every(function(t, n) {
                                return _(t, e[n])
                            });
                        if (i || a)
                            return !1;
                        var s = Object.keys(t)
                          , l = Object.keys(e);
                        return s.length === l.length && s.every(function(n) {
                            return _(t[n], e[n])
                        })
                    } catch (t) {
                        return !1
                    }
                }
                function w(t, e) {
                    for (var n = 0; n < t.length; n++)
                        if (_(t[n], e))
                            return n;
                    return -1
                }
                function M(t) {
                    var e = !1;
                    return function() {
                        e || (e = !0,
                        t.apply(this, arguments))
                    }
                }
                function E(t) {
                    var e = (t + "").charCodeAt(0);
                    return 36 === e || 95 === e
                }
                function T(t, e, n, r) {
                    Object.defineProperty(t, e, {
                        value: n,
                        enumerable: !!r,
                        writable: !0,
                        configurable: !0
                    })
                }
                function S(t) {
                    if (!Ii.test(t)) {
                        var e = t.split(".");
                        return function(t) {
                            for (var n = 0; n < e.length; n++) {
                                if (!t)
                                    return;
                                t = t[e[n]]
                            }
                            return t
                        }
                    }
                }
                function A(t, e, n) {
                    if (Pi.errorHandler)
                        Pi.errorHandler.call(null, t, e, n);
                    else {
                        if (!Di || "undefined" == typeof console)
                            throw t;
                        console.error(t)
                    }
                }
                function L(t) {
                    return "function" == typeof t && /native code/.test(t.toString())
                }
                function R(t) {
                    Qi.target && ta.push(Qi.target),
                    Qi.target = t
                }
                function P() {
                    Qi.target = ta.pop()
                }
                function C(t, e, n) {
                    t.__proto__ = e
                }
                function I(t, e, n) {
                    for (var r = 0, i = n.length; r < i; r++) {
                        var a = n[r];
                        T(t, a, e[a])
                    }
                }
                function O(t, e) {
                    if (o(t)) {
                        var n;
                        return f(t, "__ob__") && t.__ob__ instanceof aa ? n = t.__ob__ : ia.shouldConvert && !Yi() && (Array.isArray(t) || s(t)) && Object.isExtensible(t) && !t._isVue && (n = new aa(t)),
                        e && n && n.vmCount++,
                        n
                    }
                }
                function N(t, e, n, r, i) {
                    var a = new Qi
                      , o = Object.getOwnPropertyDescriptor(t, e);
                    if (!o || !1 !== o.configurable) {
                        var s = o && o.get
                          , l = o && o.set
                          , c = !i && O(n);
                        Object.defineProperty(t, e, {
                            enumerable: !0,
                            configurable: !0,
                            get: function() {
                                var e = s ? s.call(t) : n;
                                return Qi.target && (a.depend(),
                                c && (c.dep.depend(),
                                Array.isArray(e) && k(e))),
                                e
                            },
                            set: function(e) {
                                var r = s ? s.call(t) : n;
                                e === r || e !== e && r !== r || (l ? l.call(t, e) : n = e,
                                c = !i && O(e),
                                a.notify())
                            }
                        })
                    }
                }
                function D(t, e, n) {
                    if (Array.isArray(t) && c(e))
                        return t.length = Math.max(t.length, e),
                        t.splice(e, 1, n),
                        n;
                    if (f(t, e))
                        return t[e] = n,
                        n;
                    var r = t.__ob__;
                    return t._isVue || r && r.vmCount ? n : r ? (N(r.value, e, n),
                    r.dep.notify(),
                    n) : (t[e] = n,
                    n)
                }
                function U(t, e) {
                    if (Array.isArray(t) && c(e))
                        t.splice(e, 1);
                    else {
                        var n = t.__ob__;
                        t._isVue || n && n.vmCount || f(t, e) && (delete t[e],
                        n && n.dep.notify())
                    }
                }
                function k(t) {
                    for (var e = void 0, n = 0, r = t.length; n < r; n++)
                        (e = t[n]) && e.__ob__ && e.__ob__.dep.depend(),
                        Array.isArray(e) && k(e)
                }
                function B(t, e) {
                    if (!e)
                        return t;
                    for (var n, r, i, a = Object.keys(e), o = 0; o < a.length; o++)
                        r = t[n = a[o]],
                        i = e[n],
                        f(t, n) ? s(r) && s(i) && B(r, i) : D(t, n, i);
                    return t
                }
                function F(t, e, n) {
                    return n ? t || e ? function() {
                        var r = "function" == typeof e ? e.call(n) : e
                          , i = "function" == typeof t ? t.call(n) : t;
                        return r ? B(r, i) : i
                    }
                    : void 0 : e ? t ? function() {
                        return B("function" == typeof e ? e.call(this) : e, "function" == typeof t ? t.call(this) : t)
                    }
                    : e : t
                }
                function z(t, e) {
                    return e ? t ? t.concat(e) : Array.isArray(e) ? e : [e] : t
                }
                function j(t, e) {
                    var n = Object.create(t || null);
                    return e ? y(n, e) : n
                }
                function H(t) {
                    var e = t.props;
                    if (e) {
                        var n, r, i = {};
                        if (Array.isArray(e))
                            for (n = e.length; n--; )
                                "string" == typeof (r = e[n]) && (i[_i(r)] = {
                                    type: null
                                });
                        else if (s(e))
                            for (var a in e)
                                r = e[a],
                                i[_i(a)] = s(r) ? r : {
                                    type: r
                                };
                        t.props = i
                    }
                }
                function G(t) {
                    var e = t.inject;
                    if (Array.isArray(e))
                        for (var n = t.inject = {}, r = 0; r < e.length; r++)
                            n[e[r]] = e[r]
                }
                function V(t) {
                    var e = t.directives;
                    if (e)
                        for (var n in e) {
                            var r = e[n];
                            "function" == typeof r && (e[n] = {
                                bind: r,
                                update: r
                            })
                        }
                }
                function W(t, e, n) {
                    function r(r) {
                        var i = oa[r] || sa;
                        l[r] = i(t[r], e[r], n, r)
                    }
                    "function" == typeof e && (e = e.options),
                    H(e),
                    G(e),
                    V(e);
                    var i = e.extends;
                    if (i && (t = W(t, i, n)),
                    e.mixins)
                        for (var a = 0, o = e.mixins.length; a < o; a++)
                            t = W(t, e.mixins[a], n);
                    var s, l = {};
                    for (s in t)
                        r(s);
                    for (s in e)
                        f(t, s) || r(s);
                    return l
                }
                function X(t, e, n, r) {
                    if ("string" == typeof n) {
                        var i = t[e];
                        if (f(i, n))
                            return i[n];
                        var a = _i(n);
                        if (f(i, a))
                            return i[a];
                        var o = wi(a);
                        return f(i, o) ? i[o] : i[n] || i[a] || i[o]
                    }
                }
                function q(t, e, n, r) {
                    var i = e[t]
                      , a = !f(n, t)
                      , o = n[t];
                    if (Z(Boolean, i.type) && (a && !f(i, "default") ? o = !1 : Z(String, i.type) || "" !== o && o !== Ei(t) || (o = !0)),
                    void 0 === o) {
                        o = Y(r, i, t);
                        var s = ia.shouldConvert;
                        ia.shouldConvert = !0,
                        O(o),
                        ia.shouldConvert = s
                    }
                    return o
                }
                function Y(t, e, n) {
                    if (f(e, "default")) {
                        var r = e.default;
                        return t && t.$options.propsData && void 0 === t.$options.propsData[n] && void 0 !== t._props[n] ? t._props[n] : "function" == typeof r && "Function" !== $(e.type) ? r.call(t) : r
                    }
                }
                function $(t) {
                    var e = t && t.toString().match(/^\s*function (\w+)/);
                    return e ? e[1] : ""
                }
                function Z(t, e) {
                    if (!Array.isArray(e))
                        return $(e) === $(t);
                    for (var n = 0, r = e.length; n < r; n++)
                        if ($(e[n]) === $(t))
                            return !0;
                    return !1
                }
                function J(t) {
                    return new la(void 0,void 0,void 0,String(t))
                }
                function K(t, e) {
                    var n = new la(t.tag,t.data,t.children,t.text,t.elm,t.context,t.componentOptions,t.asyncFactory);
                    return n.ns = t.ns,
                    n.isStatic = t.isStatic,
                    n.key = t.key,
                    n.isComment = t.isComment,
                    n.isCloned = !0,
                    e && t.children && (n.children = Q(t.children)),
                    n
                }
                function Q(t, e) {
                    for (var n = t.length, r = new Array(n), i = 0; i < n; i++)
                        r[i] = K(t[i], e);
                    return r
                }
                function tt(t) {
                    function e() {
                        var t = arguments
                          , n = e.fns;
                        if (!Array.isArray(n))
                            return n.apply(null, arguments);
                        for (var r = n.slice(), i = 0; i < r.length; i++)
                            r[i].apply(null, t)
                    }
                    return e.fns = t,
                    e
                }
                function et(t, e) {
                    return t.plain ? -1 : e.plain ? 1 : 0
                }
                function nt(t, n, r, i, a) {
                    var o, s, l, c, u = [], h = !1;
                    for (o in t)
                        s = t[o],
                        l = n[o],
                        (c = da(o)).plain || (h = !0),
                        e(s) || (e(l) ? (e(s.fns) && (s = t[o] = tt(s)),
                        c.handler = s,
                        u.push(c)) : s !== l && (l.fns = s,
                        t[o] = l));
                    if (u.length) {
                        h && u.sort(et);
                        for (var d = 0; d < u.length; d++) {
                            var p = u[d];
                            r(p.name, p.handler, p.once, p.capture, p.passive)
                        }
                    }
                    for (o in n)
                        e(t[o]) && i((c = da(o)).name, n[o], c.capture)
                }
                function rt(t, i, a) {
                    function o() {
                        a.apply(this, arguments),
                        p(s.fns, o)
                    }
                    var s, l = t[i];
                    e(l) ? s = tt([o]) : n(l.fns) && r(l.merged) ? (s = l).fns.push(o) : s = tt([l, o]),
                    s.merged = !0,
                    t[i] = s
                }
                function it(t, r, i) {
                    var a = r.options.props;
                    if (!e(a)) {
                        var o = {}
                          , s = t.attrs
                          , l = t.props;
                        if (n(s) || n(l))
                            for (var c in a) {
                                var u = Ei(c);
                                at(o, l, c, u, !0) || at(o, s, c, u, !1)
                            }
                        return o
                    }
                }
                function at(t, e, r, i, a) {
                    if (n(e)) {
                        if (f(e, r))
                            return t[r] = e[r],
                            a || delete e[r],
                            !0;
                        if (f(e, i))
                            return t[r] = e[i],
                            a || delete e[i],
                            !0
                    }
                    return !1
                }
                function ot(t) {
                    for (var e = 0; e < t.length; e++)
                        if (Array.isArray(t[e]))
                            return Array.prototype.concat.apply([], t);
                    return t
                }
                function st(t) {
                    return a(t) ? [J(t)] : Array.isArray(t) ? ct(t) : void 0
                }
                function lt(t) {
                    return n(t) && n(t.text) && i(t.isComment)
                }
                function ct(t, i) {
                    var o, s, l, c = [];
                    for (o = 0; o < t.length; o++)
                        e(s = t[o]) || "boolean" == typeof s || (l = c[c.length - 1],
                        Array.isArray(s) ? c.push.apply(c, ct(s, (i || "") + "_" + o)) : a(s) ? lt(l) ? l.text += String(s) : "" !== s && c.push(J(s)) : lt(s) && lt(l) ? c[c.length - 1] = J(l.text + s.text) : (r(t._isVList) && n(s.tag) && e(s.key) && n(i) && (s.key = "__vlist" + i + "_" + o + "__"),
                        c.push(s)));
                    return c
                }
                function ut(t, e) {
                    return t.__esModule && t.default && (t = t.default),
                    o(t) ? e.extend(t) : t
                }
                function ht(t, e, n, r, i) {
                    var a = ha();
                    return a.asyncFactory = t,
                    a.asyncMeta = {
                        data: e,
                        context: n,
                        children: r,
                        tag: i
                    },
                    a
                }
                function dt(t, i, a) {
                    if (r(t.error) && n(t.errorComp))
                        return t.errorComp;
                    if (n(t.resolved))
                        return t.resolved;
                    if (r(t.loading) && n(t.loadingComp))
                        return t.loadingComp;
                    if (!n(t.contexts)) {
                        var s = t.contexts = [a]
                          , l = !0
                          , c = function() {
                            for (var t = 0, e = s.length; t < e; t++)
                                s[t].$forceUpdate()
                        }
                          , u = M(function(e) {
                            t.resolved = ut(e, i),
                            l || c()
                        })
                          , h = M(function(e) {
                            n(t.errorComp) && (t.error = !0,
                            c())
                        })
                          , d = t(u, h);
                        return o(d) && ("function" == typeof d.then ? e(t.resolved) && d.then(u, h) : n(d.component) && "function" == typeof d.component.then && (d.component.then(u, h),
                        n(d.error) && (t.errorComp = ut(d.error, i)),
                        n(d.loading) && (t.loadingComp = ut(d.loading, i),
                        0 === d.delay ? t.loading = !0 : setTimeout(function() {
                            e(t.resolved) && e(t.error) && (t.loading = !0,
                            c())
                        }, d.delay || 200)),
                        n(d.timeout) && setTimeout(function() {
                            e(t.resolved) && h(null)
                        }, d.timeout))),
                        l = !1,
                        t.loading ? t.loadingComp : t.resolved
                    }
                    t.contexts.push(a)
                }
                function pt(t) {
                    return t.isComment && t.asyncFactory
                }
                function ft(t) {
                    if (Array.isArray(t))
                        for (var e = 0; e < t.length; e++) {
                            var r = t[e];
                            if (n(r) && (n(r.componentOptions) || pt(r)))
                                return r
                        }
                }
                function mt(t) {
                    t._events = Object.create(null),
                    t._hasHookEvent = !1;
                    var e = t.$options._parentListeners;
                    e && yt(t, e)
                }
                function vt(t, e, n) {
                    n ? ua.$once(t, e) : ua.$on(t, e)
                }
                function gt(t, e) {
                    ua.$off(t, e)
                }
                function yt(t, e, n) {
                    ua = t,
                    nt(e, n || {}, vt, gt, t)
                }
                function xt(t, e) {
                    var n = {};
                    if (!t)
                        return n;
                    for (var r = [], i = 0, a = t.length; i < a; i++) {
                        var o = t[i]
                          , s = o.data;
                        if (s && s.attrs && s.attrs.slot && delete s.attrs.slot,
                        o.context !== e && o.functionalContext !== e || !s || null == s.slot)
                            r.push(o);
                        else {
                            var l = o.data.slot
                              , c = n[l] || (n[l] = []);
                            "template" === o.tag ? c.push.apply(c, o.children) : c.push(o)
                        }
                    }
                    return r.every(bt) || (n.default = r),
                    n
                }
                function bt(t) {
                    return t.isComment || " " === t.text
                }
                function _t(t, e) {
                    e = e || {};
                    for (var n = 0; n < t.length; n++)
                        Array.isArray(t[n]) ? _t(t[n], e) : e[t[n].key] = t[n].fn;
                    return e
                }
                function wt(t) {
                    var e = t.$options
                      , n = e.parent;
                    if (n && !e.abstract) {
                        for (; n.$options.abstract && n.$parent; )
                            n = n.$parent;
                        n.$children.push(t)
                    }
                    t.$parent = n,
                    t.$root = n ? n.$root : t,
                    t.$children = [],
                    t.$refs = {},
                    t._watcher = null,
                    t._inactive = null,
                    t._directInactive = !1,
                    t._isMounted = !1,
                    t._isDestroyed = !1,
                    t._isBeingDestroyed = !1
                }
                function Mt(t, e, n) {
                    t.$el = e,
                    t.$options.render || (t.$options.render = ha),
                    Lt(t, "beforeMount");
                    var r;
                    return r = function() {
                        t._update(t._render(), n)
                    }
                    ,
                    t._watcher = new _a(t,r,b),
                    n = !1,
                    null == t.$vnode && (t._isMounted = !0,
                    Lt(t, "mounted")),
                    t
                }
                function Et(t, e, n, r, i) {
                    var a = !!(i || t.$options._renderChildren || r.data.scopedSlots || t.$scopedSlots !== Ci);
                    if (t.$options._parentVnode = r,
                    t.$vnode = r,
                    t._vnode && (t._vnode.parent = r),
                    t.$options._renderChildren = i,
                    t.$attrs = r.data && r.data.attrs || Ci,
                    t.$listeners = n || Ci,
                    e && t.$options.props) {
                        ia.shouldConvert = !1;
                        for (var o = t._props, s = t.$options._propKeys || [], l = 0; l < s.length; l++) {
                            var c = s[l];
                            o[c] = q(c, t.$options.props, e, t)
                        }
                        ia.shouldConvert = !0,
                        t.$options.propsData = e
                    }
                    if (n) {
                        var u = t.$options._parentListeners;
                        t.$options._parentListeners = n,
                        yt(t, n, u)
                    }
                    a && (t.$slots = xt(i, r.context),
                    t.$forceUpdate())
                }
                function Tt(t) {
                    for (; t && (t = t.$parent); )
                        if (t._inactive)
                            return !0;
                    return !1
                }
                function St(t, e) {
                    if (e) {
                        if (t._directInactive = !1,
                        Tt(t))
                            return
                    } else if (t._directInactive)
                        return;
                    if (t._inactive || null === t._inactive) {
                        t._inactive = !1;
                        for (var n = 0; n < t.$children.length; n++)
                            St(t.$children[n]);
                        Lt(t, "activated")
                    }
                }
                function At(t, e) {
                    if (!(e && (t._directInactive = !0,
                    Tt(t)) || t._inactive)) {
                        t._inactive = !0;
                        for (var n = 0; n < t.$children.length; n++)
                            At(t.$children[n]);
                        Lt(t, "deactivated")
                    }
                }
                function Lt(t, e) {
                    var n = t.$options[e];
                    if (n)
                        for (var r = 0, i = n.length; r < i; r++)
                            try {
                                n[r].call(t)
                            } catch (n) {
                                A(n, t, e + " hook")
                            }
                    t._hasHookEvent && t.$emit("hook:" + e)
                }
                function Rt() {
                    xa = fa.length = ma.length = 0,
                    va = {},
                    ga = ya = !1
                }
                function Pt() {
                    ya = !0;
                    var t, e;
                    for (fa.sort(function(t, e) {
                        return t.id - e.id
                    }),
                    xa = 0; xa < fa.length; xa++)
                        e = (t = fa[xa]).id,
                        va[e] = null,
                        t.run();
                    var n = ma.slice()
                      , r = fa.slice();
                    Rt(),
                    Ot(n),
                    Ct(r),
                    $i && Pi.devtools && $i.emit("flush")
                }
                function Ct(t) {
                    for (var e = t.length; e--; ) {
                        var n = t[e]
                          , r = n.vm;
                        r._watcher === n && r._isMounted && Lt(r, "updated")
                    }
                }
                function It(t) {
                    t._inactive = !1,
                    ma.push(t)
                }
                function Ot(t) {
                    for (var e = 0; e < t.length; e++)
                        t[e]._inactive = !0,
                        St(t[e], !0)
                }
                function Nt(t) {
                    var e = t.id;
                    if (null == va[e]) {
                        if (va[e] = !0,
                        ya) {
                            for (var n = fa.length - 1; n > xa && fa[n].id > t.id; )
                                n--;
                            fa.splice(n + 1, 0, t)
                        } else
                            fa.push(t);
                        ga || (ga = !0,
                        Ji(Pt))
                    }
                }
                function Dt(t) {
                    wa.clear(),
                    Ut(t, wa)
                }
                function Ut(t, e) {
                    var n, r, i = Array.isArray(t);
                    if ((i || o(t)) && Object.isExtensible(t)) {
                        if (t.__ob__) {
                            var a = t.__ob__.dep.id;
                            if (e.has(a))
                                return;
                            e.add(a)
                        }
                        if (i)
                            for (n = t.length; n--; )
                                Ut(t[n], e);
                        else
                            for (n = (r = Object.keys(t)).length; n--; )
                                Ut(t[r[n]], e)
                    }
                }
                function kt(t, e, n) {
                    Ma.get = function() {
                        return this[e][n]
                    }
                    ,
                    Ma.set = function(t) {
                        this[e][n] = t
                    }
                    ,
                    Object.defineProperty(t, n, Ma)
                }
                function Bt(t) {
                    t._watchers = [];
                    var e = t.$options;
                    e.props && Ft(t, e.props),
                    e.methods && Wt(t, e.methods),
                    e.data ? zt(t) : O(t._data = {}, !0),
                    e.computed && Ht(t, e.computed),
                    e.watch && e.watch !== Gi && Xt(t, e.watch)
                }
                function Ft(t, e) {
                    var n = t.$options.propsData || {}
                      , r = t._props = {}
                      , i = t.$options._propKeys = []
                      , a = !t.$parent;
                    ia.shouldConvert = a;
                    for (var o in e)
                        !function(a) {
                            i.push(a);
                            var o = q(a, e, n, t);
                            N(r, a, o),
                            a in t || kt(t, "_props", a)
                        }(o);
                    ia.shouldConvert = !0
                }
                function zt(t) {
                    var e = t.$options.data;
                    s(e = t._data = "function" == typeof e ? jt(e, t) : e || {}) || (e = {});
                    for (var n = Object.keys(e), r = t.$options.props, i = (t.$options.methods,
                    n.length); i--; ) {
                        var a = n[i];
                        r && f(r, a) || E(a) || kt(t, "_data", a)
                    }
                    O(e, !0)
                }
                function jt(t, e) {
                    try {
                        return t.call(e)
                    } catch (t) {
                        return A(t, e, "data()"),
                        {}
                    }
                }
                function Ht(t, e) {
                    var n = t._computedWatchers = Object.create(null)
                      , r = Yi();
                    for (var i in e) {
                        var a = e[i]
                          , o = "function" == typeof a ? a : a.get;
                        r || (n[i] = new _a(t,o || b,b,Ea)),
                        i in t || Gt(t, i, a)
                    }
                }
                function Gt(t, e, n) {
                    var r = !Yi();
                    "function" == typeof n ? (Ma.get = r ? Vt(e) : n,
                    Ma.set = b) : (Ma.get = n.get ? r && !1 !== n.cache ? Vt(e) : n.get : b,
                    Ma.set = n.set ? n.set : b),
                    Object.defineProperty(t, e, Ma)
                }
                function Vt(t) {
                    return function() {
                        var e = this._computedWatchers && this._computedWatchers[t];
                        if (e)
                            return e.dirty && e.evaluate(),
                            Qi.target && e.depend(),
                            e.value
                    }
                }
                function Wt(t, e) {
                    t.$options.props;
                    for (var n in e)
                        t[n] = null == e[n] ? b : v(e[n], t)
                }
                function Xt(t, e) {
                    for (var n in e) {
                        var r = e[n];
                        if (Array.isArray(r))
                            for (var i = 0; i < r.length; i++)
                                qt(t, n, r[i]);
                        else
                            qt(t, n, r)
                    }
                }
                function qt(t, e, n, r) {
                    return s(n) && (r = n,
                    n = n.handler),
                    "string" == typeof n && (n = t[n]),
                    t.$watch(e, n, r)
                }
                function Yt(t) {
                    var e = t.$options.provide;
                    e && (t._provided = "function" == typeof e ? e.call(t) : e)
                }
                function $t(t) {
                    var e = Zt(t.$options.inject, t);
                    e && (ia.shouldConvert = !1,
                    Object.keys(e).forEach(function(n) {
                        N(t, n, e[n])
                    }),
                    ia.shouldConvert = !0)
                }
                function Zt(t, e) {
                    if (t) {
                        for (var n = Object.create(null), r = Zi ? Reflect.ownKeys(t).filter(function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }) : Object.keys(t), i = 0; i < r.length; i++)
                            for (var a = r[i], o = t[a], s = e; s; ) {
                                if (s._provided && o in s._provided) {
                                    n[a] = s._provided[o];
                                    break
                                }
                                s = s.$parent
                            }
                        return n
                    }
                }
                function Jt(t, e, r, i, a) {
                    var o = {}
                      , s = t.options.props;
                    if (n(s))
                        for (var l in s)
                            o[l] = q(l, s, e || Ci);
                    else
                        n(r.attrs) && Kt(o, r.attrs),
                        n(r.props) && Kt(o, r.props);
                    var c = Object.create(i)
                      , u = t.options.render.call(null, function(t, e, n, r) {
                        return ie(c, t, e, n, r, !0)
                    }, {
                        data: r,
                        props: o,
                        children: a,
                        parent: i,
                        listeners: r.on || Ci,
                        injections: Zt(t.options.inject, i),
                        slots: function() {
                            return xt(a, i)
                        }
                    });
                    return u instanceof la && (u.functionalContext = i,
                    u.functionalOptions = t.options,
                    r.slot && ((u.data || (u.data = {})).slot = r.slot)),
                    u
                }
                function Kt(t, e) {
                    for (var n in e)
                        t[_i(n)] = e[n]
                }
                function Qt(t, i, a, s, l) {
                    if (!e(t)) {
                        var c = a.$options._base;
                        if (o(t) && (t = c.extend(t)),
                        "function" == typeof t) {
                            var u;
                            if (e(t.cid) && (u = t,
                            void 0 === (t = dt(u, c, a))))
                                return ht(u, i, a, s, l);
                            i = i || {},
                            xe(t),
                            n(i.model) && re(t.options, i);
                            var h = it(i, t, l);
                            if (r(t.options.functional))
                                return Jt(t, h, i, a, s);
                            var d = i.on;
                            if (i.on = i.nativeOn,
                            r(t.options.abstract)) {
                                var p = i.slot;
                                i = {},
                                p && (i.slot = p)
                            }
                            ee(i);
                            var f = t.options.name || l;
                            return new la("vue-component-" + t.cid + (f ? "-" + f : ""),i,void 0,void 0,void 0,a,{
                                Ctor: t,
                                propsData: h,
                                listeners: d,
                                tag: l,
                                children: s
                            },u)
                        }
                    }
                }
                function te(t, e, r, i) {
                    var a = t.componentOptions
                      , o = {
                        _isComponent: !0,
                        parent: e,
                        propsData: a.propsData,
                        _componentTag: a.tag,
                        _parentVnode: t,
                        _parentListeners: a.listeners,
                        _renderChildren: a.children,
                        _parentElm: r || null,
                        _refElm: i || null
                    }
                      , s = t.data.inlineTemplate;
                    return n(s) && (o.render = s.render,
                    o.staticRenderFns = s.staticRenderFns),
                    new a.Ctor(o)
                }
                function ee(t) {
                    t.hook || (t.hook = {});
                    for (var e = 0; e < Sa.length; e++) {
                        var n = Sa[e]
                          , r = t.hook[n]
                          , i = Ta[n];
                        t.hook[n] = r ? ne(i, r) : i
                    }
                }
                function ne(t, e) {
                    return function(n, r, i, a) {
                        t(n, r, i, a),
                        e(n, r, i, a)
                    }
                }
                function re(t, e) {
                    var r = t.model && t.model.prop || "value"
                      , i = t.model && t.model.event || "input";
                    (e.props || (e.props = {}))[r] = e.model.value;
                    var a = e.on || (e.on = {});
                    n(a[i]) ? a[i] = [e.model.callback].concat(a[i]) : a[i] = e.model.callback
                }
                function ie(t, e, n, i, o, s) {
                    return (Array.isArray(n) || a(n)) && (o = i,
                    i = n,
                    n = void 0),
                    r(s) && (o = La),
                    ae(t, e, n, i, o)
                }
                function ae(t, e, r, i, a) {
                    if (n(r) && n(r.__ob__))
                        return ha();
                    if (n(r) && n(r.is) && (e = r.is),
                    !e)
                        return ha();
                    Array.isArray(i) && "function" == typeof i[0] && ((r = r || {}).scopedSlots = {
                        default: i[0]
                    },
                    i.length = 0),
                    a === La ? i = st(i) : a === Aa && (i = ot(i));
                    var o, s;
                    if ("string" == typeof e) {
                        var l;
                        s = t.$vnode && t.$vnode.ns || Pi.getTagNamespace(e),
                        o = Pi.isReservedTag(e) ? new la(Pi.parsePlatformTagName(e),r,i,void 0,void 0,t) : n(l = X(t.$options, "components", e)) ? Qt(l, r, t, i, e) : new la(e,r,i,void 0,void 0,t)
                    } else
                        o = Qt(e, r, t, i);
                    return n(o) ? (s && oe(o, s),
                    o) : ha()
                }
                function oe(t, r) {
                    if (t.ns = r,
                    "foreignObject" !== t.tag && n(t.children))
                        for (var i = 0, a = t.children.length; i < a; i++) {
                            var o = t.children[i];
                            n(o.tag) && e(o.ns) && oe(o, r)
                        }
                }
                function se(t, e) {
                    var r, i, a, s, l;
                    if (Array.isArray(t) || "string" == typeof t)
                        for (r = new Array(t.length),
                        i = 0,
                        a = t.length; i < a; i++)
                            r[i] = e(t[i], i);
                    else if ("number" == typeof t)
                        for (r = new Array(t),
                        i = 0; i < t; i++)
                            r[i] = e(i + 1, i);
                    else if (o(t))
                        for (s = Object.keys(t),
                        r = new Array(s.length),
                        i = 0,
                        a = s.length; i < a; i++)
                            l = s[i],
                            r[i] = e(t[l], l, i);
                    return n(r) && (r._isVList = !0),
                    r
                }
                function le(t, e, n, r) {
                    var i = this.$scopedSlots[t];
                    return i ? (n = n || {},
                    r && (n = y(y({}, r), n)),
                    i(n) || e) : this.$slots[t] || e
                }
                function ce(t) {
                    return X(this.$options, "filters", t, !0) || Si
                }
                function ue(t, e, n) {
                    var r = Pi.keyCodes[e] || n;
                    return Array.isArray(r) ? -1 === r.indexOf(t) : r !== t
                }
                function he(t, e, n, r, i) {
                    if (n && o(n)) {
                        Array.isArray(n) && (n = x(n));
                        var a;
                        for (var s in n)
                            !function(o) {
                                if ("class" === o || "style" === o || yi(o))
                                    a = t;
                                else {
                                    var s = t.attrs && t.attrs.type;
                                    a = r || Pi.mustUseProp(e, s, o) ? t.domProps || (t.domProps = {}) : t.attrs || (t.attrs = {})
                                }
                                o in a || (a[o] = n[o],
                                i && ((t.on || (t.on = {}))["update:" + o] = function(t) {
                                    n[o] = t
                                }
                                ))
                            }(s)
                    }
                    return t
                }
                function de(t, e) {
                    var n = this._staticTrees[t];
                    return n && !e ? Array.isArray(n) ? Q(n) : K(n) : (n = this._staticTrees[t] = this.$options.staticRenderFns[t].call(this._renderProxy),
                    fe(n, "__static__" + t, !1),
                    n)
                }
                function pe(t, e, n) {
                    return fe(t, "__once__" + e + (n ? "_" + n : ""), !0),
                    t
                }
                function fe(t, e, n) {
                    if (Array.isArray(t))
                        for (var r = 0; r < t.length; r++)
                            t[r] && "string" != typeof t[r] && me(t[r], e + "_" + r, n);
                    else
                        me(t, e, n)
                }
                function me(t, e, n) {
                    t.isStatic = !0,
                    t.key = e,
                    t.isOnce = n
                }
                function ve(t, e) {
                    if (e && s(e)) {
                        var n = t.on = t.on ? y({}, t.on) : {};
                        for (var r in e) {
                            var i = n[r]
                              , a = e[r];
                            n[r] = i ? [].concat(a, i) : a
                        }
                    }
                    return t
                }
                function ge(t) {
                    t._vnode = null,
                    t._staticTrees = null;
                    var e = t.$vnode = t.$options._parentVnode
                      , n = e && e.context;
                    t.$slots = xt(t.$options._renderChildren, n),
                    t.$scopedSlots = Ci,
                    t._c = function(e, n, r, i) {
                        return ie(t, e, n, r, i, !1)
                    }
                    ,
                    t.$createElement = function(e, n, r, i) {
                        return ie(t, e, n, r, i, !0)
                    }
                    ;
                    var r = e && e.data;
                    N(t, "$attrs", r && r.attrs || Ci, null, !0),
                    N(t, "$listeners", t.$options._parentListeners || Ci, null, !0)
                }
                function ye(t, e) {
                    var n = t.$options = Object.create(t.constructor.options);
                    n.parent = e.parent,
                    n.propsData = e.propsData,
                    n._parentVnode = e._parentVnode,
                    n._parentListeners = e._parentListeners,
                    n._renderChildren = e._renderChildren,
                    n._componentTag = e._componentTag,
                    n._parentElm = e._parentElm,
                    n._refElm = e._refElm,
                    e.render && (n.render = e.render,
                    n.staticRenderFns = e.staticRenderFns)
                }
                function xe(t) {
                    var e = t.options;
                    if (t.super) {
                        var n = xe(t.super);
                        if (n !== t.superOptions) {
                            t.superOptions = n;
                            var r = be(t);
                            r && y(t.extendOptions, r),
                            (e = t.options = W(n, t.extendOptions)).name && (e.components[e.name] = t)
                        }
                    }
                    return e
                }
                function be(t) {
                    var e, n = t.options, r = t.extendOptions, i = t.sealedOptions;
                    for (var a in n)
                        n[a] !== i[a] && (e || (e = {}),
                        e[a] = _e(n[a], r[a], i[a]));
                    return e
                }
                function _e(t, e, n) {
                    if (Array.isArray(t)) {
                        var r = [];
                        n = Array.isArray(n) ? n : [n],
                        e = Array.isArray(e) ? e : [e];
                        for (var i = 0; i < t.length; i++)
                            (e.indexOf(t[i]) >= 0 || n.indexOf(t[i]) < 0) && r.push(t[i]);
                        return r
                    }
                    return t
                }
                function we(t) {
                    this._init(t)
                }
                function Me(t) {
                    t.use = function(t) {
                        var e = this._installedPlugins || (this._installedPlugins = []);
                        if (e.indexOf(t) > -1)
                            return this;
                        var n = g(arguments, 1);
                        return n.unshift(this),
                        "function" == typeof t.install ? t.install.apply(t, n) : "function" == typeof t && t.apply(null, n),
                        e.push(t),
                        this
                    }
                }
                function Ee(t) {
                    t.mixin = function(t) {
                        return this.options = W(this.options, t),
                        this
                    }
                }
                function Te(t) {
                    t.cid = 0;
                    var e = 1;
                    t.extend = function(t) {
                        t = t || {};
                        var n = this
                          , r = n.cid
                          , i = t._Ctor || (t._Ctor = {});
                        if (i[r])
                            return i[r];
                        var a = t.name || n.options.name
                          , o = function(t) {
                            this._init(t)
                        };
                        return o.prototype = Object.create(n.prototype),
                        o.prototype.constructor = o,
                        o.cid = e++,
                        o.options = W(n.options, t),
                        o.super = n,
                        o.options.props && Se(o),
                        o.options.computed && Ae(o),
                        o.extend = n.extend,
                        o.mixin = n.mixin,
                        o.use = n.use,
                        Li.forEach(function(t) {
                            o[t] = n[t]
                        }),
                        a && (o.options.components[a] = o),
                        o.superOptions = n.options,
                        o.extendOptions = t,
                        o.sealedOptions = y({}, o.options),
                        i[r] = o,
                        o
                    }
                }
                function Se(t) {
                    var e = t.options.props;
                    for (var n in e)
                        kt(t.prototype, "_props", n)
                }
                function Ae(t) {
                    var e = t.options.computed;
                    for (var n in e)
                        Gt(t.prototype, n, e[n])
                }
                function Le(t) {
                    Li.forEach(function(e) {
                        t[e] = function(t, n) {
                            return n ? ("component" === e && s(n) && (n.name = n.name || t,
                            n = this.options._base.extend(n)),
                            "directive" === e && "function" == typeof n && (n = {
                                bind: n,
                                update: n
                            }),
                            this.options[e + "s"][t] = n,
                            n) : this.options[e + "s"][t]
                        }
                    })
                }
                function Re(t) {
                    return t && (t.Ctor.options.name || t.tag)
                }
                function Pe(t, e) {
                    return Array.isArray(t) ? t.indexOf(e) > -1 : "string" == typeof t ? t.split(",").indexOf(e) > -1 : !!l(t) && t.test(e)
                }
                function Ce(t, e, n) {
                    for (var r in t) {
                        var i = t[r];
                        if (i) {
                            var a = Re(i.componentOptions);
                            a && !n(a) && (i !== e && Ie(i),
                            t[r] = null)
                        }
                    }
                }
                function Ie(t) {
                    t && t.componentInstance.$destroy()
                }
                function Oe(t) {
                    for (var e = t.data, r = t, i = t; n(i.componentInstance); )
                        (i = i.componentInstance._vnode).data && (e = Ne(i.data, e));
                    for (; n(r = r.parent); )
                        r.data && (e = Ne(e, r.data));
                    return De(e.staticClass, e.class)
                }
                function Ne(t, e) {
                    return {
                        staticClass: Ue(t.staticClass, e.staticClass),
                        class: n(t.class) ? [t.class, e.class] : e.class
                    }
                }
                function De(t, e) {
                    return n(t) || n(e) ? Ue(t, ke(e)) : ""
                }
                function Ue(t, e) {
                    return t ? e ? t + " " + e : t : e || ""
                }
                function ke(t) {
                    return Array.isArray(t) ? Be(t) : o(t) ? Fe(t) : "string" == typeof t ? t : ""
                }
                function Be(t) {
                    for (var e, r = "", i = 0, a = t.length; i < a; i++)
                        n(e = ke(t[i])) && "" !== e && (r && (r += " "),
                        r += e);
                    return r
                }
                function Fe(t) {
                    var e = "";
                    for (var n in t)
                        t[n] && (e && (e += " "),
                        e += n);
                    return e
                }
                function ze(t) {
                    return Ka(t) ? "svg" : "math" === t ? "math" : void 0
                }
                function je(t) {
                    return "string" == typeof t ? document.querySelector(t) || document.createElement("div") : t
                }
                function He(t, e) {
                    var n = t.data.ref;
                    if (n) {
                        var r = t.context
                          , i = t.componentInstance || t.elm
                          , a = r.$refs;
                        e ? Array.isArray(a[n]) ? p(a[n], i) : a[n] === i && (a[n] = void 0) : t.data.refInFor ? Array.isArray(a[n]) ? a[n].indexOf(i) < 0 && a[n].push(i) : a[n] = [i] : a[n] = i
                    }
                }
                function Ge(t, i) {
                    return t.key === i.key && (t.tag === i.tag && t.isComment === i.isComment && n(t.data) === n(i.data) && Ve(t, i) || r(t.isAsyncPlaceholder) && t.asyncFactory === i.asyncFactory && e(i.asyncFactory.error))
                }
                function Ve(t, e) {
                    if ("input" !== t.tag)
                        return !0;
                    var r, i = n(r = t.data) && n(r = r.attrs) && r.type, a = n(r = e.data) && n(r = r.attrs) && r.type;
                    return i === a || eo(i) && eo(a)
                }
                function We(t, e, r) {
                    var i, a, o = {};
                    for (i = e; i <= r; ++i)
                        n(a = t[i].key) && (o[a] = i);
                    return o
                }
                function Xe(t, e) {
                    (t.data.directives || e.data.directives) && qe(t, e)
                }
                function qe(t, e) {
                    var n, r, i, a = t === io, o = e === io, s = Ye(t.data.directives, t.context), l = Ye(e.data.directives, e.context), c = [], u = [];
                    for (n in l)
                        r = s[n],
                        i = l[n],
                        r ? (i.oldValue = r.value,
                        Ze(i, "update", e, t),
                        i.def && i.def.componentUpdated && u.push(i)) : (Ze(i, "bind", e, t),
                        i.def && i.def.inserted && c.push(i));
                    if (c.length) {
                        var h = function() {
                            for (var n = 0; n < c.length; n++)
                                Ze(c[n], "inserted", e, t)
                        };
                        a ? rt(e.data.hook || (e.data.hook = {}), "insert", h) : h()
                    }
                    if (u.length && rt(e.data.hook || (e.data.hook = {}), "postpatch", function() {
                        for (var n = 0; n < u.length; n++)
                            Ze(u[n], "componentUpdated", e, t)
                    }),
                    !a)
                        for (n in s)
                            l[n] || Ze(s[n], "unbind", t, t, o)
                }
                function Ye(t, e) {
                    var n = Object.create(null);
                    if (!t)
                        return n;
                    var r, i;
                    for (r = 0; r < t.length; r++)
                        (i = t[r]).modifiers || (i.modifiers = so),
                        n[$e(i)] = i,
                        i.def = X(e.$options, "directives", i.name, !0);
                    return n
                }
                function $e(t) {
                    return t.rawName || t.name + "." + Object.keys(t.modifiers || {}).join(".")
                }
                function Ze(t, e, n, r, i) {
                    var a = t.def && t.def[e];
                    if (a)
                        try {
                            a(n.elm, t, n, r, i)
                        } catch (r) {
                            A(r, n.context, "directive " + t.name + " " + e + " hook")
                        }
                }
                function Je(t, r) {
                    var i = r.componentOptions;
                    if (!(n(i) && !1 === i.Ctor.options.inheritAttrs || e(t.data.attrs) && e(r.data.attrs))) {
                        var a, o, s = r.elm, l = t.data.attrs || {}, c = r.data.attrs || {};
                        n(c.__ob__) && (c = r.data.attrs = y({}, c));
                        for (a in c)
                            o = c[a],
                            l[a] !== o && Ke(s, a, o);
                        Bi && c.value !== l.value && Ke(s, "value", c.value);
                        for (a in l)
                            e(c[a]) && (qa(a) ? s.removeAttributeNS(Xa, Ya(a)) : Va(a) || s.removeAttribute(a))
                    }
                }
                function Ke(t, e, n) {
                    Wa(e) ? $a(n) ? t.removeAttribute(e) : (n = "allowfullscreen" === e && "EMBED" === t.tagName ? "true" : e,
                    t.setAttribute(e, n)) : Va(e) ? t.setAttribute(e, $a(n) || "false" === n ? "false" : "true") : qa(e) ? $a(n) ? t.removeAttributeNS(Xa, Ya(e)) : t.setAttributeNS(Xa, e, n) : $a(n) ? t.removeAttribute(e) : t.setAttribute(e, n)
                }
                function Qe(t, r) {
                    var i = r.elm
                      , a = r.data
                      , o = t.data;
                    if (!(e(a.staticClass) && e(a.class) && (e(o) || e(o.staticClass) && e(o.class)))) {
                        var s = Oe(r)
                          , l = i._transitionClasses;
                        n(l) && (s = Ue(s, ke(l))),
                        s !== i._prevClass && (i.setAttribute("class", s),
                        i._prevClass = s)
                    }
                }
                function tn(t) {
                    function e() {
                        (o || (o = [])).push(t.slice(f, i).trim()),
                        f = i + 1
                    }
                    var n, r, i, a, o, s = !1, l = !1, c = !1, u = !1, h = 0, d = 0, p = 0, f = 0;
                    for (i = 0; i < t.length; i++)
                        if (r = n,
                        n = t.charCodeAt(i),
                        s)
                            39 === n && 92 !== r && (s = !1);
                        else if (l)
                            34 === n && 92 !== r && (l = !1);
                        else if (c)
                            96 === n && 92 !== r && (c = !1);
                        else if (u)
                            47 === n && 92 !== r && (u = !1);
                        else if (124 !== n || 124 === t.charCodeAt(i + 1) || 124 === t.charCodeAt(i - 1) || h || d || p) {
                            switch (n) {
                            case 34:
                                l = !0;
                                break;
                            case 39:
                                s = !0;
                                break;
                            case 96:
                                c = !0;
                                break;
                            case 40:
                                p++;
                                break;
                            case 41:
                                p--;
                                break;
                            case 91:
                                d++;
                                break;
                            case 93:
                                d--;
                                break;
                            case 123:
                                h++;
                                break;
                            case 125:
                                h--
                            }
                            if (47 === n) {
                                for (var m = i - 1, v = void 0; m >= 0 && " " === (v = t.charAt(m)); m--)
                                    ;
                                v && ho.test(v) || (u = !0)
                            }
                        } else
                            void 0 === a ? (f = i + 1,
                            a = t.slice(0, i).trim()) : e();
                    if (void 0 === a ? a = t.slice(0, i).trim() : 0 !== f && e(),
                    o)
                        for (i = 0; i < o.length; i++)
                            a = en(a, o[i]);
                    return a
                }
                function en(t, e) {
                    var n = e.indexOf("(");
                    return n < 0 ? '_f("' + e + '")(' + t + ")" : '_f("' + e.slice(0, n) + '")(' + t + "," + e.slice(n + 1)
                }
                function nn(t) {
                    console.error("[Vue compiler]: " + t)
                }
                function rn(t, e) {
                    return t ? t.map(function(t) {
                        return t[e]
                    }).filter(function(t) {
                        return t
                    }) : []
                }
                function an(t, e, n) {
                    (t.props || (t.props = [])).push({
                        name: e,
                        value: n
                    })
                }
                function on(t, e, n) {
                    (t.attrs || (t.attrs = [])).push({
                        name: e,
                        value: n
                    })
                }
                function sn(t, e, n, r, i, a) {
                    (t.directives || (t.directives = [])).push({
                        name: e,
                        rawName: n,
                        value: r,
                        arg: i,
                        modifiers: a
                    })
                }
                function ln(t, e, n, r, i, a) {
                    r && r.capture && (delete r.capture,
                    e = "!" + e),
                    r && r.once && (delete r.once,
                    e = "~" + e),
                    r && r.passive && (delete r.passive,
                    e = "&" + e);
                    var o;
                    r && r.native ? (delete r.native,
                    o = t.nativeEvents || (t.nativeEvents = {})) : o = t.events || (t.events = {});
                    var s = {
                        value: n,
                        modifiers: r
                    }
                      , l = o[e];
                    Array.isArray(l) ? i ? l.unshift(s) : l.push(s) : o[e] = l ? i ? [s, l] : [l, s] : s
                }
                function cn(t, e, n) {
                    var r = un(t, ":" + e) || un(t, "v-bind:" + e);
                    if (null != r)
                        return tn(r);
                    if (!1 !== n) {
                        var i = un(t, e);
                        if (null != i)
                            return JSON.stringify(i)
                    }
                }
                function un(t, e) {
                    var n;
                    if (null != (n = t.attrsMap[e]))
                        for (var r = t.attrsList, i = 0, a = r.length; i < a; i++)
                            if (r[i].name === e) {
                                r.splice(i, 1);
                                break
                            }
                    return n
                }
                function hn(t, e, n) {
                    var r = n || {}
                      , i = r.number
                      , a = "$$v";
                    r.trim && (a = "(typeof $$v === 'string'? $$v.trim(): $$v)"),
                    i && (a = "_n(" + a + ")");
                    var o = dn(e, a);
                    t.model = {
                        value: "(" + e + ")",
                        expression: '"' + e + '"',
                        callback: "function ($$v) {" + o + "}"
                    }
                }
                function dn(t, e) {
                    var n = pn(t);
                    return null === n.idx ? t + "=" + e : "$set(" + n.exp + ", " + n.idx + ", " + e + ")"
                }
                function pn(t) {
                    if (Oa = t,
                    Ia = Oa.length,
                    Da = Ua = ka = 0,
                    t.indexOf("[") < 0 || t.lastIndexOf("]") < Ia - 1)
                        return {
                            exp: t,
                            idx: null
                        };
                    for (; !mn(); )
                        vn(Na = fn()) ? yn(Na) : 91 === Na && gn(Na);
                    return {
                        exp: t.substring(0, Ua),
                        idx: t.substring(Ua + 1, ka)
                    }
                }
                function fn() {
                    return Oa.charCodeAt(++Da)
                }
                function mn() {
                    return Da >= Ia
                }
                function vn(t) {
                    return 34 === t || 39 === t
                }
                function gn(t) {
                    var e = 1;
                    for (Ua = Da; !mn(); )
                        if (t = fn(),
                        vn(t))
                            yn(t);
                        else if (91 === t && e++,
                        93 === t && e--,
                        0 === e) {
                            ka = Da;
                            break
                        }
                }
                function yn(t) {
                    for (var e = t; !mn() && (t = fn()) !== e; )
                        ;
                }
                function xn(t, e, n) {
                    var r = n && n.number
                      , i = cn(t, "value") || "null"
                      , a = cn(t, "true-value") || "true"
                      , o = cn(t, "false-value") || "false";
                    an(t, "checked", "Array.isArray(" + e + ")?_i(" + e + "," + i + ")>-1" + ("true" === a ? ":(" + e + ")" : ":_q(" + e + "," + a + ")")),
                    ln(t, fo, "var $$a=" + e + ",$$el=$event.target,$$c=$$el.checked?(" + a + "):(" + o + ");if(Array.isArray($$a)){var $$v=" + (r ? "_n(" + i + ")" : i) + ",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&(" + e + "=$$a.concat([$$v]))}else{$$i>-1&&(" + e + "=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{" + dn(e, "$$c") + "}", null, !0)
                }
                function bn(t, e, n) {
                    var r = n && n.number
                      , i = cn(t, "value") || "null";
                    an(t, "checked", "_q(" + e + "," + (i = r ? "_n(" + i + ")" : i) + ")"),
                    ln(t, fo, dn(e, i), null, !0)
                }
                function _n(t, e, n) {
                    var r = 'var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return ' + (n && n.number ? "_n(val)" : "val") + "});";
                    ln(t, "change", r = r + " " + dn(e, "$event.target.multiple ? $$selectedVal : $$selectedVal[0]"), null, !0)
                }
                function wn(t, e, n) {
                    var r = t.attrsMap.type
                      , i = n || {}
                      , a = i.lazy
                      , o = i.number
                      , s = i.trim
                      , l = !a && "range" !== r
                      , c = a ? "change" : "range" === r ? po : "input"
                      , u = "$event.target.value";
                    s && (u = "$event.target.value.trim()"),
                    o && (u = "_n(" + u + ")");
                    var h = dn(e, u);
                    l && (h = "if($event.target.composing)return;" + h),
                    an(t, "value", "(" + e + ")"),
                    ln(t, c, h, null, !0),
                    (s || o) && ln(t, "blur", "$forceUpdate()")
                }
                function Mn(t) {
                    var e;
                    n(t[po]) && (t[e = ki ? "change" : "input"] = [].concat(t[po], t[e] || []),
                    delete t[po]),
                    n(t[fo]) && (t[e = Hi ? "click" : "change"] = [].concat(t[fo], t[e] || []),
                    delete t[fo])
                }
                function En(t, e, n, r, i) {
                    if (n) {
                        var a = e
                          , o = Fa;
                        e = function(n) {
                            null !== (1 === arguments.length ? a(n) : a.apply(null, arguments)) && Tn(t, e, r, o)
                        }
                    }
                    Fa.addEventListener(t, e, Vi ? {
                        capture: r,
                        passive: i
                    } : r)
                }
                function Tn(t, e, n, r) {
                    (r || Fa).removeEventListener(t, e, n)
                }
                function Sn(t, n) {
                    if (!e(t.data.on) || !e(n.data.on)) {
                        var r = n.data.on || {}
                          , i = t.data.on || {};
                        Fa = n.elm,
                        Mn(r),
                        nt(r, i, En, Tn, n.context)
                    }
                }
                function An(t, r) {
                    if (!e(t.data.domProps) || !e(r.data.domProps)) {
                        var i, a, o = r.elm, s = t.data.domProps || {}, l = r.data.domProps || {};
                        n(l.__ob__) && (l = r.data.domProps = y({}, l));
                        for (i in s)
                            e(l[i]) && (o[i] = "");
                        for (i in l)
                            if (a = l[i],
                            "textContent" !== i && "innerHTML" !== i || (r.children && (r.children.length = 0),
                            a !== s[i]))
                                if ("value" === i) {
                                    o._value = a;
                                    var c = e(a) ? "" : String(a);
                                    Ln(o, r, c) && (o.value = c)
                                } else
                                    o[i] = a
                    }
                }
                function Ln(t, e, n) {
                    return !t.composing && ("option" === e.tag || Rn(t, n) || Pn(t, n))
                }
                function Rn(t, e) {
                    var n = !0;
                    try {
                        n = document.activeElement !== t
                    } catch (t) {}
                    return n && t.value !== e
                }
                function Pn(t, e) {
                    var r = t.value
                      , i = t._vModifiers;
                    return n(i) && i.number ? h(r) !== h(e) : n(i) && i.trim ? r.trim() !== e.trim() : r !== e
                }
                function Cn(t) {
                    var e = In(t.style);
                    return t.staticStyle ? y(t.staticStyle, e) : e
                }
                function In(t) {
                    return Array.isArray(t) ? x(t) : "string" == typeof t ? go(t) : t
                }
                function On(t, e) {
                    var n, r = {};
                    if (e)
                        for (var i = t; i.componentInstance; )
                            (i = i.componentInstance._vnode).data && (n = Cn(i.data)) && y(r, n);
                    (n = Cn(t.data)) && y(r, n);
                    for (var a = t; a = a.parent; )
                        a.data && (n = Cn(a.data)) && y(r, n);
                    return r
                }
                function Nn(t, r) {
                    var i = r.data
                      , a = t.data;
                    if (!(e(i.staticStyle) && e(i.style) && e(a.staticStyle) && e(a.style))) {
                        var o, s, l = r.elm, c = a.staticStyle, u = a.normalizedStyle || a.style || {}, h = c || u, d = In(r.data.style) || {};
                        r.data.normalizedStyle = n(d.__ob__) ? y({}, d) : d;
                        var p = On(r, !0);
                        for (s in h)
                            e(p[s]) && bo(l, s, "");
                        for (s in p)
                            (o = p[s]) !== h[s] && bo(l, s, null == o ? "" : o)
                    }
                }
                function Dn(t, e) {
                    if (e && (e = e.trim()))
                        if (t.classList)
                            e.indexOf(" ") > -1 ? e.split(/\s+/).forEach(function(e) {
                                return t.classList.add(e)
                            }) : t.classList.add(e);
                        else {
                            var n = " " + (t.getAttribute("class") || "") + " ";
                            n.indexOf(" " + e + " ") < 0 && t.setAttribute("class", (n + e).trim())
                        }
                }
                function Un(t, e) {
                    if (e && (e = e.trim()))
                        if (t.classList)
                            e.indexOf(" ") > -1 ? e.split(/\s+/).forEach(function(e) {
                                return t.classList.remove(e)
                            }) : t.classList.remove(e),
                            t.classList.length || t.removeAttribute("class");
                        else {
                            for (var n = " " + (t.getAttribute("class") || "") + " ", r = " " + e + " "; n.indexOf(r) >= 0; )
                                n = n.replace(r, " ");
                            (n = n.trim()) ? t.setAttribute("class", n) : t.removeAttribute("class")
                        }
                }
                function kn(t) {
                    if (t) {
                        if ("object" == typeof t) {
                            var e = {};
                            return !1 !== t.css && y(e, Eo(t.name || "v")),
                            y(e, t),
                            e
                        }
                        return "string" == typeof t ? Eo(t) : void 0
                    }
                }
                function Bn(t) {
                    Io(function() {
                        Io(t)
                    })
                }
                function Fn(t, e) {
                    var n = t._transitionClasses || (t._transitionClasses = []);
                    n.indexOf(e) < 0 && (n.push(e),
                    Dn(t, e))
                }
                function zn(t, e) {
                    t._transitionClasses && p(t._transitionClasses, e),
                    Un(t, e)
                }
                function jn(t, e, n) {
                    var r = Hn(t, e)
                      , i = r.type
                      , a = r.timeout
                      , o = r.propCount;
                    if (!i)
                        return n();
                    var s = i === So ? Ro : Co
                      , l = 0
                      , c = function() {
                        t.removeEventListener(s, u),
                        n()
                    }
                      , u = function(e) {
                        e.target === t && ++l >= o && c()
                    };
                    setTimeout(function() {
                        l < o && c()
                    }, a + 1),
                    t.addEventListener(s, u)
                }
                function Hn(t, e) {
                    var n, r = window.getComputedStyle(t), i = r[Lo + "Delay"].split(", "), a = r[Lo + "Duration"].split(", "), o = Gn(i, a), s = r[Po + "Delay"].split(", "), l = r[Po + "Duration"].split(", "), c = Gn(s, l), u = 0, h = 0;
                    return e === So ? o > 0 && (n = So,
                    u = o,
                    h = a.length) : e === Ao ? c > 0 && (n = Ao,
                    u = c,
                    h = l.length) : h = (n = (u = Math.max(o, c)) > 0 ? o > c ? So : Ao : null) ? n === So ? a.length : l.length : 0,
                    {
                        type: n,
                        timeout: u,
                        propCount: h,
                        hasTransform: n === So && Oo.test(r[Lo + "Property"])
                    }
                }
                function Gn(t, e) {
                    for (; t.length < e.length; )
                        t = t.concat(t);
                    return Math.max.apply(null, e.map(function(e, n) {
                        return Vn(e) + Vn(t[n])
                    }))
                }
                function Vn(t) {
                    return 1e3 * Number(t.slice(0, -1))
                }
                function Wn(t, r) {
                    var i = t.elm;
                    n(i._leaveCb) && (i._leaveCb.cancelled = !0,
                    i._leaveCb());
                    var a = kn(t.data.transition);
                    if (!e(a) && !n(i._enterCb) && 1 === i.nodeType) {
                        for (var s = a.css, l = a.type, c = a.enterClass, u = a.enterToClass, d = a.enterActiveClass, p = a.appearClass, f = a.appearToClass, m = a.appearActiveClass, v = a.beforeEnter, g = a.enter, y = a.afterEnter, x = a.enterCancelled, b = a.beforeAppear, _ = a.appear, w = a.afterAppear, E = a.appearCancelled, T = a.duration, S = pa, A = pa.$vnode; A && A.parent; )
                            S = (A = A.parent).context;
                        var L = !S._isMounted || !t.isRootInsert;
                        if (!L || _ || "" === _) {
                            var R = L && p ? p : c
                              , P = L && m ? m : d
                              , C = L && f ? f : u
                              , I = L ? b || v : v
                              , O = L && "function" == typeof _ ? _ : g
                              , N = L ? w || y : y
                              , D = L ? E || x : x
                              , U = h(o(T) ? T.enter : T)
                              , k = !1 !== s && !Bi
                              , B = Yn(O)
                              , F = i._enterCb = M(function() {
                                k && (zn(i, C),
                                zn(i, P)),
                                F.cancelled ? (k && zn(i, R),
                                D && D(i)) : N && N(i),
                                i._enterCb = null
                            });
                            t.data.show || rt(t.data.hook || (t.data.hook = {}), "insert", function() {
                                var e = i.parentNode
                                  , n = e && e._pending && e._pending[t.key];
                                n && n.tag === t.tag && n.elm._leaveCb && n.elm._leaveCb(),
                                O && O(i, F)
                            }),
                            I && I(i),
                            k && (Fn(i, R),
                            Fn(i, P),
                            Bn(function() {
                                Fn(i, C),
                                zn(i, R),
                                F.cancelled || B || (qn(U) ? setTimeout(F, U) : jn(i, l, F))
                            })),
                            t.data.show && (r && r(),
                            O && O(i, F)),
                            k || B || F()
                        }
                    }
                }
                function Xn(t, r) {
                    function i() {
                        E.cancelled || (t.data.show || ((a.parentNode._pending || (a.parentNode._pending = {}))[t.key] = t),
                        f && f(a),
                        b && (Fn(a, u),
                        Fn(a, p),
                        Bn(function() {
                            Fn(a, d),
                            zn(a, u),
                            E.cancelled || _ || (qn(w) ? setTimeout(E, w) : jn(a, c, E))
                        })),
                        m && m(a, E),
                        b || _ || E())
                    }
                    var a = t.elm;
                    n(a._enterCb) && (a._enterCb.cancelled = !0,
                    a._enterCb());
                    var s = kn(t.data.transition);
                    if (e(s))
                        return r();
                    if (!n(a._leaveCb) && 1 === a.nodeType) {
                        var l = s.css
                          , c = s.type
                          , u = s.leaveClass
                          , d = s.leaveToClass
                          , p = s.leaveActiveClass
                          , f = s.beforeLeave
                          , m = s.leave
                          , v = s.afterLeave
                          , g = s.leaveCancelled
                          , y = s.delayLeave
                          , x = s.duration
                          , b = !1 !== l && !Bi
                          , _ = Yn(m)
                          , w = h(o(x) ? x.leave : x)
                          , E = a._leaveCb = M(function() {
                            a.parentNode && a.parentNode._pending && (a.parentNode._pending[t.key] = null),
                            b && (zn(a, d),
                            zn(a, p)),
                            E.cancelled ? (b && zn(a, u),
                            g && g(a)) : (r(),
                            v && v(a)),
                            a._leaveCb = null
                        });
                        y ? y(i) : i()
                    }
                }
                function qn(t) {
                    return "number" == typeof t && !isNaN(t)
                }
                function Yn(t) {
                    if (e(t))
                        return !1;
                    var r = t.fns;
                    return n(r) ? Yn(Array.isArray(r) ? r[0] : r) : (t._length || t.length) > 1
                }
                function $n(t, e) {
                    !0 !== e.data.show && Wn(e)
                }
                function Zn(t, e, n) {
                    Jn(t, e, n),
                    (ki || Fi) && setTimeout(function() {
                        Jn(t, e, n)
                    }, 0)
                }
                function Jn(t, e, n) {
                    var r = e.value
                      , i = t.multiple;
                    if (!i || Array.isArray(r)) {
                        for (var a, o, s = 0, l = t.options.length; s < l; s++)
                            if (o = t.options[s],
                            i)
                                a = w(r, Qn(o)) > -1,
                                o.selected !== a && (o.selected = a);
                            else if (_(Qn(o), r))
                                return void (t.selectedIndex !== s && (t.selectedIndex = s));
                        i || (t.selectedIndex = -1)
                    }
                }
                function Kn(t, e) {
                    return e.every(function(e) {
                        return !_(e, t)
                    })
                }
                function Qn(t) {
                    return "_value"in t ? t._value : t.value
                }
                function tr(t) {
                    t.target.composing = !0
                }
                function er(t) {
                    t.target.composing && (t.target.composing = !1,
                    nr(t.target, "input"))
                }
                function nr(t, e) {
                    var n = document.createEvent("HTMLEvents");
                    n.initEvent(e, !0, !0),
                    t.dispatchEvent(n)
                }
                function rr(t) {
                    return !t.componentInstance || t.data && t.data.transition ? t : rr(t.componentInstance._vnode)
                }
                function ir(t) {
                    var e = t && t.componentOptions;
                    return e && e.Ctor.options.abstract ? ir(ft(e.children)) : t
                }
                function ar(t) {
                    var e = {}
                      , n = t.$options;
                    for (var r in n.propsData)
                        e[r] = t[r];
                    var i = n._parentListeners;
                    for (var a in i)
                        e[_i(a)] = i[a];
                    return e
                }
                function or(t, e) {
                    if (/\d-keep-alive$/.test(e.tag))
                        return t("keep-alive", {
                            props: e.componentOptions.propsData
                        })
                }
                function sr(t) {
                    for (; t = t.parent; )
                        if (t.data.transition)
                            return !0
                }
                function lr(t, e) {
                    return e.key === t.key && e.tag === t.tag
                }
                function cr(t) {
                    t.elm._moveCb && t.elm._moveCb(),
                    t.elm._enterCb && t.elm._enterCb()
                }
                function ur(t) {
                    t.data.newPos = t.elm.getBoundingClientRect()
                }
                function hr(t) {
                    var e = t.data.pos
                      , n = t.data.newPos
                      , r = e.left - n.left
                      , i = e.top - n.top;
                    if (r || i) {
                        t.data.moved = !0;
                        var a = t.elm.style;
                        a.transform = a.WebkitTransform = "translate(" + r + "px," + i + "px)",
                        a.transitionDuration = "0s"
                    }
                }
                function dr(t, e) {
                    var n = e ? Vo(e) : Ho;
                    if (n.test(t)) {
                        for (var r, i, a = [], o = n.lastIndex = 0; r = n.exec(t); ) {
                            (i = r.index) > o && a.push(JSON.stringify(t.slice(o, i)));
                            var s = tn(r[1].trim());
                            a.push("_s(" + s + ")"),
                            o = i + r[0].length
                        }
                        return o < t.length && a.push(JSON.stringify(t.slice(o))),
                        a.join("+")
                    }
                }
                function pr(t, e) {
                    var n = e ? ws : _s;
                    return t.replace(n, function(t) {
                        return bs[t]
                    })
                }
                function fr(t, e) {
                    function n(e) {
                        u += e,
                        t = t.substring(e)
                    }
                    function r(t, n, r) {
                        var i, s;
                        if (null == n && (n = u),
                        null == r && (r = u),
                        t && (s = t.toLowerCase()),
                        t)
                            for (i = o.length - 1; i >= 0 && o[i].lowerCasedTag !== s; i--)
                                ;
                        else
                            i = 0;
                        if (i >= 0) {
                            for (var l = o.length - 1; l >= i; l--)
                                e.end && e.end(o[l].tag, n, r);
                            o.length = i,
                            a = i && o[i - 1].tag
                        } else
                            "br" === s ? e.start && e.start(t, [], !0, n, r) : "p" === s && (e.start && e.start(t, [], !1, n, r),
                            e.end && e.end(t, n, r))
                    }
                    for (var i, a, o = [], s = e.expectHTML, l = e.isUnaryTag || Ti, c = e.canBeLeftOpenTag || Ti, u = 0; t; ) {
                        if (i = t,
                        a && ys(a)) {
                            var h = 0
                              , d = a.toLowerCase()
                              , p = xs[d] || (xs[d] = new RegExp("([\\s\\S]*?)(</" + d + "[^>]*>)","i"))
                              , f = t.replace(p, function(t, n, r) {
                                return h = r.length,
                                ys(d) || "noscript" === d || (n = n.replace(/<!--([\s\S]*?)-->/g, "$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g, "$1")),
                                Es(d, n) && (n = n.slice(1)),
                                e.chars && e.chars(n),
                                ""
                            });
                            u += t.length - f.length,
                            t = f,
                            r(d, u - h, u)
                        } else {
                            var m = t.indexOf("<");
                            if (0 === m) {
                                if (as.test(t)) {
                                    var v = t.indexOf("--\x3e");
                                    if (v >= 0) {
                                        e.shouldKeepComment && e.comment(t.substring(4, v)),
                                        n(v + 3);
                                        continue
                                    }
                                }
                                if (os.test(t)) {
                                    var g = t.indexOf("]>");
                                    if (g >= 0) {
                                        n(g + 2);
                                        continue
                                    }
                                }
                                var y = t.match(is);
                                if (y) {
                                    n(y[0].length);
                                    continue
                                }
                                var x = t.match(rs);
                                if (x) {
                                    var b = u;
                                    n(x[0].length),
                                    r(x[1], b, u);
                                    continue
                                }
                                var _ = function() {
                                    var e = t.match(es);
                                    if (e) {
                                        var r = {
                                            tagName: e[1],
                                            attrs: [],
                                            start: u
                                        };
                                        n(e[0].length);
                                        for (var i, a; !(i = t.match(ns)) && (a = t.match(Ko)); )
                                            n(a[0].length),
                                            r.attrs.push(a);
                                        if (i)
                                            return r.unarySlash = i[1],
                                            n(i[0].length),
                                            r.end = u,
                                            r
                                    }
                                }();
                                if (_) {
                                    !function(t) {
                                        var n = t.tagName
                                          , i = t.unarySlash;
                                        s && ("p" === a && $o(n) && r(a),
                                        c(n) && a === n && r(n));
                                        for (var u = l(n) || !!i, h = t.attrs.length, d = new Array(h), p = 0; p < h; p++) {
                                            var f = t.attrs[p];
                                            ss && -1 === f[0].indexOf('""') && ("" === f[3] && delete f[3],
                                            "" === f[4] && delete f[4],
                                            "" === f[5] && delete f[5]);
                                            var m = f[3] || f[4] || f[5] || "";
                                            d[p] = {
                                                name: f[1],
                                                value: pr(m, e.shouldDecodeNewlines)
                                            }
                                        }
                                        u || (o.push({
                                            tag: n,
                                            lowerCasedTag: n.toLowerCase(),
                                            attrs: d
                                        }),
                                        a = n),
                                        e.start && e.start(n, d, u, t.start, t.end)
                                    }(_),
                                    Es(a, t) && n(1);
                                    continue
                                }
                            }
                            var w = void 0
                              , M = void 0
                              , E = void 0;
                            if (m >= 0) {
                                for (M = t.slice(m); !(rs.test(M) || es.test(M) || as.test(M) || os.test(M) || (E = M.indexOf("<", 1)) < 0); )
                                    m += E,
                                    M = t.slice(m);
                                w = t.substring(0, m),
                                n(m)
                            }
                            m < 0 && (w = t,
                            t = ""),
                            e.chars && w && e.chars(w)
                        }
                        if (t === i) {
                            e.chars && e.chars(t);
                            break
                        }
                    }
                    r()
                }
                function mr(t, e) {
                    function n(t) {
                        t.pre && (s = !1),
                        ps(t.tag) && (l = !1)
                    }
                    ls = e.warn || nn,
                    ps = e.isPreTag || Ti,
                    fs = e.mustUseProp || Ti,
                    ms = e.getTagNamespace || Ti,
                    us = rn(e.modules, "transformNode"),
                    hs = rn(e.modules, "preTransformNode"),
                    ds = rn(e.modules, "postTransformNode"),
                    cs = e.delimiters;
                    var r, i, a = [], o = !1 !== e.preserveWhitespace, s = !1, l = !1;
                    return fr(t, {
                        warn: ls,
                        expectHTML: e.expectHTML,
                        isUnaryTag: e.isUnaryTag,
                        canBeLeftOpenTag: e.canBeLeftOpenTag,
                        shouldDecodeNewlines: e.shouldDecodeNewlines,
                        shouldKeepComment: e.comments,
                        start: function(t, o, c) {
                            function u(t) {}
                            var h = i && i.ns || ms(t);
                            ki && "svg" === h && (o = Nr(o));
                            var d = {
                                type: 1,
                                tag: t,
                                attrsList: o,
                                attrsMap: Cr(o),
                                parent: i,
                                children: []
                            };
                            h && (d.ns = h),
                            Or(d) && !Yi() && (d.forbidden = !0);
                            for (var p = 0; p < hs.length; p++)
                                hs[p](d, e);
                            if (s || (vr(d),
                            d.pre && (s = !0)),
                            ps(d.tag) && (l = !0),
                            s)
                                gr(d);
                            else {
                                br(d),
                                _r(d),
                                Tr(d),
                                yr(d),
                                d.plain = !d.key && !o.length,
                                xr(d),
                                Sr(d),
                                Ar(d);
                                for (var f = 0; f < us.length; f++)
                                    us[f](d, e);
                                Lr(d)
                            }
                            if (r ? a.length || r.if && (d.elseif || d.else) && (u(),
                            Er(r, {
                                exp: d.elseif,
                                block: d
                            })) : (r = d,
                            u()),
                            i && !d.forbidden)
                                if (d.elseif || d.else)
                                    wr(d, i);
                                else if (d.slotScope) {
                                    i.plain = !1;
                                    var m = d.slotTarget || '"default"';
                                    (i.scopedSlots || (i.scopedSlots = {}))[m] = d
                                } else
                                    i.children.push(d),
                                    d.parent = i;
                            c ? n(d) : (i = d,
                            a.push(d));
                            for (var v = 0; v < ds.length; v++)
                                ds[v](d, e)
                        },
                        end: function() {
                            var t = a[a.length - 1]
                              , e = t.children[t.children.length - 1];
                            e && 3 === e.type && " " === e.text && !l && t.children.pop(),
                            a.length -= 1,
                            i = a[a.length - 1],
                            n(t)
                        },
                        chars: function(t) {
                            if (i && (!ki || "textarea" !== i.tag || i.attrsMap.placeholder !== t)) {
                                var e = i.children;
                                if (t = l || t.trim() ? Ir(i) ? t : Is(t) : o && e.length ? " " : "") {
                                    var n;
                                    !s && " " !== t && (n = dr(t, cs)) ? e.push({
                                        type: 2,
                                        expression: n,
                                        text: t
                                    }) : " " === t && e.length && " " === e[e.length - 1].text || e.push({
                                        type: 3,
                                        text: t
                                    })
                                }
                            }
                        },
                        comment: function(t) {
                            i.children.push({
                                type: 3,
                                text: t,
                                isComment: !0
                            })
                        }
                    }),
                    r
                }
                function vr(t) {
                    null != un(t, "v-pre") && (t.pre = !0)
                }
                function gr(t) {
                    var e = t.attrsList.length;
                    if (e)
                        for (var n = t.attrs = new Array(e), r = 0; r < e; r++)
                            n[r] = {
                                name: t.attrsList[r].name,
                                value: JSON.stringify(t.attrsList[r].value)
                            };
                    else
                        t.pre || (t.plain = !0)
                }
                function yr(t) {
                    var e = cn(t, "key");
                    e && (t.key = e)
                }
                function xr(t) {
                    var e = cn(t, "ref");
                    e && (t.ref = e,
                    t.refInFor = Rr(t))
                }
                function br(t) {
                    var e;
                    if (e = un(t, "v-for")) {
                        var n = e.match(As);
                        if (!n)
                            return;
                        t.for = n[2].trim();
                        var r = n[1].trim()
                          , i = r.match(Ls);
                        i ? (t.alias = i[1].trim(),
                        t.iterator1 = i[2].trim(),
                        i[3] && (t.iterator2 = i[3].trim())) : t.alias = r
                    }
                }
                function _r(t) {
                    var e = un(t, "v-if");
                    if (e)
                        t.if = e,
                        Er(t, {
                            exp: e,
                            block: t
                        });
                    else {
                        null != un(t, "v-else") && (t.else = !0);
                        var n = un(t, "v-else-if");
                        n && (t.elseif = n)
                    }
                }
                function wr(t, e) {
                    var n = Mr(e.children);
                    n && n.if && Er(n, {
                        exp: t.elseif,
                        block: t
                    })
                }
                function Mr(t) {
                    for (var e = t.length; e--; ) {
                        if (1 === t[e].type)
                            return t[e];
                        t.pop()
                    }
                }
                function Er(t, e) {
                    t.ifConditions || (t.ifConditions = []),
                    t.ifConditions.push(e)
                }
                function Tr(t) {
                    null != un(t, "v-once") && (t.once = !0)
                }
                function Sr(t) {
                    if ("slot" === t.tag)
                        t.slotName = cn(t, "name");
                    else {
                        var e = cn(t, "slot");
                        e && (t.slotTarget = '""' === e ? '"default"' : e,
                        on(t, "slot", e)),
                        "template" === t.tag && (t.slotScope = un(t, "scope"))
                    }
                }
                function Ar(t) {
                    var e;
                    (e = cn(t, "is")) && (t.component = e),
                    null != un(t, "inline-template") && (t.inlineTemplate = !0)
                }
                function Lr(t) {
                    var e, n, r, i, a, o, s, l = t.attrsList;
                    for (e = 0,
                    n = l.length; e < n; e++)
                        if (r = i = l[e].name,
                        a = l[e].value,
                        Ss.test(r))
                            if (t.hasBindings = !0,
                            (o = Pr(r)) && (r = r.replace(Cs, "")),
                            Ps.test(r))
                                r = r.replace(Ps, ""),
                                a = tn(a),
                                s = !1,
                                o && (o.prop && (s = !0,
                                "innerHtml" === (r = _i(r)) && (r = "innerHTML")),
                                o.camel && (r = _i(r)),
                                o.sync && ln(t, "update:" + _i(r), dn(a, "$event"))),
                                s || !t.component && fs(t.tag, t.attrsMap.type, r) ? an(t, r, a) : on(t, r, a);
                            else if (Ts.test(r))
                                ln(t, r = r.replace(Ts, ""), a, o, !1, ls);
                            else {
                                var c = (r = r.replace(Ss, "")).match(Rs)
                                  , u = c && c[1];
                                u && (r = r.slice(0, -(u.length + 1))),
                                sn(t, r, i, a, u, o)
                            }
                        else
                            on(t, r, JSON.stringify(a))
                }
                function Rr(t) {
                    for (var e = t; e; ) {
                        if (void 0 !== e.for)
                            return !0;
                        e = e.parent
                    }
                    return !1
                }
                function Pr(t) {
                    var e = t.match(Cs);
                    if (e) {
                        var n = {};
                        return e.forEach(function(t) {
                            n[t.slice(1)] = !0
                        }),
                        n
                    }
                }
                function Cr(t) {
                    for (var e = {}, n = 0, r = t.length; n < r; n++)
                        e[t[n].name] = t[n].value;
                    return e
                }
                function Ir(t) {
                    return "script" === t.tag || "style" === t.tag
                }
                function Or(t) {
                    return "style" === t.tag || "script" === t.tag && (!t.attrsMap.type || "text/javascript" === t.attrsMap.type)
                }
                function Nr(t) {
                    for (var e = [], n = 0; n < t.length; n++) {
                        var r = t[n];
                        Os.test(r.name) || (r.name = r.name.replace(Ns, ""),
                        e.push(r))
                    }
                    return e
                }
                function Dr(t, e) {
                    t && (vs = Ds(e.staticKeys || ""),
                    gs = e.isReservedTag || Ti,
                    Ur(t),
                    kr(t, !1))
                }
                function Ur(t) {
                    if (t.static = Br(t),
                    1 === t.type) {
                        if (!gs(t.tag) && "slot" !== t.tag && null == t.attrsMap["inline-template"])
                            return;
                        for (var e = 0, n = t.children.length; e < n; e++) {
                            var r = t.children[e];
                            Ur(r),
                            r.static || (t.static = !1)
                        }
                        if (t.ifConditions)
                            for (var i = 1, a = t.ifConditions.length; i < a; i++) {
                                var o = t.ifConditions[i].block;
                                Ur(o),
                                o.static || (t.static = !1)
                            }
                    }
                }
                function kr(t, e) {
                    if (1 === t.type) {
                        if ((t.static || t.once) && (t.staticInFor = e),
                        t.static && t.children.length && (1 !== t.children.length || 3 !== t.children[0].type))
                            return void (t.staticRoot = !0);
                        if (t.staticRoot = !1,
                        t.children)
                            for (var n = 0, r = t.children.length; n < r; n++)
                                kr(t.children[n], e || !!t.for);
                        if (t.ifConditions)
                            for (var i = 1, a = t.ifConditions.length; i < a; i++)
                                kr(t.ifConditions[i].block, e)
                    }
                }
                function Br(t) {
                    return 2 !== t.type && (3 === t.type || !(!t.pre && (t.hasBindings || t.if || t.for || gi(t.tag) || !gs(t.tag) || Fr(t) || !Object.keys(t).every(vs))))
                }
                function Fr(t) {
                    for (; t.parent; ) {
                        if ("template" !== (t = t.parent).tag)
                            return !1;
                        if (t.for)
                            return !0
                    }
                    return !1
                }
                function zr(t, e, n) {
                    var r = e ? "nativeOn:{" : "on:{";
                    for (var i in t)
                        r += '"' + i + '":' + jr(i, t[i]) + ",";
                    return r.slice(0, -1) + "}"
                }
                function jr(t, e) {
                    if (!e)
                        return "function(){}";
                    if (Array.isArray(e))
                        return "[" + e.map(function(e) {
                            return jr(t, e)
                        }).join(",") + "]";
                    var n = ks.test(e.value)
                      , r = Us.test(e.value);
                    if (e.modifiers) {
                        var i = ""
                          , a = ""
                          , o = [];
                        for (var s in e.modifiers)
                            zs[s] ? (a += zs[s],
                            Bs[s] && o.push(s)) : o.push(s);
                        return o.length && (i += Hr(o)),
                        a && (i += a),
                        "function($event){" + i + (n ? e.value + "($event)" : r ? "(" + e.value + ")($event)" : e.value) + "}"
                    }
                    return n || r ? e.value : "function($event){" + e.value + "}"
                }
                function Hr(t) {
                    return "if(!('button' in $event)&&" + t.map(Gr).join("&&") + ")return null;"
                }
                function Gr(t) {
                    var e = parseInt(t, 10);
                    if (e)
                        return "$event.keyCode!==" + e;
                    var n = Bs[t];
                    return "_k($event.keyCode," + JSON.stringify(t) + (n ? "," + JSON.stringify(n) : "") + ")"
                }
                function Vr(t, e) {
                    var n = new Hs(e);
                    return {
                        render: "with(this){return " + (t ? Wr(t, n) : '_c("div")') + "}",
                        staticRenderFns: n.staticRenderFns
                    }
                }
                function Wr(t, e) {
                    if (t.staticRoot && !t.staticProcessed)
                        return Xr(t, e);
                    if (t.once && !t.onceProcessed)
                        return qr(t, e);
                    if (t.for && !t.forProcessed)
                        return Zr(t, e);
                    if (t.if && !t.ifProcessed)
                        return Yr(t, e);
                    if ("template" !== t.tag || t.slotTarget) {
                        if ("slot" === t.tag)
                            return ci(t, e);
                        var n;
                        if (t.component)
                            n = ui(t.component, t, e);
                        else {
                            var r = t.plain ? void 0 : Jr(t, e)
                              , i = t.inlineTemplate ? null : ri(t, e, !0);
                            n = "_c('" + t.tag + "'" + (r ? "," + r : "") + (i ? "," + i : "") + ")"
                        }
                        for (var a = 0; a < e.transforms.length; a++)
                            n = e.transforms[a](t, n);
                        return n
                    }
                    return ri(t, e) || "void 0"
                }
                function Xr(t, e) {
                    return t.staticProcessed = !0,
                    e.staticRenderFns.push("with(this){return " + Wr(t, e) + "}"),
                    "_m(" + (e.staticRenderFns.length - 1) + (t.staticInFor ? ",true" : "") + ")"
                }
                function qr(t, e) {
                    if (t.onceProcessed = !0,
                    t.if && !t.ifProcessed)
                        return Yr(t, e);
                    if (t.staticInFor) {
                        for (var n = "", r = t.parent; r; ) {
                            if (r.for) {
                                n = r.key;
                                break
                            }
                            r = r.parent
                        }
                        return n ? "_o(" + Wr(t, e) + "," + e.onceId++ + "," + n + ")" : Wr(t, e)
                    }
                    return Xr(t, e)
                }
                function Yr(t, e, n, r) {
                    return t.ifProcessed = !0,
                    $r(t.ifConditions.slice(), e, n, r)
                }
                function $r(t, e, n, r) {
                    function i(t) {
                        return n ? n(t, e) : t.once ? qr(t, e) : Wr(t, e)
                    }
                    if (!t.length)
                        return r || "_e()";
                    var a = t.shift();
                    return a.exp ? "(" + a.exp + ")?" + i(a.block) + ":" + $r(t, e, n, r) : "" + i(a.block)
                }
                function Zr(t, e, n, r) {
                    var i = t.for
                      , a = t.alias
                      , o = t.iterator1 ? "," + t.iterator1 : ""
                      , s = t.iterator2 ? "," + t.iterator2 : "";
                    return t.forProcessed = !0,
                    (r || "_l") + "((" + i + "),function(" + a + o + s + "){return " + (n || Wr)(t, e) + "})"
                }
                function Jr(t, e) {
                    var n = "{"
                      , r = Kr(t, e);
                    r && (n += r + ","),
                    t.key && (n += "key:" + t.key + ","),
                    t.ref && (n += "ref:" + t.ref + ","),
                    t.refInFor && (n += "refInFor:true,"),
                    t.pre && (n += "pre:true,"),
                    t.component && (n += 'tag:"' + t.tag + '",');
                    for (var i = 0; i < e.dataGenFns.length; i++)
                        n += e.dataGenFns[i](t);
                    if (t.attrs && (n += "attrs:{" + hi(t.attrs) + "},"),
                    t.props && (n += "domProps:{" + hi(t.props) + "},"),
                    t.events && (n += zr(t.events, !1, e.warn) + ","),
                    t.nativeEvents && (n += zr(t.nativeEvents, !0, e.warn) + ","),
                    t.slotTarget && (n += "slot:" + t.slotTarget + ","),
                    t.scopedSlots && (n += ti(t.scopedSlots, e) + ","),
                    t.model && (n += "model:{value:" + t.model.value + ",callback:" + t.model.callback + ",expression:" + t.model.expression + "},"),
                    t.inlineTemplate) {
                        var a = Qr(t, e);
                        a && (n += a + ",")
                    }
                    return n = n.replace(/,$/, "") + "}",
                    t.wrapData && (n = t.wrapData(n)),
                    t.wrapListeners && (n = t.wrapListeners(n)),
                    n
                }
                function Kr(t, e) {
                    var n = t.directives;
                    if (n) {
                        var r, i, a, o, s = "directives:[", l = !1;
                        for (r = 0,
                        i = n.length; r < i; r++) {
                            a = n[r],
                            o = !0;
                            var c = e.directives[a.name];
                            c && (o = !!c(t, a, e.warn)),
                            o && (l = !0,
                            s += '{name:"' + a.name + '",rawName:"' + a.rawName + '"' + (a.value ? ",value:(" + a.value + "),expression:" + JSON.stringify(a.value) : "") + (a.arg ? ',arg:"' + a.arg + '"' : "") + (a.modifiers ? ",modifiers:" + JSON.stringify(a.modifiers) : "") + "},")
                        }
                        return l ? s.slice(0, -1) + "]" : void 0
                    }
                }
                function Qr(t, e) {
                    var n = t.children[0];
                    if (1 === n.type) {
                        var r = Vr(n, e.options);
                        return "inlineTemplate:{render:function(){" + r.render + "},staticRenderFns:[" + r.staticRenderFns.map(function(t) {
                            return "function(){" + t + "}"
                        }).join(",") + "]}"
                    }
                }
                function ti(t, e) {
                    return "scopedSlots:_u([" + Object.keys(t).map(function(n) {
                        return ei(n, t[n], e)
                    }).join(",") + "])"
                }
                function ei(t, e, n) {
                    return e.for && !e.forProcessed ? ni(t, e, n) : "{key:" + t + ",fn:function(" + String(e.attrsMap.scope) + "){return " + ("template" === e.tag ? ri(e, n) || "void 0" : Wr(e, n)) + "}}"
                }
                function ni(t, e, n) {
                    var r = e.for
                      , i = e.alias
                      , a = e.iterator1 ? "," + e.iterator1 : ""
                      , o = e.iterator2 ? "," + e.iterator2 : "";
                    return e.forProcessed = !0,
                    "_l((" + r + "),function(" + i + a + o + "){return " + ei(t, e, n) + "})"
                }
                function ri(t, e, n, r, i) {
                    var a = t.children;
                    if (a.length) {
                        var o = a[0];
                        if (1 === a.length && o.for && "template" !== o.tag && "slot" !== o.tag)
                            return (r || Wr)(o, e);
                        var s = n ? ii(a, e.maybeComponent) : 0
                          , l = i || oi;
                        return "[" + a.map(function(t) {
                            return l(t, e)
                        }).join(",") + "]" + (s ? "," + s : "")
                    }
                }
                function ii(t, e) {
                    for (var n = 0, r = 0; r < t.length; r++) {
                        var i = t[r];
                        if (1 === i.type) {
                            if (ai(i) || i.ifConditions && i.ifConditions.some(function(t) {
                                return ai(t.block)
                            })) {
                                n = 2;
                                break
                            }
                            (e(i) || i.ifConditions && i.ifConditions.some(function(t) {
                                return e(t.block)
                            })) && (n = 1)
                        }
                    }
                    return n
                }
                function ai(t) {
                    return void 0 !== t.for || "template" === t.tag || "slot" === t.tag
                }
                function oi(t, e) {
                    return 1 === t.type ? Wr(t, e) : 3 === t.type && t.isComment ? li(t) : si(t)
                }
                function si(t) {
                    return "_v(" + (2 === t.type ? t.expression : di(JSON.stringify(t.text))) + ")"
                }
                function li(t) {
                    return "_e(" + JSON.stringify(t.text) + ")"
                }
                function ci(t, e) {
                    var n = t.slotName || '"default"'
                      , r = ri(t, e)
                      , i = "_t(" + n + (r ? "," + r : "")
                      , a = t.attrs && "{" + t.attrs.map(function(t) {
                        return _i(t.name) + ":" + t.value
                    }).join(",") + "}"
                      , o = t.attrsMap["v-bind"];
                    return !a && !o || r || (i += ",null"),
                    a && (i += "," + a),
                    o && (i += (a ? "" : ",null") + "," + o),
                    i + ")"
                }
                function ui(t, e, n) {
                    var r = e.inlineTemplate ? null : ri(e, n, !0);
                    return "_c(" + t + "," + Jr(e, n) + (r ? "," + r : "") + ")"
                }
                function hi(t) {
                    for (var e = "", n = 0; n < t.length; n++) {
                        var r = t[n];
                        e += '"' + r.name + '":' + di(r.value) + ","
                    }
                    return e.slice(0, -1)
                }
                function di(t) {
                    return t.replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029")
                }
                function pi(t, e) {
                    try {
                        return new Function(t)
                    } catch (n) {
                        return e.push({
                            err: n,
                            code: t
                        }),
                        b
                    }
                }
                function fi(t) {
                    var e = Object.create(null);
                    return function(n, r, i) {
                        var a = (r = r || {}).delimiters ? String(r.delimiters) + n : n;
                        if (e[a])
                            return e[a];
                        var o = t(n, r)
                          , s = {}
                          , l = [];
                        return s.render = pi(o.render, l),
                        s.staticRenderFns = o.staticRenderFns.map(function(t) {
                            return pi(t, l)
                        }),
                        e[a] = s
                    }
                }
                function mi(t) {
                    if (t.outerHTML)
                        return t.outerHTML;
                    var e = document.createElement("div");
                    return e.appendChild(t.cloneNode(!0)),
                    e.innerHTML
                }
                var vi = Object.prototype.toString
                  , gi = d("slot,component", !0)
                  , yi = d("key,ref,slot,is")
                  , xi = Object.prototype.hasOwnProperty
                  , bi = /-(\w)/g
                  , _i = m(function(t) {
                    return t.replace(bi, function(t, e) {
                        return e ? e.toUpperCase() : ""
                    })
                })
                  , wi = m(function(t) {
                    return t.charAt(0).toUpperCase() + t.slice(1)
                })
                  , Mi = /\B([A-Z])/g
                  , Ei = m(function(t) {
                    return t.replace(Mi, "-$1").toLowerCase()
                })
                  , Ti = function(t, e, n) {
                    return !1
                }
                  , Si = function(t) {
                    return t
                }
                  , Ai = "data-server-rendered"
                  , Li = ["component", "directive", "filter"]
                  , Ri = ["beforeCreate", "created", "beforeMount", "mounted", "beforeUpdate", "updated", "beforeDestroy", "destroyed", "activated", "deactivated"]
                  , Pi = {
                    optionMergeStrategies: Object.create(null),
                    silent: !1,
                    productionTip: !1,
                    devtools: !1,
                    performance: !1,
                    errorHandler: null,
                    warnHandler: null,
                    ignoredElements: [],
                    keyCodes: Object.create(null),
                    isReservedTag: Ti,
                    isReservedAttr: Ti,
                    isUnknownElement: Ti,
                    getTagNamespace: b,
                    parsePlatformTagName: Si,
                    mustUseProp: Ti,
                    _lifecycleHooks: Ri
                }
                  , Ci = Object.freeze({})
                  , Ii = /[^\w.$]/
                  , Oi = b
                  , Ni = "__proto__"in {}
                  , Di = "undefined" != typeof window
                  , Ui = Di && window.navigator.userAgent.toLowerCase()
                  , ki = Ui && /msie|trident/.test(Ui)
                  , Bi = Ui && Ui.indexOf("msie 9.0") > 0
                  , Fi = Ui && Ui.indexOf("edge/") > 0
                  , zi = Ui && Ui.indexOf("android") > 0
                  , ji = Ui && /iphone|ipad|ipod|ios/.test(Ui)
                  , Hi = Ui && /chrome\/\d+/.test(Ui) && !Fi
                  , Gi = {}.watch
                  , Vi = !1;
                if (Di)
                    try {
                        var Wi = {};
                        Object.defineProperty(Wi, "passive", {
                            get: function() {
                                Vi = !0
                            }
                        }),
                        window.addEventListener("test-passive", null, Wi)
                    } catch (e) {}
                var Xi, qi, Yi = function() {
                    return void 0 === Xi && (Xi = !Di && void 0 !== t && "server" === t.process.env.VUE_ENV),
                    Xi
                }, $i = Di && window.__VUE_DEVTOOLS_GLOBAL_HOOK__, Zi = "undefined" != typeof Symbol && L(Symbol) && "undefined" != typeof Reflect && L(Reflect.ownKeys), Ji = function() {
                    function t() {
                        r = !1;
                        var t = n.slice(0);
                        n.length = 0;
                        for (var e = 0; e < t.length; e++)
                            t[e]()
                    }
                    var e, n = [], r = !1;
                    if ("undefined" != typeof Promise && L(Promise)) {
                        var i = Promise.resolve()
                          , a = function(t) {
                            console.error(t)
                        };
                        e = function() {
                            i.then(t).catch(a),
                            ji && setTimeout(b)
                        }
                    } else if (ki || "undefined" == typeof MutationObserver || !L(MutationObserver) && "[object MutationObserverConstructor]" !== MutationObserver.toString())
                        e = function() {
                            setTimeout(t, 0)
                        }
                        ;
                    else {
                        var o = 1
                          , s = new MutationObserver(t)
                          , l = document.createTextNode(String(o));
                        s.observe(l, {
                            characterData: !0
                        }),
                        e = function() {
                            o = (o + 1) % 2,
                            l.data = String(o)
                        }
                    }
                    return function(t, i) {
                        var a;
                        if (n.push(function() {
                            if (t)
                                try {
                                    t.call(i)
                                } catch (t) {
                                    A(t, i, "nextTick")
                                }
                            else
                                a && a(i)
                        }),
                        r || (r = !0,
                        e()),
                        !t && "undefined" != typeof Promise)
                            return new Promise(function(t, e) {
                                a = t
                            }
                            )
                    }
                }();
                qi = "undefined" != typeof Set && L(Set) ? Set : function() {
                    function t() {
                        this.set = Object.create(null)
                    }
                    return t.prototype.has = function(t) {
                        return !0 === this.set[t]
                    }
                    ,
                    t.prototype.add = function(t) {
                        this.set[t] = !0
                    }
                    ,
                    t.prototype.clear = function() {
                        this.set = Object.create(null)
                    }
                    ,
                    t
                }();
                var Ki = 0
                  , Qi = function() {
                    this.id = Ki++,
                    this.subs = []
                };
                Qi.prototype.addSub = function(t) {
                    this.subs.push(t)
                }
                ,
                Qi.prototype.removeSub = function(t) {
                    p(this.subs, t)
                }
                ,
                Qi.prototype.depend = function() {
                    Qi.target && Qi.target.addDep(this)
                }
                ,
                Qi.prototype.notify = function() {
                    for (var t = this.subs.slice(), e = 0, n = t.length; e < n; e++)
                        t[e].update()
                }
                ,
                Qi.target = null;
                var ta = []
                  , ea = Array.prototype
                  , na = Object.create(ea);
                ["push", "pop", "shift", "unshift", "splice", "sort", "reverse"].forEach(function(t) {
                    var e = ea[t];
                    T(na, t, function() {
                        for (var n = [], r = arguments.length; r--; )
                            n[r] = arguments[r];
                        var i, a = e.apply(this, n), o = this.__ob__;
                        switch (t) {
                        case "push":
                        case "unshift":
                            i = n;
                            break;
                        case "splice":
                            i = n.slice(2)
                        }
                        return i && o.observeArray(i),
                        o.dep.notify(),
                        a
                    })
                });
                var ra = Object.getOwnPropertyNames(na)
                  , ia = {
                    shouldConvert: !0
                }
                  , aa = function(t) {
                    this.value = t,
                    this.dep = new Qi,
                    this.vmCount = 0,
                    T(t, "__ob__", this),
                    Array.isArray(t) ? ((Ni ? C : I)(t, na, ra),
                    this.observeArray(t)) : this.walk(t)
                };
                aa.prototype.walk = function(t) {
                    for (var e = Object.keys(t), n = 0; n < e.length; n++)
                        N(t, e[n], t[e[n]])
                }
                ,
                aa.prototype.observeArray = function(t) {
                    for (var e = 0, n = t.length; e < n; e++)
                        O(t[e])
                }
                ;
                var oa = Pi.optionMergeStrategies;
                oa.data = function(t, e, n) {
                    return n ? F(t, e, n) : e && "function" != typeof e ? t : F.call(this, t, e)
                }
                ,
                Ri.forEach(function(t) {
                    oa[t] = z
                }),
                Li.forEach(function(t) {
                    oa[t + "s"] = j
                }),
                oa.watch = function(t, e) {
                    if (t === Gi && (t = void 0),
                    e === Gi && (e = void 0),
                    !e)
                        return Object.create(t || null);
                    if (!t)
                        return e;
                    var n = {};
                    y(n, t);
                    for (var r in e) {
                        var i = n[r]
                          , a = e[r];
                        i && !Array.isArray(i) && (i = [i]),
                        n[r] = i ? i.concat(a) : Array.isArray(a) ? a : [a]
                    }
                    return n
                }
                ,
                oa.props = oa.methods = oa.inject = oa.computed = function(t, e) {
                    if (!t)
                        return e;
                    var n = Object.create(null);
                    return y(n, t),
                    e && y(n, e),
                    n
                }
                ,
                oa.provide = F;
                var sa = function(t, e) {
                    return void 0 === e ? t : e
                }
                  , la = function(t, e, n, r, i, a, o, s) {
                    this.tag = t,
                    this.data = e,
                    this.children = n,
                    this.text = r,
                    this.elm = i,
                    this.ns = void 0,
                    this.context = a,
                    this.functionalContext = void 0,
                    this.key = e && e.key,
                    this.componentOptions = o,
                    this.componentInstance = void 0,
                    this.parent = void 0,
                    this.raw = !1,
                    this.isStatic = !1,
                    this.isRootInsert = !0,
                    this.isComment = !1,
                    this.isCloned = !1,
                    this.isOnce = !1,
                    this.asyncFactory = s,
                    this.asyncMeta = void 0,
                    this.isAsyncPlaceholder = !1
                }
                  , ca = {
                    child: {}
                };
                ca.child.get = function() {
                    return this.componentInstance
                }
                ,
                Object.defineProperties(la.prototype, ca);
                var ua, ha = function(t) {
                    void 0 === t && (t = "");
                    var e = new la;
                    return e.text = t,
                    e.isComment = !0,
                    e
                }, da = m(function(t) {
                    var e = "&" === t.charAt(0)
                      , n = "~" === (t = e ? t.slice(1) : t).charAt(0)
                      , r = "!" === (t = n ? t.slice(1) : t).charAt(0);
                    return {
                        name: t = r ? t.slice(1) : t,
                        plain: !(e || n || r),
                        once: n,
                        capture: r,
                        passive: e
                    }
                }), pa = null, fa = [], ma = [], va = {}, ga = !1, ya = !1, xa = 0, ba = 0, _a = function(t, e, n, r) {
                    this.vm = t,
                    t._watchers.push(this),
                    r ? (this.deep = !!r.deep,
                    this.user = !!r.user,
                    this.lazy = !!r.lazy,
                    this.sync = !!r.sync) : this.deep = this.user = this.lazy = this.sync = !1,
                    this.cb = n,
                    this.id = ++ba,
                    this.active = !0,
                    this.dirty = this.lazy,
                    this.deps = [],
                    this.newDeps = [],
                    this.depIds = new qi,
                    this.newDepIds = new qi,
                    this.expression = "",
                    "function" == typeof e ? this.getter = e : (this.getter = S(e),
                    this.getter || (this.getter = function() {}
                    )),
                    this.value = this.lazy ? void 0 : this.get()
                };
                _a.prototype.get = function() {
                    R(this);
                    var t, e = this.vm;
                    try {
                        t = this.getter.call(e, e)
                    } catch (t) {
                        if (!this.user)
                            throw t;
                        A(t, e, 'getter for watcher "' + this.expression + '"')
                    } finally {
                        this.deep && Dt(t),
                        P(),
                        this.cleanupDeps()
                    }
                    return t
                }
                ,
                _a.prototype.addDep = function(t) {
                    var e = t.id;
                    this.newDepIds.has(e) || (this.newDepIds.add(e),
                    this.newDeps.push(t),
                    this.depIds.has(e) || t.addSub(this))
                }
                ,
                _a.prototype.cleanupDeps = function() {
                    for (var t = this, e = this.deps.length; e--; ) {
                        var n = t.deps[e];
                        t.newDepIds.has(n.id) || n.removeSub(t)
                    }
                    var r = this.depIds;
                    this.depIds = this.newDepIds,
                    this.newDepIds = r,
                    this.newDepIds.clear(),
                    r = this.deps,
                    this.deps = this.newDeps,
                    this.newDeps = r,
                    this.newDeps.length = 0
                }
                ,
                _a.prototype.update = function() {
                    this.lazy ? this.dirty = !0 : this.sync ? this.run() : Nt(this)
                }
                ,
                _a.prototype.run = function() {
                    if (this.active) {
                        var t = this.get();
                        if (t !== this.value || o(t) || this.deep) {
                            var e = this.value;
                            if (this.value = t,
                            this.user)
                                try {
                                    this.cb.call(this.vm, t, e)
                                } catch (t) {
                                    A(t, this.vm, 'callback for watcher "' + this.expression + '"')
                                }
                            else
                                this.cb.call(this.vm, t, e)
                        }
                    }
                }
                ,
                _a.prototype.evaluate = function() {
                    this.value = this.get(),
                    this.dirty = !1
                }
                ,
                _a.prototype.depend = function() {
                    for (var t = this, e = this.deps.length; e--; )
                        t.deps[e].depend()
                }
                ,
                _a.prototype.teardown = function() {
                    var t = this;
                    if (this.active) {
                        this.vm._isBeingDestroyed || p(this.vm._watchers, this);
                        for (var e = this.deps.length; e--; )
                            t.deps[e].removeSub(t);
                        this.active = !1
                    }
                }
                ;
                var wa = new qi
                  , Ma = {
                    enumerable: !0,
                    configurable: !0,
                    get: b,
                    set: b
                }
                  , Ea = {
                    lazy: !0
                }
                  , Ta = {
                    init: function(t, e, n, r) {
                        if (!t.componentInstance || t.componentInstance._isDestroyed)
                            (t.componentInstance = te(t, pa, n, r)).$mount(e ? t.elm : void 0, e);
                        else if (t.data.keepAlive) {
                            var i = t;
                            Ta.prepatch(i, i)
                        }
                    },
                    prepatch: function(t, e) {
                        var n = e.componentOptions;
                        Et(e.componentInstance = t.componentInstance, n.propsData, n.listeners, e, n.children)
                    },
                    insert: function(t) {
                        var e = t.context
                          , n = t.componentInstance;
                        n._isMounted || (n._isMounted = !0,
                        Lt(n, "mounted")),
                        t.data.keepAlive && (e._isMounted ? It(n) : St(n, !0))
                    },
                    destroy: function(t) {
                        var e = t.componentInstance;
                        e._isDestroyed || (t.data.keepAlive ? At(e, !0) : e.$destroy())
                    }
                }
                  , Sa = Object.keys(Ta)
                  , Aa = 1
                  , La = 2
                  , Ra = 0;
                we.prototype._init = function(t) {
                    var e = this;
                    e._uid = Ra++,
                    e._isVue = !0,
                    t && t._isComponent ? ye(e, t) : e.$options = W(xe(e.constructor), t || {}, e),
                    e._renderProxy = e,
                    e._self = e,
                    wt(e),
                    mt(e),
                    ge(e),
                    Lt(e, "beforeCreate"),
                    $t(e),
                    Bt(e),
                    Yt(e),
                    Lt(e, "created"),
                    e.$options.el && e.$mount(e.$options.el)
                }
                ,
                function(t) {
                    var e = {};
                    e.get = function() {
                        return this._data
                    }
                    ;
                    var n = {};
                    n.get = function() {
                        return this._props
                    }
                    ,
                    Object.defineProperty(t.prototype, "$data", e),
                    Object.defineProperty(t.prototype, "$props", n),
                    t.prototype.$set = D,
                    t.prototype.$delete = U,
                    t.prototype.$watch = function(t, e, n) {
                        var r = this;
                        if (s(e))
                            return qt(r, t, e, n);
                        (n = n || {}).user = !0;
                        var i = new _a(r,t,e,n);
                        return n.immediate && e.call(r, i.value),
                        function() {
                            i.teardown()
                        }
                    }
                }(we),
                function(t) {
                    var e = /^hook:/;
                    t.prototype.$on = function(t, n) {
                        var r = this
                          , i = this;
                        if (Array.isArray(t))
                            for (var a = 0, o = t.length; a < o; a++)
                                r.$on(t[a], n);
                        else
                            (i._events[t] || (i._events[t] = [])).push(n),
                            e.test(t) && (i._hasHookEvent = !0);
                        return i
                    }
                    ,
                    t.prototype.$once = function(t, e) {
                        function n() {
                            r.$off(t, n),
                            e.apply(r, arguments)
                        }
                        var r = this;
                        return n.fn = e,
                        r.$on(t, n),
                        r
                    }
                    ,
                    t.prototype.$off = function(t, e) {
                        var n = this
                          , r = this;
                        if (!arguments.length)
                            return r._events = Object.create(null),
                            r;
                        if (Array.isArray(t)) {
                            for (var i = 0, a = t.length; i < a; i++)
                                n.$off(t[i], e);
                            return r
                        }
                        var o = r._events[t];
                        if (!o)
                            return r;
                        if (1 === arguments.length)
                            return r._events[t] = null,
                            r;
                        if (e)
                            for (var s, l = o.length; l--; )
                                if ((s = o[l]) === e || s.fn === e) {
                                    o.splice(l, 1);
                                    break
                                }
                        return r
                    }
                    ,
                    t.prototype.$emit = function(t) {
                        var e = this
                          , n = e._events[t];
                        if (n) {
                            n = n.length > 1 ? g(n) : n;
                            for (var r = g(arguments, 1), i = 0, a = n.length; i < a; i++)
                                try {
                                    n[i].apply(e, r)
                                } catch (n) {
                                    A(n, e, 'event handler for "' + t + '"')
                                }
                        }
                        return e
                    }
                }(we),
                function(t) {
                    t.prototype._update = function(t, e) {
                        var n = this;
                        n._isMounted && Lt(n, "beforeUpdate");
                        var r = n.$el
                          , i = n._vnode
                          , a = pa;
                        pa = n,
                        n._vnode = t,
                        i ? n.$el = n.__patch__(i, t) : (n.$el = n.__patch__(n.$el, t, e, !1, n.$options._parentElm, n.$options._refElm),
                        n.$options._parentElm = n.$options._refElm = null),
                        pa = a,
                        r && (r.__vue__ = null),
                        n.$el && (n.$el.__vue__ = n),
                        n.$vnode && n.$parent && n.$vnode === n.$parent._vnode && (n.$parent.$el = n.$el)
                    }
                    ,
                    t.prototype.$forceUpdate = function() {
                        var t = this;
                        t._watcher && t._watcher.update()
                    }
                    ,
                    t.prototype.$destroy = function() {
                        var t = this;
                        if (!t._isBeingDestroyed) {
                            Lt(t, "beforeDestroy"),
                            t._isBeingDestroyed = !0;
                            var e = t.$parent;
                            !e || e._isBeingDestroyed || t.$options.abstract || p(e.$children, t),
                            t._watcher && t._watcher.teardown();
                            for (var n = t._watchers.length; n--; )
                                t._watchers[n].teardown();
                            t._data.__ob__ && t._data.__ob__.vmCount--,
                            t._isDestroyed = !0,
                            t.__patch__(t._vnode, null),
                            Lt(t, "destroyed"),
                            t.$off(),
                            t.$el && (t.$el.__vue__ = null)
                        }
                    }
                }(we),
                function(t) {
                    t.prototype.$nextTick = function(t) {
                        return Ji(t, this)
                    }
                    ,
                    t.prototype._render = function() {
                        var t = this
                          , e = t.$options
                          , n = e.render
                          , r = e.staticRenderFns
                          , i = e._parentVnode;
                        if (t._isMounted)
                            for (var a in t.$slots) {
                                var o = t.$slots[a];
                                o._rendered && (t.$slots[a] = Q(o, !0))
                            }
                        t.$scopedSlots = i && i.data.scopedSlots || Ci,
                        r && !t._staticTrees && (t._staticTrees = []),
                        t.$vnode = i;
                        var s;
                        try {
                            s = n.call(t._renderProxy, t.$createElement)
                        } catch (e) {
                            A(e, t, "render function"),
                            s = t._vnode
                        }
                        return s instanceof la || (s = ha()),
                        s.parent = i,
                        s
                    }
                    ,
                    t.prototype._o = pe,
                    t.prototype._n = h,
                    t.prototype._s = u,
                    t.prototype._l = se,
                    t.prototype._t = le,
                    t.prototype._q = _,
                    t.prototype._i = w,
                    t.prototype._m = de,
                    t.prototype._f = ce,
                    t.prototype._k = ue,
                    t.prototype._b = he,
                    t.prototype._v = J,
                    t.prototype._e = ha,
                    t.prototype._u = _t,
                    t.prototype._g = ve
                }(we);
                var Pa = [String, RegExp, Array]
                  , Ca = {
                    KeepAlive: {
                        name: "keep-alive",
                        abstract: !0,
                        props: {
                            include: Pa,
                            exclude: Pa
                        },
                        created: function() {
                            this.cache = Object.create(null)
                        },
                        destroyed: function() {
                            var t = this;
                            for (var e in t.cache)
                                Ie(t.cache[e])
                        },
                        watch: {
                            include: function(t) {
                                Ce(this.cache, this._vnode, function(e) {
                                    return Pe(t, e)
                                })
                            },
                            exclude: function(t) {
                                Ce(this.cache, this._vnode, function(e) {
                                    return !Pe(t, e)
                                })
                            }
                        },
                        render: function() {
                            var t = ft(this.$slots.default)
                              , e = t && t.componentOptions;
                            if (e) {
                                var n = Re(e);
                                if (n && (this.include && !Pe(this.include, n) || this.exclude && Pe(this.exclude, n)))
                                    return t;
                                var r = null == t.key ? e.Ctor.cid + (e.tag ? "::" + e.tag : "") : t.key;
                                this.cache[r] ? t.componentInstance = this.cache[r].componentInstance : this.cache[r] = t,
                                t.data.keepAlive = !0
                            }
                            return t
                        }
                    }
                };
                !function(t) {
                    var e = {};
                    e.get = function() {
                        return Pi
                    }
                    ,
                    Object.defineProperty(t, "config", e),
                    t.util = {
                        warn: Oi,
                        extend: y,
                        mergeOptions: W,
                        defineReactive: N
                    },
                    t.set = D,
                    t.delete = U,
                    t.nextTick = Ji,
                    t.options = Object.create(null),
                    Li.forEach(function(e) {
                        t.options[e + "s"] = Object.create(null)
                    }),
                    t.options._base = t,
                    y(t.options.components, Ca),
                    Me(t),
                    Ee(t),
                    Te(t),
                    Le(t)
                }(we),
                Object.defineProperty(we.prototype, "$isServer", {
                    get: Yi
                }),
                Object.defineProperty(we.prototype, "$ssrContext", {
                    get: function() {
                        return this.$vnode && this.$vnode.ssrContext
                    }
                }),
                we.version = "2.4.4";
                var Ia, Oa, Na, Da, Ua, ka, Ba, Fa, za, ja = d("style,class"), Ha = d("input,textarea,option,select,progress"), Ga = function(t, e, n) {
                    return "value" === n && Ha(t) && "button" !== e || "selected" === n && "option" === t || "checked" === n && "input" === t || "muted" === n && "video" === t
                }, Va = d("contenteditable,draggable,spellcheck"), Wa = d("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"), Xa = "http://www.w3.org/1999/xlink", qa = function(t) {
                    return ":" === t.charAt(5) && "xlink" === t.slice(0, 5)
                }, Ya = function(t) {
                    return qa(t) ? t.slice(6, t.length) : ""
                }, $a = function(t) {
                    return null == t || !1 === t
                }, Za = {
                    svg: "http://www.w3.org/2000/svg",
                    math: "http://www.w3.org/1998/Math/MathML"
                }, Ja = d("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"), Ka = d("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view", !0), Qa = function(t) {
                    return Ja(t) || Ka(t)
                }, to = Object.create(null), eo = d("text,number,password,search,email,tel,url"), no = Object.freeze({
                    createElement: function(t, e) {
                        var n = document.createElement(t);
                        return "select" !== t ? n : (e.data && e.data.attrs && void 0 !== e.data.attrs.multiple && n.setAttribute("multiple", "multiple"),
                        n)
                    },
                    createElementNS: function(t, e) {
                        return document.createElementNS(Za[t], e)
                    },
                    createTextNode: function(t) {
                        return document.createTextNode(t)
                    },
                    createComment: function(t) {
                        return document.createComment(t)
                    },
                    insertBefore: function(t, e, n) {
                        t.insertBefore(e, n)
                    },
                    removeChild: function(t, e) {
                        t.removeChild(e)
                    },
                    appendChild: function(t, e) {
                        t.appendChild(e)
                    },
                    parentNode: function(t) {
                        return t.parentNode
                    },
                    nextSibling: function(t) {
                        return t.nextSibling
                    },
                    tagName: function(t) {
                        return t.tagName
                    },
                    setTextContent: function(t, e) {
                        t.textContent = e
                    },
                    setAttribute: function(t, e, n) {
                        t.setAttribute(e, n)
                    }
                }), ro = {
                    create: function(t, e) {
                        He(e)
                    },
                    update: function(t, e) {
                        t.data.ref !== e.data.ref && (He(t, !0),
                        He(e))
                    },
                    destroy: function(t) {
                        He(t, !0)
                    }
                }, io = new la("",{},[]), ao = ["create", "activate", "update", "remove", "destroy"], oo = {
                    create: Xe,
                    update: Xe,
                    destroy: function(t) {
                        Xe(t, io)
                    }
                }, so = Object.create(null), lo = [ro, oo], co = {
                    create: Je,
                    update: Je
                }, uo = {
                    create: Qe,
                    update: Qe
                }, ho = /[\w).+\-_$\]]/, po = "__r", fo = "__c", mo = {
                    create: Sn,
                    update: Sn
                }, vo = {
                    create: An,
                    update: An
                }, go = m(function(t) {
                    var e = {}
                      , n = /;(?![^(]*\))/g
                      , r = /:(.+)/;
                    return t.split(n).forEach(function(t) {
                        if (t) {
                            var n = t.split(r);
                            n.length > 1 && (e[n[0].trim()] = n[1].trim())
                        }
                    }),
                    e
                }), yo = /^--/, xo = /\s*!important$/, bo = function(t, e, n) {
                    if (yo.test(e))
                        t.style.setProperty(e, n);
                    else if (xo.test(n))
                        t.style.setProperty(e, n.replace(xo, ""), "important");
                    else {
                        var r = wo(e);
                        if (Array.isArray(n))
                            for (var i = 0, a = n.length; i < a; i++)
                                t.style[r] = n[i];
                        else
                            t.style[r] = n
                    }
                }, _o = ["Webkit", "Moz", "ms"], wo = m(function(t) {
                    if (za = za || document.createElement("div").style,
                    "filter" !== (t = _i(t)) && t in za)
                        return t;
                    for (var e = t.charAt(0).toUpperCase() + t.slice(1), n = 0; n < _o.length; n++) {
                        var r = _o[n] + e;
                        if (r in za)
                            return r
                    }
                }), Mo = {
                    create: Nn,
                    update: Nn
                }, Eo = m(function(t) {
                    return {
                        enterClass: t + "-enter",
                        enterToClass: t + "-enter-to",
                        enterActiveClass: t + "-enter-active",
                        leaveClass: t + "-leave",
                        leaveToClass: t + "-leave-to",
                        leaveActiveClass: t + "-leave-active"
                    }
                }), To = Di && !Bi, So = "transition", Ao = "animation", Lo = "transition", Ro = "transitionend", Po = "animation", Co = "animationend";
                To && (void 0 === window.ontransitionend && void 0 !== window.onwebkittransitionend && (Lo = "WebkitTransition",
                Ro = "webkitTransitionEnd"),
                void 0 === window.onanimationend && void 0 !== window.onwebkitanimationend && (Po = "WebkitAnimation",
                Co = "webkitAnimationEnd"));
                var Io = Di && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout
                  , Oo = /\b(transform|all)(,|$)/
                  , No = function(t) {
                    function i(t) {
                        return new la(C.tagName(t).toLowerCase(),{},[],void 0,t)
                    }
                    function o(t, e) {
                        function n() {
                            0 == --n.listeners && s(t)
                        }
                        return n.listeners = e,
                        n
                    }
                    function s(t) {
                        var e = C.parentNode(t);
                        n(e) && C.removeChild(e, t)
                    }
                    function l(t, e, i, a, o) {
                        if (t.isRootInsert = !o,
                        !c(t, e, i, a)) {
                            var s = t.data
                              , l = t.children
                              , u = t.tag;
                            n(u) ? (t.elm = t.ns ? C.createElementNS(t.ns, u) : C.createElement(u, t),
                            g(t),
                            f(t, l, e),
                            n(s) && v(t, e),
                            p(i, t.elm, a)) : r(t.isComment) ? (t.elm = C.createComment(t.text),
                            p(i, t.elm, a)) : (t.elm = C.createTextNode(t.text),
                            p(i, t.elm, a))
                        }
                    }
                    function c(t, e, i, a) {
                        var o = t.data;
                        if (n(o)) {
                            var s = n(t.componentInstance) && o.keepAlive;
                            if (n(o = o.hook) && n(o = o.init) && o(t, !1, i, a),
                            n(t.componentInstance))
                                return u(t, e),
                                r(s) && h(t, e, i, a),
                                !0
                        }
                    }
                    function u(t, e) {
                        n(t.data.pendingInsert) && (e.push.apply(e, t.data.pendingInsert),
                        t.data.pendingInsert = null),
                        t.elm = t.componentInstance.$el,
                        m(t) ? (v(t, e),
                        g(t)) : (He(t),
                        e.push(t))
                    }
                    function h(t, e, r, i) {
                        for (var a, o = t; o.componentInstance; )
                            if (o = o.componentInstance._vnode,
                            n(a = o.data) && n(a = a.transition)) {
                                for (a = 0; a < R.activate.length; ++a)
                                    R.activate[a](io, o);
                                e.push(o);
                                break
                            }
                        p(r, t.elm, i)
                    }
                    function p(t, e, r) {
                        n(t) && (n(r) ? r.parentNode === t && C.insertBefore(t, e, r) : C.appendChild(t, e))
                    }
                    function f(t, e, n) {
                        if (Array.isArray(e))
                            for (var r = 0; r < e.length; ++r)
                                l(e[r], n, t.elm, null, !0);
                        else
                            a(t.text) && C.appendChild(t.elm, C.createTextNode(t.text))
                    }
                    function m(t) {
                        for (; t.componentInstance; )
                            t = t.componentInstance._vnode;
                        return n(t.tag)
                    }
                    function v(t, e) {
                        for (var r = 0; r < R.create.length; ++r)
                            R.create[r](io, t);
                        n(A = t.data.hook) && (n(A.create) && A.create(io, t),
                        n(A.insert) && e.push(t))
                    }
                    function g(t) {
                        for (var e, r = t; r; )
                            n(e = r.context) && n(e = e.$options._scopeId) && C.setAttribute(t.elm, e, ""),
                            r = r.parent;
                        n(e = pa) && e !== t.context && n(e = e.$options._scopeId) && C.setAttribute(t.elm, e, "")
                    }
                    function y(t, e, n, r, i, a) {
                        for (; r <= i; ++r)
                            l(n[r], a, t, e)
                    }
                    function x(t) {
                        var e, r, i = t.data;
                        if (n(i))
                            for (n(e = i.hook) && n(e = e.destroy) && e(t),
                            e = 0; e < R.destroy.length; ++e)
                                R.destroy[e](t);
                        if (n(e = t.children))
                            for (r = 0; r < t.children.length; ++r)
                                x(t.children[r])
                    }
                    function b(t, e, r, i) {
                        for (; r <= i; ++r) {
                            var a = e[r];
                            n(a) && (n(a.tag) ? (_(a),
                            x(a)) : s(a.elm))
                        }
                    }
                    function _(t, e) {
                        if (n(e) || n(t.data)) {
                            var r, i = R.remove.length + 1;
                            for (n(e) ? e.listeners += i : e = o(t.elm, i),
                            n(r = t.componentInstance) && n(r = r._vnode) && n(r.data) && _(r, e),
                            r = 0; r < R.remove.length; ++r)
                                R.remove[r](t, e);
                            n(r = t.data.hook) && n(r = r.remove) ? r(t, e) : e()
                        } else
                            s(t.elm)
                    }
                    function w(t, r, i, a, o) {
                        for (var s, c, u, h = 0, d = 0, p = r.length - 1, f = r[0], m = r[p], v = i.length - 1, g = i[0], x = i[v], _ = !o; h <= p && d <= v; )
                            e(f) ? f = r[++h] : e(m) ? m = r[--p] : Ge(f, g) ? (E(f, g, a),
                            f = r[++h],
                            g = i[++d]) : Ge(m, x) ? (E(m, x, a),
                            m = r[--p],
                            x = i[--v]) : Ge(f, x) ? (E(f, x, a),
                            _ && C.insertBefore(t, f.elm, C.nextSibling(m.elm)),
                            f = r[++h],
                            x = i[--v]) : Ge(m, g) ? (E(m, g, a),
                            _ && C.insertBefore(t, m.elm, f.elm),
                            m = r[--p],
                            g = i[++d]) : (e(s) && (s = We(r, h, p)),
                            e(c = n(g.key) ? s[g.key] : M(g, r, h, p)) ? l(g, a, t, f.elm) : Ge(u = r[c], g) ? (E(u, g, a),
                            r[c] = void 0,
                            _ && C.insertBefore(t, u.elm, f.elm)) : l(g, a, t, f.elm),
                            g = i[++d]);
                        h > p ? y(t, e(i[v + 1]) ? null : i[v + 1].elm, i, d, v, a) : d > v && b(t, r, h, p)
                    }
                    function M(t, e, r, i) {
                        for (var a = r; a < i; a++) {
                            var o = e[a];
                            if (n(o) && Ge(t, o))
                                return a
                        }
                    }
                    function E(t, i, a, o) {
                        if (t !== i) {
                            var s = i.elm = t.elm;
                            if (r(t.isAsyncPlaceholder))
                                n(i.asyncFactory.resolved) ? S(t.elm, i, a) : i.isAsyncPlaceholder = !0;
                            else if (r(i.isStatic) && r(t.isStatic) && i.key === t.key && (r(i.isCloned) || r(i.isOnce)))
                                i.componentInstance = t.componentInstance;
                            else {
                                var l, c = i.data;
                                n(c) && n(l = c.hook) && n(l = l.prepatch) && l(t, i);
                                var u = t.children
                                  , h = i.children;
                                if (n(c) && m(i)) {
                                    for (l = 0; l < R.update.length; ++l)
                                        R.update[l](t, i);
                                    n(l = c.hook) && n(l = l.update) && l(t, i)
                                }
                                e(i.text) ? n(u) && n(h) ? u !== h && w(s, u, h, a, o) : n(h) ? (n(t.text) && C.setTextContent(s, ""),
                                y(s, null, h, 0, h.length - 1, a)) : n(u) ? b(s, u, 0, u.length - 1) : n(t.text) && C.setTextContent(s, "") : t.text !== i.text && C.setTextContent(s, i.text),
                                n(c) && n(l = c.hook) && n(l = l.postpatch) && l(t, i)
                            }
                        }
                    }
                    function T(t, e, i) {
                        if (r(i) && n(t.parent))
                            t.parent.data.pendingInsert = e;
                        else
                            for (var a = 0; a < e.length; ++a)
                                e[a].data.hook.insert(e[a])
                    }
                    function S(t, e, i) {
                        if (r(e.isComment) && n(e.asyncFactory))
                            return e.elm = t,
                            e.isAsyncPlaceholder = !0,
                            !0;
                        e.elm = t;
                        var a = e.tag
                          , o = e.data
                          , s = e.children;
                        if (n(o) && (n(A = o.hook) && n(A = A.init) && A(e, !0),
                        n(A = e.componentInstance)))
                            return u(e, i),
                            !0;
                        if (n(a)) {
                            if (n(s))
                                if (t.hasChildNodes())
                                    if (n(A = o) && n(A = A.domProps) && n(A = A.innerHTML)) {
                                        if (A !== t.innerHTML)
                                            return !1
                                    } else {
                                        for (var l = !0, c = t.firstChild, h = 0; h < s.length; h++) {
                                            if (!c || !S(c, s[h], i)) {
                                                l = !1;
                                                break
                                            }
                                            c = c.nextSibling
                                        }
                                        if (!l || c)
                                            return !1
                                    }
                                else
                                    f(e, s, i);
                            if (n(o))
                                for (var d in o)
                                    if (!I(d)) {
                                        v(e, i);
                                        break
                                    }
                        } else
                            t.data !== e.text && (t.data = e.text);
                        return !0
                    }
                    var A, L, R = {}, P = t.modules, C = t.nodeOps;
                    for (A = 0; A < ao.length; ++A)
                        for (R[ao[A]] = [],
                        L = 0; L < P.length; ++L)
                            n(P[L][ao[A]]) && R[ao[A]].push(P[L][ao[A]]);
                    var I = d("attrs,style,class,staticClass,staticStyle,key");
                    return function(t, a, o, s, c, u) {
                        if (!e(a)) {
                            var h = !1
                              , d = [];
                            if (e(t))
                                h = !0,
                                l(a, d, c, u);
                            else {
                                var p = n(t.nodeType);
                                if (!p && Ge(t, a))
                                    E(t, a, d, s);
                                else {
                                    if (p) {
                                        if (1 === t.nodeType && t.hasAttribute(Ai) && (t.removeAttribute(Ai),
                                        o = !0),
                                        r(o) && S(t, a, d))
                                            return T(a, d, !0),
                                            t;
                                        t = i(t)
                                    }
                                    var f = t.elm
                                      , v = C.parentNode(f);
                                    if (l(a, d, f._leaveCb ? null : v, C.nextSibling(f)),
                                    n(a.parent))
                                        for (var g = a.parent, y = m(a); g; ) {
                                            for (var _ = 0; _ < R.destroy.length; ++_)
                                                R.destroy[_](g);
                                            if (g.elm = a.elm,
                                            y) {
                                                for (var w = 0; w < R.create.length; ++w)
                                                    R.create[w](io, g);
                                                var M = g.data.hook.insert;
                                                if (M.merged)
                                                    for (var A = 1; A < M.fns.length; A++)
                                                        M.fns[A]()
                                            }
                                            g = g.parent
                                        }
                                    n(v) ? b(v, [t], 0, 0) : n(t.tag) && x(t)
                                }
                            }
                            return T(a, d, h),
                            a.elm
                        }
                        n(t) && x(t)
                    }
                }({
                    nodeOps: no,
                    modules: [co, uo, mo, vo, Mo, Di ? {
                        create: $n,
                        activate: $n,
                        remove: function(t, e) {
                            !0 !== t.data.show ? Xn(t, e) : e()
                        }
                    } : {}].concat(lo)
                });
                Bi && document.addEventListener("selectionchange", function() {
                    var t = document.activeElement;
                    t && t.vmodel && nr(t, "input")
                });
                var Do = {
                    model: {
                        inserted: function(t, e, n) {
                            "select" === n.tag ? (Zn(t, e, n.context),
                            t._vOptions = [].map.call(t.options, Qn)) : ("textarea" === n.tag || eo(t.type)) && (t._vModifiers = e.modifiers,
                            e.modifiers.lazy || (t.addEventListener("change", er),
                            zi || (t.addEventListener("compositionstart", tr),
                            t.addEventListener("compositionend", er)),
                            Bi && (t.vmodel = !0)))
                        },
                        componentUpdated: function(t, e, n) {
                            if ("select" === n.tag) {
                                Zn(t, e, n.context);
                                var r = t._vOptions
                                  , i = t._vOptions = [].map.call(t.options, Qn);
                                i.some(function(t, e) {
                                    return !_(t, r[e])
                                }) && (t.multiple ? e.value.some(function(t) {
                                    return Kn(t, i)
                                }) : e.value !== e.oldValue && Kn(e.value, i)) && nr(t, "change")
                            }
                        }
                    },
                    show: {
                        bind: function(t, e, n) {
                            var r = e.value
                              , i = (n = rr(n)).data && n.data.transition
                              , a = t.__vOriginalDisplay = "none" === t.style.display ? "" : t.style.display;
                            r && i ? (n.data.show = !0,
                            Wn(n, function() {
                                t.style.display = a
                            })) : t.style.display = r ? a : "none"
                        },
                        update: function(t, e, n) {
                            var r = e.value;
                            r !== e.oldValue && ((n = rr(n)).data && n.data.transition ? (n.data.show = !0,
                            r ? Wn(n, function() {
                                t.style.display = t.__vOriginalDisplay
                            }) : Xn(n, function() {
                                t.style.display = "none"
                            })) : t.style.display = r ? t.__vOriginalDisplay : "none")
                        },
                        unbind: function(t, e, n, r, i) {
                            i || (t.style.display = t.__vOriginalDisplay)
                        }
                    }
                }
                  , Uo = {
                    name: String,
                    appear: Boolean,
                    css: Boolean,
                    mode: String,
                    type: String,
                    enterClass: String,
                    leaveClass: String,
                    enterToClass: String,
                    leaveToClass: String,
                    enterActiveClass: String,
                    leaveActiveClass: String,
                    appearClass: String,
                    appearActiveClass: String,
                    appearToClass: String,
                    duration: [Number, String, Object]
                }
                  , ko = {
                    name: "transition",
                    props: Uo,
                    abstract: !0,
                    render: function(t) {
                        var e = this
                          , n = this.$options._renderChildren;
                        if (n && (n = n.filter(function(t) {
                            return t.tag || pt(t)
                        })).length) {
                            var r = this.mode
                              , i = n[0];
                            if (sr(this.$vnode))
                                return i;
                            var o = ir(i);
                            if (!o)
                                return i;
                            if (this._leaving)
                                return or(t, i);
                            var s = "__transition-" + this._uid + "-";
                            o.key = null == o.key ? o.isComment ? s + "comment" : s + o.tag : a(o.key) ? 0 === String(o.key).indexOf(s) ? o.key : s + o.key : o.key;
                            var l = (o.data || (o.data = {})).transition = ar(this)
                              , c = this._vnode
                              , u = ir(c);
                            if (o.data.directives && o.data.directives.some(function(t) {
                                return "show" === t.name
                            }) && (o.data.show = !0),
                            u && u.data && !lr(o, u) && !pt(u)) {
                                var h = u && (u.data.transition = y({}, l));
                                if ("out-in" === r)
                                    return this._leaving = !0,
                                    rt(h, "afterLeave", function() {
                                        e._leaving = !1,
                                        e.$forceUpdate()
                                    }),
                                    or(t, i);
                                if ("in-out" === r) {
                                    if (pt(o))
                                        return c;
                                    var d, p = function() {
                                        d()
                                    };
                                    rt(l, "afterEnter", p),
                                    rt(l, "enterCancelled", p),
                                    rt(h, "delayLeave", function(t) {
                                        d = t
                                    })
                                }
                            }
                            return i
                        }
                    }
                }
                  , Bo = y({
                    tag: String,
                    moveClass: String
                }, Uo);
                delete Bo.mode;
                var Fo = {
                    Transition: ko,
                    TransitionGroup: {
                        props: Bo,
                        render: function(t) {
                            for (var e = this.tag || this.$vnode.data.tag || "span", n = Object.create(null), r = this.prevChildren = this.children, i = this.$slots.default || [], a = this.children = [], o = ar(this), s = 0; s < i.length; s++) {
                                var l = i[s];
                                l.tag && null != l.key && 0 !== String(l.key).indexOf("__vlist") && (a.push(l),
                                n[l.key] = l,
                                (l.data || (l.data = {})).transition = o)
                            }
                            if (r) {
                                for (var c = [], u = [], h = 0; h < r.length; h++) {
                                    var d = r[h];
                                    d.data.transition = o,
                                    d.data.pos = d.elm.getBoundingClientRect(),
                                    n[d.key] ? c.push(d) : u.push(d)
                                }
                                this.kept = t(e, null, c),
                                this.removed = u
                            }
                            return t(e, null, a)
                        },
                        beforeUpdate: function() {
                            this.__patch__(this._vnode, this.kept, !1, !0),
                            this._vnode = this.kept
                        },
                        updated: function() {
                            var t = this.prevChildren
                              , e = this.moveClass || (this.name || "v") + "-move";
                            t.length && this.hasMove(t[0].elm, e) && (t.forEach(cr),
                            t.forEach(ur),
                            t.forEach(hr),
                            document.body.offsetHeight,
                            t.forEach(function(t) {
                                if (t.data.moved) {
                                    var n = t.elm
                                      , r = n.style;
                                    Fn(n, e),
                                    r.transform = r.WebkitTransform = r.transitionDuration = "",
                                    n.addEventListener(Ro, n._moveCb = function t(r) {
                                        r && !/transform$/.test(r.propertyName) || (n.removeEventListener(Ro, t),
                                        n._moveCb = null,
                                        zn(n, e))
                                    }
                                    )
                                }
                            }))
                        },
                        methods: {
                            hasMove: function(t, e) {
                                if (!To)
                                    return !1;
                                if (this._hasMove)
                                    return this._hasMove;
                                var n = t.cloneNode();
                                t._transitionClasses && t._transitionClasses.forEach(function(t) {
                                    Un(n, t)
                                }),
                                Dn(n, e),
                                n.style.display = "none",
                                this.$el.appendChild(n);
                                var r = Hn(n);
                                return this.$el.removeChild(n),
                                this._hasMove = r.hasTransform
                            }
                        }
                    }
                };
                we.config.mustUseProp = Ga,
                we.config.isReservedTag = Qa,
                we.config.isReservedAttr = ja,
                we.config.getTagNamespace = ze,
                we.config.isUnknownElement = function(t) {
                    if (!Di)
                        return !0;
                    if (Qa(t))
                        return !1;
                    if (t = t.toLowerCase(),
                    null != to[t])
                        return to[t];
                    var e = document.createElement(t);
                    return t.indexOf("-") > -1 ? to[t] = e.constructor === window.HTMLUnknownElement || e.constructor === window.HTMLElement : to[t] = /HTMLUnknownElement/.test(e.toString())
                }
                ,
                y(we.options.directives, Do),
                y(we.options.components, Fo),
                we.prototype.__patch__ = Di ? No : b,
                we.prototype.$mount = function(t, e) {
                    return t = t && Di ? je(t) : void 0,
                    Mt(this, t, e)
                }
                ,
                setTimeout(function() {
                    Pi.devtools && $i && $i.emit("init", we)
                }, 0);
                var zo, jo = !!Di && function(t, e) {
                    var n = document.createElement("div");
                    return n.innerHTML = '<div a="\n"/>',
                    n.innerHTML.indexOf("&#10;") > 0
                }(), Ho = /\{\{((?:.|\n)+?)\}\}/g, Go = /[-.*+?^${}()|[\]\/\\]/g, Vo = m(function(t) {
                    var e = t[0].replace(Go, "\\$&")
                      , n = t[1].replace(Go, "\\$&");
                    return new RegExp(e + "((?:.|\\n)+?)" + n,"g")
                }), Wo = [{
                    staticKeys: ["staticClass"],
                    transformNode: function(t, e) {
                        e.warn;
                        var n = un(t, "class");
                        n && (t.staticClass = JSON.stringify(n));
                        var r = cn(t, "class", !1);
                        r && (t.classBinding = r)
                    },
                    genData: function(t) {
                        var e = "";
                        return t.staticClass && (e += "staticClass:" + t.staticClass + ","),
                        t.classBinding && (e += "class:" + t.classBinding + ","),
                        e
                    }
                }, {
                    staticKeys: ["staticStyle"],
                    transformNode: function(t, e) {
                        e.warn;
                        var n = un(t, "style");
                        n && (t.staticStyle = JSON.stringify(go(n)));
                        var r = cn(t, "style", !1);
                        r && (t.styleBinding = r)
                    },
                    genData: function(t) {
                        var e = "";
                        return t.staticStyle && (e += "staticStyle:" + t.staticStyle + ","),
                        t.styleBinding && (e += "style:(" + t.styleBinding + "),"),
                        e
                    }
                }], Xo = {
                    model: function(t, e, n) {
                        Ba = n;
                        var r = e.value
                          , i = e.modifiers
                          , a = t.tag
                          , o = t.attrsMap.type;
                        if (t.component)
                            return hn(t, r, i),
                            !1;
                        if ("select" === a)
                            _n(t, r, i);
                        else if ("input" === a && "checkbox" === o)
                            xn(t, r, i);
                        else if ("input" === a && "radio" === o)
                            bn(t, r, i);
                        else if ("input" === a || "textarea" === a)
                            wn(t, r, i);
                        else if (!Pi.isReservedTag(a))
                            return hn(t, r, i),
                            !1;
                        return !0
                    },
                    text: function(t, e) {
                        e.value && an(t, "textContent", "_s(" + e.value + ")")
                    },
                    html: function(t, e) {
                        e.value && an(t, "innerHTML", "_s(" + e.value + ")")
                    }
                }, qo = d("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"), Yo = d("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"), $o = d("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"), Zo = {
                    expectHTML: !0,
                    modules: Wo,
                    directives: Xo,
                    isPreTag: function(t) {
                        return "pre" === t
                    },
                    isUnaryTag: qo,
                    mustUseProp: Ga,
                    canBeLeftOpenTag: Yo,
                    isReservedTag: Qa,
                    getTagNamespace: ze,
                    staticKeys: Wo.reduce(function(t, e) {
                        return t.concat(e.staticKeys || [])
                    }, []).join(",")
                }, Jo = {
                    decode: function(t) {
                        return zo = zo || document.createElement("div"),
                        zo.innerHTML = t,
                        zo.textContent
                    }
                }, Ko = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/, Qo = "[a-zA-Z_][\\w\\-\\.]*", ts = "((?:" + Qo + "\\:)?" + Qo + ")", es = new RegExp("^<" + ts), ns = /^\s*(\/?)>/, rs = new RegExp("^<\\/" + ts + "[^>]*>"), is = /^<!DOCTYPE [^>]+>/i, as = /^<!--/, os = /^<!\[/, ss = !1;
                "x".replace(/x(.)?/g, function(t, e) {
                    ss = "" === e
                });
                var ls, cs, us, hs, ds, ps, fs, ms, vs, gs, ys = d("script,style,textarea", !0), xs = {}, bs = {
                    "&lt;": "<",
                    "&gt;": ">",
                    "&quot;": '"',
                    "&amp;": "&",
                    "&#10;": "\n"
                }, _s = /&(?:lt|gt|quot|amp);/g, ws = /&(?:lt|gt|quot|amp|#10);/g, Ms = d("pre,textarea", !0), Es = function(t, e) {
                    return t && Ms(t) && "\n" === e[0]
                }, Ts = /^@|^v-on:/, Ss = /^v-|^@|^:/, As = /(.*?)\s+(?:in|of)\s+(.*)/, Ls = /\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/, Rs = /:(.*)$/, Ps = /^:|^v-bind:/, Cs = /\.[^.]+/g, Is = m(Jo.decode), Os = /^xmlns:NS\d+/, Ns = /^NS\d+:/, Ds = m(function(t) {
                    return d("type,tag,attrsList,attrsMap,plain,parent,children,attrs" + (t ? "," + t : ""))
                }), Us = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/, ks = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/, Bs = {
                    esc: 27,
                    tab: 9,
                    enter: 13,
                    space: 32,
                    up: 38,
                    left: 37,
                    right: 39,
                    down: 40,
                    delete: [8, 46]
                }, Fs = function(t) {
                    return "if(" + t + ")return null;"
                }, zs = {
                    stop: "$event.stopPropagation();",
                    prevent: "$event.preventDefault();",
                    self: Fs("$event.target !== $event.currentTarget"),
                    ctrl: Fs("!$event.ctrlKey"),
                    shift: Fs("!$event.shiftKey"),
                    alt: Fs("!$event.altKey"),
                    meta: Fs("!$event.metaKey"),
                    left: Fs("'button' in $event && $event.button !== 0"),
                    middle: Fs("'button' in $event && $event.button !== 1"),
                    right: Fs("'button' in $event && $event.button !== 2")
                }, js = {
                    on: function(t, e) {
                        t.wrapListeners = function(t) {
                            return "_g(" + t + "," + e.value + ")"
                        }
                    },
                    bind: function(t, e) {
                        t.wrapData = function(n) {
                            return "_b(" + n + ",'" + t.tag + "'," + e.value + "," + (e.modifiers && e.modifiers.prop ? "true" : "false") + (e.modifiers && e.modifiers.sync ? ",true" : "") + ")"
                        }
                    },
                    cloak: b
                }, Hs = function(t) {
                    this.options = t,
                    this.warn = t.warn || nn,
                    this.transforms = rn(t.modules, "transformCode"),
                    this.dataGenFns = rn(t.modules, "genData"),
                    this.directives = y(y({}, js), t.directives);
                    var e = t.isReservedTag || Ti;
                    this.maybeComponent = function(t) {
                        return !e(t.tag)
                    }
                    ,
                    this.onceId = 0,
                    this.staticRenderFns = []
                }, Gs = function(t) {
                    return function(e) {
                        function n(n, r) {
                            var i = Object.create(e)
                              , a = []
                              , o = [];
                            if (i.warn = function(t, e) {
                                (e ? o : a).push(t)
                            }
                            ,
                            r) {
                                r.modules && (i.modules = (e.modules || []).concat(r.modules)),
                                r.directives && (i.directives = y(Object.create(e.directives), r.directives));
                                for (var s in r)
                                    "modules" !== s && "directives" !== s && (i[s] = r[s])
                            }
                            var l = t(n, i);
                            return l.errors = a,
                            l.tips = o,
                            l
                        }
                        return {
                            compile: n,
                            compileToFunctions: fi(n)
                        }
                    }
                }(function(t, e) {
                    var n = mr(t.trim(), e);
                    Dr(n, e);
                    var r = Vr(n, e);
                    return {
                        ast: n,
                        render: r.render,
                        staticRenderFns: r.staticRenderFns
                    }
                })(Zo).compileToFunctions, Vs = m(function(t) {
                    var e = je(t);
                    return e && e.innerHTML
                }), Ws = we.prototype.$mount;
                return we.prototype.$mount = function(t, e) {
                    if ((t = t && je(t)) === document.body || t === document.documentElement)
                        return this;
                    var n = this.$options;
                    if (!n.render) {
                        var r = n.template;
                        if (r)
                            if ("string" == typeof r)
                                "#" === r.charAt(0) && (r = Vs(r));
                            else {
                                if (!r.nodeType)
                                    return this;
                                r = r.innerHTML
                            }
                        else
                            t && (r = mi(t));
                        if (r) {
                            var i = Gs(r, {
                                shouldDecodeNewlines: jo,
                                delimiters: n.delimiters,
                                comments: n.comments
                            }, this)
                              , a = i.render
                              , o = i.staticRenderFns;
                            n.render = a,
                            n.staticRenderFns = o
                        }
                    }
                    return Ws.call(this, t, e)
                }
                ,
                we.compile = Gs,
                we
            })
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    36: [function(t, e, n) {
        "use strict";
        e.exports = {
            preload: function(t, e, n, r) {
                r()
            },
            initBeforeTransit: function(t, e) {},
            initAfterTransit: function(t, e) {}
        }
    }
    , {}],
    37: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        var i = r(t("../modules/buildBusinessCasestudy"))
          , a = r(t("../modules/loadPostContentImgs"));
        e.exports = {
            preload: function(t, e, n, r) {
                (0,
                i.default)(n);
                (0,
                a.default)(t, r)
            },
            initBeforeTransit: function(t, e) {},
            initAfterTransit: function(t, e) {}
        }
    }
    , {
        "../modules/buildBusinessCasestudy": 62,
        "../modules/loadPostContentImgs": 76
    }],
    38: [function(t, e, n) {
        "use strict";
        var r = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("js-util/Hover.js"));
        e.exports = {
            preload: function(t, e, n, r) {
                r()
            },
            initBeforeTransit: function(t, e) {
                for (var n = document.querySelector(".js-pjax-fixed-after").querySelectorAll(".js-hover"), i = 0; i < n.length; i++)
                    new r.default(n[i])
            },
            initAfterTransit: function(t, e) {}
        }
    }
    , {
        "js-util/Hover.js": 4
    }],
    39: [function(t, e, n) {
        "use strict";
        var r = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("../../modules/buildEntryForm.js"));
        e.exports = {
            preload: function(t, e, n, i) {
                (0,
                r.default)(e);
                i()
            },
            initBeforeTransit: function(t, e) {},
            initAfterTransit: function(t, e) {}
        }
    }
    , {
        "../../modules/buildEntryForm.js": 64
    }],
    40: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        var i = r(t("js-util/Hover.js"))
          , a = r(t("../../modules/career/index/DrawText"))
          , o = r(t("../../modules/buildVideoModal"))
          , s = null;
        e.exports = {
            preload: function(t, e, n, r) {
                r()
            },
            initBeforeTransit: function(t, e) {
                var n = t.querySelector(".p-career-index-kv")
                  , r = (0,
                o.default)()
                  , l = document.querySelector(".js-pjax-fixed-after").querySelectorAll(".js-hover")
                  , c = t.querySelector(".js-draw-text")
                  , u = t.querySelector(".js-video-modal-btn");
                e.resizeReset = function() {
                    n.style.height = ""
                }
                ,
                e.resizePrev = function() {
                    n.style.height = e.resolution.y + "px"
                }
                ,
                u.addEventListener("click", function(t) {
                    t.preventDefault(),
                    r.open()
                });
                for (var h = 0; h < l.length; h++)
                    new i.default(l[h]);
                s = new a.default(c),
                n.style.height = e.resolution.y + "px"
            },
            initAfterTransit: function(t, e) {
                var n = t.querySelector(".p-career-index-kv");
                s.start(function() {
                    n.classList.add("is-shown")
                })
            }
        }
    }
    , {
        "../../modules/buildVideoModal": 69,
        "../../modules/career/index/DrawText": 70,
        "js-util/Hover.js": 4
    }],
    41: [function(t, e, n) {
        "use strict";
        var r = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("../../modules/loadPostContentImgs"));
        e.exports = {
            preload: function(t, e, n, i) {
                (0,
                r.default)(t, i)
            },
            initBeforeTransit: function(t, e, n) {},
            initAfterTransit: function(t, e) {}
        }
    }
    , {
        "../../modules/loadPostContentImgs": 76
    }],
    42: [function(t, e, n) {
        "use strict";
        var r = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("../../modules/loadPostContentImgs"));
        e.exports = {
            preload: function(t, e, n, i) {
                (0,
                r.default)(t, i)
            },
            initBeforeTransit: function(t, e) {},
            initAfterTransit: function(t, e) {}
        }
    }
    , {
        "../../modules/loadPostContentImgs": 76
    }],
    43: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        var i = r(t("js-util/Hover.js"))
          , a = r(t("js-util/ScrollInnerPage.js"))
          , o = r(t("../modules/animateLowerHeader.js"));
        e.exports = {
            initBeforeTransit: function(t, e, n) {
                for (var r = t.querySelectorAll(".js-hover"), o = 0; o < r.length; o++)
                    new i.default(r[o]);
                if (!n) {
                    var s = document.querySelector(".p-pagetop");
                    new a.default(s,1e3)
                }
            },
            initAfterTransit: function(t, e) {
                var n = t.querySelector(".js-lower-header");
                n && (0,
                o.default)(e, n)
            }
        }
    }
    , {
        "../modules/animateLowerHeader.js": 61,
        "js-util/Hover.js": 4,
        "js-util/ScrollInnerPage.js": 6
    }],
    44: [function(t, e, n) {
        "use strict";
        var r = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("../../modules/googleMap.js"));
        e.exports = {
            preload: function(t, e, n, r) {
                r()
            },
            initBeforeTransit: function(t, e) {},
            initAfterTransit: function(t, e) {
                (0,
                r.default)(document.getElementById("prored-tokyo"), 15, 35.658671, 139.753157),
                (0,
                r.default)(document.getElementById("prored-nagoya"), 15, 35.167681, 136.891053),
                (0,
                r.default)(document.getElementById("prored-satellite"), 15, 35.658393, 139.752283)
            }
        }
    }
    , {
        "../../modules/googleMap.js": 71
    }],
    45: [function(t, e, n) {
        "use strict";
        var r = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("../../modules/buildContactForm.js"));
        e.exports = {
            preload: function(t, e, n, i) {
                (0,
                r.default)(e);
                i()
            },
            initBeforeTransit: function(t, e) {},
            initAfterTransit: function(t, e) {}
        }
    }
    , {
        "../../modules/buildContactForm.js": 63
    }],
    46: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        var i = r(t("../modules/index/Kv"))
          , a = r(t("../modules/buildLatestPost"))
          , o = r(t("../modules/buildVideoModal"))
          , s = null;
        e.exports = {
            preload: function(t, e, n, r) {
                (0,
                a.default)(n);
                var l = (0,
                o.default)()
                  , c = t.querySelector(".js-video-modal-btn");
                s = new i.default(e),
                c.addEventListener("click", function(t) {
                    t.preventDefault(),
                    l.open()
                }),
                s.init(function() {
                    r(),
                    e.resizeReset = function() {
                        s.reset()
                    }
                    ,
                    e.resizeNext = function() {
                        s.resize()
                    }
                    ,
                    e.renderNext = function() {
                        s.render()
                    }
                })
            },
            initBeforeTransit: function(t, e) {},
            initAfterTransit: function(t, e) {
                s.start()
            }
        }
    }
    , {
        "../modules/buildLatestPost": 67,
        "../modules/buildVideoModal": 69,
        "../modules/index/Kv": 72
    }],
    47: [function(t, e, n) {
        "use strict";
        var r = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("../../modules/loadPostContentImgs"));
        e.exports = {
            preload: function(t, e, n, i) {
                (0,
                r.default)(t, i)
            },
            initBeforeTransit: function(t, e) {},
            initAfterTransit: function(t, e) {}
        }
    }
    , {
        "../../modules/loadPostContentImgs": 76
    }],
    48: [function(t, e, n) {
        "use strict";
        var r = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("../../modules/buildSitemapTitle"));
        e.exports = {
            preload: function(t, e, n, i) {
                (0,
                r.default)(n);
                i()
            },
            initBeforeTransit: function(t, e) {},
            initAfterTransit: function(t, e) {}
        }
    }
    , {
        "../../modules/buildSitemapTitle": 68
    }],
    49: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        var i = r(t("../../modules/buildVideoModal"))
          , a = r(t("../../modules/loadPostContentImgs"));
        e.exports = {
            preload: function(t, e, n, r) {
                var o = (0,
                i.default)();
                t.querySelector(".js-video-modal-btn").addEventListener("click", function(t) {
                    t.preventDefault(),
                    o.open()
                }),
                (0,
                a.default)(t, r)
            },
            initBeforeTransit: function(t, e) {},
            initAfterTransit: function(t, e) {}
        }
    }
    , {
        "../../modules/buildVideoModal": 69,
        "../../modules/loadPostContentImgs": 76
    }],
    50: [function(t, e, n) {
        arguments[4][47][0].apply(n, arguments)
    }
    , {
        "../../modules/loadPostContentImgs": 76,
        dup: 47
    }],
    51: [function(t, e, n) {
        arguments[4][42][0].apply(n, arguments)
    }
    , {
        "../../modules/loadPostContentImgs": 76,
        dup: 42
    }],
    52: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        var i = r(t("./modules/SmoothScrollManager"))
          , a = r(t("./modules/buildGlobalNaviPc"))
          , o = r(t("./modules/buildGlobalNaviSp"))
          , s = r(t("./modules/Pjax"))
          , l = null
          , c = null
          , u = null
          , h = null;
        (function(t) {
            var e = new XMLHttpRequest;
            e.onreadystatechange = function() {
                if (4 == e.readyState && 200 == e.status) {
                    var n = JSON.parse(e.responseText);
                    t(n)
                }
            }
            ,
            e.open("GET", "/api/get_all_posts/", !0),
            e.send(null)
        }
        )(function(t) {
            l = (0,
            a.default)(t),
            c = (0,
            o.default)(t),
            u = new i.default(l),
            (h = new s.default(u,l,c,t)).elmProgress.classList.add("is-shown"),
            setTimeout(function() {
                h.onLoad()
            }, 1e3)
        })
    }
    , {
        "./modules/Pjax": 56,
        "./modules/SmoothScrollManager": 60,
        "./modules/buildGlobalNaviPc": 65,
        "./modules/buildGlobalNaviSp": 66
    }],
    53: [function(t, e, n) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var r = t("gl-matrix");
        n.default = {
            updateVelocity: function(t, e, n) {
                r.vec3.scale(e, e, 1 / n),
                r.vec3.add(t, t, e)
            },
            applyFriction: function(t, e, n) {
                var i = [0, 0, 0];
                r.vec3.scale(i, t, -1);
                r.vec3.normalize(i, i),
                r.vec3.scale(i, i, e),
                r.vec3.add(t, t, i)
            },
            applyDrag: function(t, e) {
                var n = [0, 0, 0];
                r.vec3.scale(n, t, -1),
                r.vec3.normalize(n, n),
                r.vec3.scale(n, n, r.vec3.length(t) * e),
                r.vec3.add(t, t, n)
            },
            applyHook: function(t, e, n, i, a) {
                var o = [0, 0, 0];
                r.vec3.sub(o, t, n);
                var s = r.vec3.length(o) - i;
                r.vec3.normalize(o, o),
                r.vec3.scale(o, o, -1 * a * s),
                r.vec3.add(e, e, o)
            }
        }
    }
    , {
        "gl-matrix": 1
    }],
    54: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , a = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("./Force3"))
          , o = function() {
            function t(e) {
                r(this, t),
                this.velocity = [0, 0, 0],
                this.acceleration = [0, 0, 0],
                this.anchor = [0, 0, 0],
                this.k = e && void 0 !== e.k ? e.k : .3,
                this.d = e && void 0 !== e.d ? e.d : .8,
                this.m = e && void 0 !== e.m ? e.m : 1
            }
            return i(t, [{
                key: "render",
                value: function() {
                    a.default.applyHook(this.velocity, this.acceleration, this.anchor, 0, this.k),
                    a.default.applyDrag(this.acceleration, this.d),
                    a.default.updateVelocity(this.velocity, this.acceleration, this.m)
                }
            }]),
            t
        }();
        n.default = o
    }
    , {
        "./Force3": 53
    }],
    55: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , a = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("js-util/MathEx"))
          , o = function() {
            function t(e, n, i, a) {
                r(this, t),
                this.scrollManager = n,
                this.hookes = i,
                this.elm = e,
                this.height = 0,
                this.top = 0,
                this.max = a && a.max ? 1 * a.max : 10,
                this.min = a && a.min ? 1 * a.min : -10,
                this.ratio = a && a.ratio ? 1 * a.ratio : .012,
                this.unit = a && a.unit ? a.unit : "%"
            }
            return i(t, [{
                key: "init",
                value: function(t) {
                    var e = this.elm.getBoundingClientRect();
                    this.height = e.height,
                    this.top = t + e.top,
                    this.elm.style.backfaceVisibility = "hidden"
                }
            }, {
                key: "render",
                value: function(t) {
                    var e = t ? a.default.clamp((this.hookes.velocity[1] - (this.top + .5 * this.height)) * this.ratio, this.min, this.max) : 0;
                    Math.abs(this.hookes.acceleration[1]) < .1 && "px" == this.unit && (e = Math.floor(e)),
                    this.elm.style.transform = "translate3D(0, " + e + this.unit + ", 0)"
                }
            }]),
            t
        }();
        n.default = o
    }
    , {
        "js-util/MathEx": 5
    }],
    56: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , a = ".js-pjax-contents"
          , o = ".js-pjax-fixed-before"
          , s = ".js-pjax-fixed-after"
          , l = {
            common: t("../init/common.js"),
            blank: t("../init/blank.js"),
            index: t("../init/index.js"),
            whoWeAre: {
                index: t("../init/who_we_are/index.js")
            },
            business: t("../init/business.js"),
            career: {
                index: t("../init/career/index.js"),
                entry: t("../init/career/entry.js"),
                common: t("../init/career/common.js")
            },
            works: {
                index: t("../init/works/index.js"),
                detail: t("../init/works/detail.js")
            },
            client: {
                index: t("../init/client/index.js"),
                detail: t("../init/client/detail.js")
            },
            company: {
                access: t("../init/company/access.js")
            },
            news: {
                detail: t("../init/news/detail.js")
            },
            contact: {
                index: t("../init/contact/index.js")
            },
            sitemap: {
                index: t("../init/sitemap/index.js")
            }
        }
          , c = function() {
            function t(e, n, i, l) {
                r(this, t),
                this.scrollManager = e,
                this.gNavPc = n,
                this.gNavSp = i,
                this.allPosts = l,
                this.xhr = new XMLHttpRequest,
                this.elmPage = document.querySelector(".l-page"),
                this.elmContents = document.querySelector(a),
                this.elmFixedBefore = document.querySelector(o),
                this.elmFixedAfter = document.querySelector(s),
                this.elmOverlay = document.querySelectorAll(".js-pjax-overlay"),
                this.elmProgress = document.querySelector(".js-pjax-progress"),
                this.page = null,
                this.href = location.pathname,
                this.isAnimate = !1,
                this.isPageLoaded = !1,
                this.on()
            }
            return i(t, [{
                key: "onLoad",
                value: function() {
                    var t = this;
                    this.selectPageFunc(),
                    this.page.preload(this.elmContents, this.scrollManager, this.allPosts, function() {
                        t.scrollManager.start(function() {
                            l.common.initBeforeTransit(document, t.scrollManager, t.isPageLoaded),
                            t.page.initBeforeTransit(t.elmContents, t.scrollManager),
                            t.onPjaxLinks(document),
                            t.transitEnd(),
                            t.isPageLoaded = !0
                        })
                    })
                }
            }, {
                key: "selectPageFunc",
                value: function() {
                    switch (this.elmPage.dataset.pageId) {
                    case "index":
                        this.page = l.index,
                        this.gNavPc.currentId = this.gNavSp.currentId = 0;
                        break;
                    case "who-we-are":
                        this.page = l.whoWeAre.index,
                        this.gNavPc.currentId = this.gNavSp.currentId = 1;
                        break;
                    case "business":
                        this.page = l.business,
                        this.gNavPc.currentId = this.gNavSp.currentId = 2;
                        break;
                    case "works":
                        this.page = l.works.index,
                        this.gNavPc.currentId = this.gNavSp.currentId = 3;
                        break;
                    case "worksDetail":
                        this.page = l.works.detail,
                        this.gNavPc.currentId = this.gNavSp.currentId = 3;
                        break;
                    case "client":
                        this.page = l.client.index,
                        this.gNavPc.currentId = this.gNavSp.currentId = 4;
                        break;
                    case "clientDetail":
                        this.page = l.client.detail,
                        this.gNavPc.currentId = this.gNavSp.currentId = 4;
                        break;
                    case "company":
                        this.page = l.blank,
                        this.gNavPc.currentId = this.gNavSp.currentId = 5;
                        break;
                    case "access":
                        this.page = l.company.access,
                        this.gNavPc.currentId = this.gNavSp.currentId = 5;
                        break;
                    case "ir":
                        this.page = l.blank,
                        this.gNavPc.currentId = this.gNavSp.currentId = 9;
                        break;
                    case "news":
                        this.page = l.blank,
                        this.gNavPc.currentId = this.gNavSp.currentId = 6;
                        break;
                    case "newsDetail":
                        this.page = l.news.detail,
                        this.gNavPc.currentId = this.gNavSp.currentId = 6;
                        break;
                    case "career":
                        this.page = l.career.common,
                        this.gNavPc.currentId = this.gNavSp.currentId = 7;
                        break;
                    case "careerIndex":
                        this.page = l.career.index,
                        this.gNavPc.currentId = this.gNavSp.currentId = 7;
                        break;
                    case "careerEntry":
                        this.page = l.career.entry,
                        this.gNavPc.currentId = this.gNavSp.currentId = 7;
                        break;
                    case "contact":
                        this.page = l.contact.index,
                        this.gNavPc.currentId = this.gNavSp.currentId = 8;
                        break;
                    case "sitemap":
                        this.page = l.sitemap.index;
                        break;
                    default:
                        this.page = l.blank,
                        this.gNavPc.currentId = this.gNavSp.currentId = 0
                    }
                }
            }, {
                key: "send",
                value: function() {
                    this.scrollManager.off(),
                    this.scrollManager.isWorkingSmooth = !1,
                    this.xhr.open("GET", this.href, !0),
                    this.xhr.send()
                }
            }, {
                key: "replaceContent",
                value: function() {
                    var t = this
                      , e = document.createElement("div");
                    e.innerHTML = this.xhr.responseText;
                    var n = e.querySelector(".l-page")
                      , r = e.querySelector(a)
                      , i = e.querySelector(o)
                      , c = e.querySelector(s);
                    this.elmPage.dataset.pageId = n.dataset.pageId,
                    this.elmContents.innerHTML = r.innerHTML,
                    this.elmFixedBefore.innerHTML = i.innerHTML,
                    this.elmFixedAfter.innerHTML = c.innerHTML,
                    document.title = e.querySelector("title").innerHTML,
                    window.ga && ga("send", "pageview", window.location.pathname.replace(/^\/?/, "/") + window.location.search),
                    this.selectPageFunc(),
                    window.scrollTo(0, 0),
                    this.page.preload(this.elmContents, this.scrollManager, this.allPosts, function() {
                        setTimeout(function() {
                            l.common.initBeforeTransit(t.elmContents, t.scrollManager),
                            t.page.initBeforeTransit(t.elmContents, t.scrollManager),
                            t.onPjaxLinks(t.elmContents, t.elmFixedBefore, t.elmFixedAfter),
                            t.scrollManager.start(function() {
                                t.transitEnd()
                            })
                        }, 100)
                    })
                }
            }, {
                key: "transitStart",
                value: function(t) {
                    if (!this.isAnimate) {
                        this.isAnimate = !0,
                        this.scrollManager.isWorking = !1;
                        for (e = 0; e < this.elmOverlay.length; e++)
                            this.elmOverlay[e].classList.remove("is-shrink");
                        if (t) {
                            for (e = 0; e < this.elmOverlay.length; e++)
                                this.elmOverlay[e].classList.add("is-expand");
                            this.elmProgress.classList.add("is-shown")
                        } else {
                            for (var e = 0; e < this.elmOverlay.length; e++)
                                this.elmOverlay[e].classList.add("is-expand-moment");
                            this.elmProgress.classList.add("is-shown-moment"),
                            this.href = this.gNavPc.currentPath = this.gNavSp.currentPath = location.pathname,
                            this.send()
                        }
                        this.gNavSp.closeNavi()
                    }
                }
            }, {
                key: "transitEnd",
                value: function() {
                    var t = this;
                    setTimeout(function() {
                        for (var e = 0; e < t.elmOverlay.length; e++)
                            t.elmOverlay[e].classList.remove("is-expand"),
                            t.elmOverlay[e].classList.remove("is-expand-moment"),
                            t.elmOverlay[e].classList.add("is-shrink");
                        t.elmProgress.classList.add("is-hidden")
                    }, 100)
                }
            }, {
                key: "on",
                value: function() {
                    var t = this;
                    this.xhr.onreadystatechange = function() {
                        switch (t.xhr.readyState) {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                            break;
                        case 4:
                            200 == t.xhr.status ? t.replaceContent() : 404 == t.xhr.status && t.replaceContent()
                        }
                    }
                    ,
                    window.addEventListener("popstate", function(e) {
                        e.preventDefault(),
                        history.scrollRestoration = "manual",
                        t.gNavSp.isOpenedNavi ? t.transitStart(!1) : t.transitStart(!0)
                    }),
                    this.elmOverlay[2].addEventListener("animationend", function() {
                        t.elmOverlay[2].classList.contains("is-expand") && (t.href = t.gNavPc.currentPath = t.gNavSp.currentPath = location.pathname,
                        t.send())
                    }),
                    this.elmOverlay[0].addEventListener("animationend", function() {
                        if (t.elmOverlay[0].classList.contains("is-shrink")) {
                            if (t.isAnimate = !1,
                            t.elmProgress.classList.remove("is-shown"),
                            t.elmProgress.classList.remove("is-shown-moment"),
                            t.elmProgress.classList.remove("is-hidden"),
                            t.href !== location.pathname)
                                return void t.transitStart(!0);
                            l.common.initAfterTransit(t.elmContents, t.scrollManager, t.isPageLoaded),
                            t.page.initAfterTransit(t.elmContents, t.scrollManager)
                        }
                    })
                }
            }, {
                key: "onPjaxLinks",
                value: function(t, e, n) {
                    for (var r = this, i = [t.querySelectorAll(".js-pjax-link"), e ? e.querySelectorAll(".js-pjax-link") : [], n ? n.querySelectorAll(".js-pjax-link") : []], a = [t.querySelectorAll(".js-pjax-link-moment"), e ? e.querySelectorAll(".js-pjax-link-moment") : [], n ? n.querySelectorAll(".js-pjax-link-moment") : []], o = function(t, e) {
                        t != location.pathname ? (history.pushState(null, null, t),
                        r.transitStart(e),
                        r.gNavPc.hideChildren()) : r.gNavSp.closeNavi()
                    }, s = 0; s < i.length; s++)
                        for (l = 0; l < i[s].length; l++)
                            !function() {
                                var t = i[s][l]
                                  , e = t.getAttribute("href");
                                t.addEventListener("click", function(t) {
                                    t.preventDefault(),
                                    o(e, !0)
                                })
                            }();
                    for (s = 0; s < i.length; s++)
                        for (var l = 0; l < a[s].length; l++)
                            !function() {
                                var t = a[s][l]
                                  , e = t.getAttribute("href");
                                t.addEventListener("click", function(t) {
                                    t.preventDefault(),
                                    o(e, !1)
                                })
                            }()
                }
            }]),
            t
        }();
        n.default = c
    }
    , {
        "../init/blank.js": 36,
        "../init/business.js": 37,
        "../init/career/common.js": 38,
        "../init/career/entry.js": 39,
        "../init/career/index.js": 40,
        "../init/client/detail.js": 41,
        "../init/client/index.js": 42,
        "../init/common.js": 43,
        "../init/company/access.js": 44,
        "../init/contact/index.js": 45,
        "../init/index.js": 46,
        "../init/news/detail.js": 47,
        "../init/sitemap/index.js": 48,
        "../init/who_we_are/index.js": 49,
        "../init/works/detail.js": 50,
        "../init/works/index.js": 51
    }],
    57: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , a = function() {
            function t(e) {
                r(this, t),
                this.elm = e,
                this.elmChildren = e.querySelectorAll("js-scroll-item-child"),
                this.top = 0,
                this.bottom = 0
            }
            return i(t, [{
                key: "init",
                value: function(t) {
                    var e = this.elm.getBoundingClientRect();
                    this.top = t + e.top,
                    this.bottom = this.top + e.height
                }
            }, {
                key: "show",
                value: function(t, e) {
                    if (t > this.top && e < this.bottom) {
                        this.elm.classList.add("is-shown");
                        for (var n = 0; n < this.elmChildren.length; n++)
                            this.elmChildren[n].classList.add("is-shown")
                    }
                }
            }]),
            t
        }();
        n.default = a
    }
    , {}],
    58: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function i(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = r(t("./ScrollItem"))
          , s = r(t("./SmoothItem"))
          , l = r(t("./ParallaxItem"))
          , c = function() {
            function t(e) {
                i(this, t),
                this.scrollManager = e,
                this.scrollItems = [],
                this.smoothItems = [],
                this.parallaxItems = []
            }
            return a(t, [{
                key: "init",
                value: function() {
                    var t = document.querySelectorAll(".js-scroll-item")
                      , e = document.querySelectorAll(".js-smooth-item")
                      , n = document.querySelectorAll(".js-parallax-item");
                    this.scrollItems = [],
                    this.smoothItems = [],
                    this.parallaxItems = [];
                    for (r = 0; r < t.length; r++)
                        this.scrollItems[r] = new o.default(t[r],this.scrollManager);
                    for (r = 0; r < e.length; r++)
                        this.smoothItems[r] = new s.default(e[r],this.scrollManager,this.scrollManager.hookes.smooth,e[r].dataset);
                    for (var r = 0; r < n.length; r++)
                        this.parallaxItems[r] = new l.default(n[r],this.scrollManager,this.scrollManager.hookes.parallax,n[r].dataset)
                }
            }, {
                key: "scroll",
                value: function() {
                    for (var t = 0; t < this.scrollItems.length; t++)
                        this.scrollItems[t].show(this.scrollManager.scrollTop + this.scrollManager.resolution.y, this.scrollManager.scrollTop)
                }
            }, {
                key: "resize",
                value: function() {
                    for (var t = window.pageYOffset, e = 0; e < this.scrollItems.length; e++)
                        this.scrollItems[e].init(t);
                    for (e = 0; e < this.smoothItems.length; e++)
                        this.smoothItems[e].init(t);
                    for (e = 0; e < this.parallaxItems.length; e++)
                        this.parallaxItems[e].init(t)
                }
            }, {
                key: "render",
                value: function(t) {
                    for (e = 0; e < this.smoothItems.length; e++)
                        this.smoothItems[e].render(t);
                    for (var e = 0; e < this.parallaxItems.length; e++)
                        this.parallaxItems[e].render(t)
                }
            }]),
            t
        }();
        n.default = c
    }
    , {
        "./ParallaxItem": 55,
        "./ScrollItem": 57,
        "./SmoothItem": 59
    }],
    59: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , a = function() {
            function t(e, n, i, a) {
                r(this, t),
                this.scrollManager = n,
                this.hookes = i,
                this.elm = e,
                this.height = 0,
                this.top = 0,
                this.max = a && a.max ? 1 * a.max : null,
                this.min = a && a.min ? 1 * a.min : null,
                this.ratio = a && a.ratio ? 1 * a.ratio : .05,
                this.unit = a && a.unit ? a.unit : "px"
            }
            return i(t, [{
                key: "init",
                value: function(t) {
                    var e = this.elm.getBoundingClientRect();
                    this.height = e.height,
                    this.top = t + e.top,
                    this.elm.style.backfaceVisibility = "hidden"
                }
            }, {
                key: "render",
                value: function(t) {
                    var e = 0;
                    t && (e = this.hookes.velocity[1] * this.ratio,
                    Math.abs(this.hookes.acceleration[1]) < .01 && (this.hookes.velocity[1] = this.hookes.anchor[1]),
                    this.min && (e = Math.max(e, this.min)),
                    this.max && (e = Math.min(e, this.max))),
                    this.elm.style.transform = "translate3D(0, " + e + this.unit + ", 0)"
                }
            }]),
            t
        }();
        n.default = a
    }
    , {}],
    60: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function i(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = r(t("js-util/debounce"))
          , s = r(t("js-util/isiOS"))
          , l = r(t("js-util/isAndroid"))
          , c = r(t("./Hookes"))
          , u = r(t("./ScrollItems"))
          , h = document.querySelector(".l-contents")
          , d = document.querySelector(".js-dummy-scroll")
          , p = function() {
            function t(e) {
                i(this, t),
                this.gNavPc = e,
                this.scrollItems = new u.default(this),
                this.scrollTop = 0,
                this.scrollFrame = 0,
                this.resolution = {
                    x: 0,
                    y: 0
                },
                this.bodyResolution = {
                    x: 0,
                    y: 0
                },
                this.hookes = {},
                this.scrollPrev = null,
                this.scrollNext = null,
                this.resizeReset = null,
                this.resizePrev = null,
                this.resizeNext = null,
                this.renderPrev = null,
                this.renderNext = null,
                this.isWorking = !1,
                this.isWorkingSmooth = !1,
                this.on()
            }
            return a(t, [{
                key: "start",
                value: function(t) {
                    var e = this;
                    this.initHookes(),
                    this.scrollItems.init(),
                    this.resize(function() {
                        e.scroll(),
                        e.isWorkingSmooth = !0,
                        e.renderLoop(),
                        t && t()
                    })
                }
            }, {
                key: "initDummyScroll",
                value: function() {
                    this.resolution.x <= 1024 ? (h.style.transform = "",
                    h.classList.remove("is-fixed"),
                    d.style.height = "0") : (h.classList.add("is-fixed"),
                    d.style.height = h.clientHeight + "px"),
                    this.render()
                }
            }, {
                key: "initHookes",
                value: function() {
                    this.hookes = {
                        contents: new c.default({
                            k: .3,
                            d: .7
                        }),
                        smooth: new c.default({
                            k: .25,
                            d: .75
                        }),
                        parallax: new c.default({
                            k: .25,
                            d: .75
                        })
                    }
                }
            }, {
                key: "scrollBasis",
                value: function() {
                    this.resolution.x > 1024 && (this.hookes.contents.anchor[1] = -this.scrollTop,
                    this.hookes.smooth.velocity[1] += this.scrollFrame,
                    this.hookes.parallax.anchor[1] = this.scrollTop + .5 * this.resolution.y),
                    this.scrollItems.scroll()
                }
            }, {
                key: "scroll",
                value: function(t) {
                    if (!1 !== this.isWorking) {
                        var e = window.pageYOffset;
                        this.scrollFrame = e - this.scrollTop,
                        this.scrollTop = e,
                        this.scrollPrev && this.scrollPrev(),
                        this.scrollBasis(),
                        this.scrollNext && this.scrollNext()
                    }
                }
            }, {
                key: "resizeBasis",
                value: function() {
                    this.scrollItems.resize(),
                    this.gNavPc.resize(this.resolution.y)
                }
            }, {
                key: "resize",
                value: function(t) {
                    if (this.isWorking = !1,
                    this.resizeReset && this.resizeReset(),
                    this.scrollTop = window.pageYOffset,
                    this.resolution.x = window.innerWidth,
                    this.resolution.y = window.innerHeight,
                    this.bodyResolution.x = document.body.clientWidth,
                    this.bodyResolution.y = document.body.clientHeight,
                    this.resolution.x > 1024)
                        this.hookes.contents.velocity[1] = this.hookes.contents.anchor[1] = -this.scrollTop,
                        this.hookes.parallax.velocity[1] = this.hookes.parallax.anchor[1] = this.scrollTop + .5 * this.resolution.y;
                    else
                        for (var e in this.hookes)
                            switch (e) {
                            case "contents":
                            case "parallax":
                                this.hookes[e].anchor[1] = this.hookes[e].velocity[1] = 0;
                                break;
                            default:
                                this.hookes[e].velocity[1] = 0
                            }
                    this.initDummyScroll(),
                    this.render(),
                    window.scrollTo(0, this.scrollTop),
                    this.resizePrev && this.resizePrev(),
                    this.resizeBasis(),
                    this.resizeNext && this.resizeNext(),
                    this.isWorking = !0,
                    t && t()
                }
            }, {
                key: "render",
                value: function() {
                    this.renderPrev && this.renderPrev();
                    var t = Math.floor(1e3 * this.hookes.contents.velocity[1]) / 1e3;
                    h.style.transform = "translate3D(0, " + t + "px, 0)";
                    for (var e in this.hookes)
                        this.hookes[e].render();
                    this.scrollItems.render(this.resolution.x > 1024),
                    this.renderNext && this.renderNext()
                }
            }, {
                key: "renderLoop",
                value: function() {
                    var t = this;
                    this.render(),
                    this.isWorkingSmooth && requestAnimationFrame(function() {
                        t.renderLoop()
                    })
                }
            }, {
                key: "on",
                value: function() {
                    var t = this
                      , e = (0,
                    s.default)() || (0,
                    l.default)() ? "orientationchange" : "resize";
                    window.addEventListener("scroll", function(e) {
                        t.scroll(e)
                    }, !1),
                    window.addEventListener(e, (0,
                    o.default)(function(e) {
                        t.resize()
                    }, 400), !1)
                }
            }, {
                key: "off",
                value: function() {
                    this.scrollPrev = null,
                    this.scrollNext = null,
                    this.resizeReset = null,
                    this.resizePrev = null,
                    this.resizeNext = null,
                    this.renderPrev = null,
                    this.renderNext = null
                }
            }]),
            t
        }();
        n.default = p
    }
    , {
        "./Hookes": 54,
        "./ScrollItems": 58,
        "js-util/debounce": 7,
        "js-util/isAndroid": 8,
        "js-util/isiOS": 12
    }],
    61: [function(t, e, n) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function(t, e) {
            var n = e.querySelector(".js-lower-header__in");
            n.innerHTML = (0,
            r.default)(n.innerText, "js-split-str");
            for (var i = n.querySelectorAll(".js-split-str"), a = t.resolution.x > 1024 ? 30 : 20, o = 0; o < i.length; o++) {
                var s = 2 * Math.random() * Math.PI;
                i[o].style.transform = "translate(\n      " + Math.cos(s) * a + "px,\n      " + Math.sin(s) * a + "px\n    ) scale(\n      " + (.5 * (2 * Math.random() - 1) + 1) + "\n    )"
            }
            setTimeout(function() {
                e.classList.add("is-shown");
                for (var t = 0; t < i.length; t++)
                    i[t].style.transform = ""
            }, 100)
        }
        ;
        var r = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("js-util/splitStr.js"))
    }
    , {
        "js-util/splitStr.js": 13
    }],
    62: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function(t) {
            var e = "#business-casestudy";
            if (document.querySelector(e)) {
                for (var n = document.querySelector(e).dataset.term, r = [], o = 0, s = 0; s < t.works.length && !(t.works[s].terms.indexOf(n) > -1 && (r.push(t.works[s]),
                ++o >= 3)); s++)
                    ;
                return new i.default({
                    el: e,
                    data: {
                        posts: r
                    },
                    mounted: function() {
                        var t = this;
                        r.length <= 0 || setTimeout(function() {
                            for (var e = t.$el.querySelectorAll(".js-hover"), n = 0; n < e.length; n++)
                                new a.default(e[n])
                        }, 100)
                    },
                    methods: {}
                })
            }
        }
        ;
        var i = r(t("vue/dist/vue.min"))
          , a = r(t("js-util/Hover.js"))
    }
    , {
        "js-util/Hover.js": 4,
        "vue/dist/vue.min": 35
    }],
    63: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function(t) {
            return new i.default({
                el: "#contact-form",
                data: {
                    input: {
                        inquiryCategory: {
                            default: [],
                            value: null,
                            validation: null,
                            error: []
                        },
                        sexuality: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        companyName: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        name: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        position: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        email: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        tel: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        trigger: {
                            default: "検索エンジン",
                            value: null,
                            validation: null,
                            error: []
                        },
                        inquiryContent: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        }
                    },
                    step: 0,
                    targetId: []
                },
                mounted: function() {
                    for (var t = this.$el.querySelectorAll(".js-hover"), e = 0; e < t.length; e++)
                        new a.default(t[e]);
                    this.initForm(),
                    this.targetId = document.querySelector("#page")
                },
                computed: {
                    isValid: function() {
                        var t = !0;
                        for (var e in this.input)
                            this.input[e].validation || (t = !1);
                        return t
                    }
                },
                methods: {
                    initForm: function() {
                        for (var t in this.input)
                            this.input[t].value = this.input[t].default,
                            this.input[t].validation = null,
                            this.input[t].error = []
                    },
                    initInput: function(t) {
                        t.validation = !0,
                        t.error = []
                    },
                    matchRequire: function(t) {
                        var e = t.value.length > 0;
                        e || t.error.push("必須項目をご確認ください。"),
                        !0 !== t.validation && null !== t.validation || (t.validation = e)
                    },
                    matchMail: function(t) {
                        var e = !!String(t.value).match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/);
                        !e && t.value && t.error.push("メールアドレスを入力してください。"),
                        !0 !== t.validation && null !== t.validation || (t.validation = e)
                    },
                    matchTel: function(t) {
                        var e = !!String(t.value).match(/^[0-9０-９\-\ー]+$/);
                        !e && t.value && t.error.push("電話番号を入力してください。"),
                        !0 !== t.validation && null !== t.validation || (t.validation = e)
                    },
                    matchMaxLength: function(t, e) {
                        var n = e
                          , r = t.value.length <= n;
                        r || t.error.push(n + "文字以内でご記入ください。"),
                        !0 !== t.validation && null !== t.validation || (t.validation = r)
                    },
                    noValidation: function(t) {
                        t.validation = !0
                    },
                    validate: function(t) {
                        switch (t) {
                        case "inquiryCategory":
                            this.initInput(this.input.inquiryCategory),
                            this.matchRequire(this.input.inquiryCategory);
                            break;
                        case "sexuality":
                            this.initInput(this.input.sexuality);
                            break;
                        case "companyName":
                            this.initInput(this.input.companyName),
                            this.matchRequire(this.input.companyName);
                            break;
                        case "name":
                            this.initInput(this.input.name),
                            this.matchRequire(this.input.name);
                            break;
                        case "position":
                            this.initInput(this.input.position),
                            this.noValidation(this.input.position);
                            break;
                        case "email":
                            this.initInput(this.input.email),
                            this.matchRequire(this.input.email),
                            this.matchMail(this.input.email);
                            break;
                        case "tel":
                            this.initInput(this.input.tel),
                            this.matchRequire(this.input.tel),
                            this.matchTel(this.input.tel);
                            break;
                        case "trigger":
                            this.initInput(this.input.trigger),
                            this.noValidation(this.input.trigger);
                            break;
                        case "inquiryContent":
                            this.initInput(this.input.inquiryContent),
                            this.matchRequire(this.input.inquiryContent),
                            this.matchMaxLength(this.input.inquiryContent, 1e3)
                        }
                    },
                    validateAll: function() {
                        for (var t in this.input)
                            this.validate(t)
                    },
                    back: function(t) {
                        t.preventDefault(),
                        this.scrollAndResize(0)
                    },
                    reset: function(t) {
                        t.preventDefault(),
                        this.initForm(),
                        this.scrollAndResize(0)
                    },
                    submit: function(e) {
                        var n = this;
                        switch (e.preventDefault(),
                        this.step) {
                        case 0:
                            this.validateAll(),
                            this.isValid ? this.scrollAndResize(1) : (0,
                            o.default)(document.querySelector("#contact-form"), 1e3, t.resize());
                            break;
                        case 1:
                            var r = new XMLHttpRequest
                              , i = document.querySelector("#contact-form-contents")
                              , a = new FormData(i);
                            console.log(a),
                            r.addEventListener("load", function(t) {
                                n.scrollAndResize(2),
                                console.log(r.responseText)
                            }),
                            r.addEventListener("error", function(t) {}),
                            r.open("POST", "/contact/sendmail.php"),
                            r.send(a)
                        }
                    },
                    scrollAndResize: function(e) {
                        var n = this;
                        (0,
                        o.default)(this.targetId, 1e3, function() {
                            n.step = e,
                            setTimeout(function() {
                                t.resize()
                            }, 1e3)
                        })
                    }
                }
            })
        }
        ;
        var i = r(t("vue/dist/vue.min"))
          , a = r(t("js-util/Hover.js"))
          , o = r(t("./scrollInnerPage.js"))
    }
    , {
        "./scrollInnerPage.js": 77,
        "js-util/Hover.js": 4,
        "vue/dist/vue.min": 35
    }],
    64: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function(t) {
            return new i.default({
                el: "#entry-form",
                data: {
                    input: {
                        inquiryCategory: {
                            default: [],
                            value: null,
                            validation: null,
                            error: []
                        },
                        prefecture: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        city: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        name: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        email: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        tel: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        timeZone: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        universityName: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        graduationDate: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        jobObjective: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        companyName: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        career: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        notes: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        resume: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        entrySheet: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        },
                        trigger: {
                            default: "",
                            value: null,
                            validation: null,
                            error: []
                        }
                    },
                    step: 0,
                    targetId: []
                },
                mounted: function() {
                    for (var t = this.$el.querySelectorAll(".js-hover"), e = 0; e < t.length; e++)
                        new a.default(t[e]);
                    this.initForm(),
                    this.targetId = document.querySelector("#page")
                },
                computed: {
                    isValid: function() {
                        var t = !0;
                        for (var e in this.input)
                            this.input[e].validation || (t = !1);
                        return t
                    }
                },
                methods: {
                    initForm: function() {
                        for (var t in this.input)
                            this.input[t].value = this.input[t].default,
                            this.input[t].validation = null,
                            this.input[t].error = []
                    },
                    initInput: function(t) {
                        t.validation = !0,
                        t.error = []
                    },
                    matchRequire: function(t) {
                        var e = t.value.length > 0;
                        e || t.error.push("必須項目をご確認ください。"),
                        !0 !== t.validation && null !== t.validation || (t.validation = e)
                    },
                    matchMail: function(t) {
                        var e = !!String(t.value).match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/);
                        !e && t.value && t.error.push("メールアドレスを入力してください。"),
                        !0 !== t.validation && null !== t.validation || (t.validation = e)
                    },
                    matchTel: function(t) {
                        var e = !!String(t.value).match(/^[0-9０-９\-\ー]+$/);
                        !e && t.value && t.error.push("電話番号を入力してください。"),
                        !0 !== t.validation && null !== t.validation || (t.validation = e)
                    },
                    matchMaxLength: function(t, e) {
                        var n = e
                          , r = t.value.length <= n;
                        r || t.error.push(n + "文字以内でご記入ください。"),
                        !0 !== t.validation && null !== t.validation || (t.validation = r)
                    },
                    matchFiletype: function(t, e) {
                        for (var n = !0, r = 0; r < t.value.length; r++)
                            if (!t.value[r].type.match(e)) {
                                n = !1;
                                break
                            }
                        !n && t.value && t.error.push("指定の形式のファイルを選択してください。"),
                        !0 !== t.validation && null !== t.validation || (t.validation = n)
                    },
                    getFile: function(t, e) {
                        this.input[e].value = t.target.files,
                        this.validate(e)
                    },
                    noValidation: function(t) {
                        t.validation = !0
                    },
                    validate: function(t) {
                        switch (t) {
                        case "inquiryCategory":
                            this.initInput(this.input.inquiryCategory),
                            this.matchRequire(this.input.inquiryCategory);
                            break;
                        case "prefecture":
                            this.initInput(this.input.prefecture);
                            break;
                        case "city":
                            this.initInput(this.input.city);
                            break;
                        case "name":
                            this.initInput(this.input.name),
                            this.matchRequire(this.input.name);
                            break;
                        case "email":
                            this.initInput(this.input.email),
                            this.matchRequire(this.input.email),
                            this.matchMail(this.input.email);
                            break;
                        case "tel":
                            this.initInput(this.input.tel),
                            this.matchRequire(this.input.tel),
                            this.matchTel(this.input.tel);
                            break;
                        case "timeZone":
                            this.initInput(this.input.timeZone);
                            break;
                        case "universityName":
                            this.initInput(this.input.universityName),
                            this.matchRequire(this.input.universityName);
                            break;
                        case "graduationDate":
                            this.initInput(this.input.graduationDate),
                            this.matchRequire(this.input.graduationDate);
                            break;
                        case "jobObjective":
                            this.initInput(this.input.jobObjective);
                            break;
                        case "companyName":
                            this.initInput(this.input.companyName);
                            break;
                        case "career":
                            this.initInput(this.input.career);
                            break;
                        case "notes":
                            this.initInput(this.input.notes);
                            break;
                        case "resume":
                            this.initInput(this.input.resume),
                            this.matchFiletype(this.input.resume, /(pdf)/g);
                            break;
                        case "entrySheet":
                            this.initInput(this.input.entrySheet),
                            this.matchFiletype(this.input.entrySheet, /(pdf)/g);
                            break;
                        case "trigger":
                            this.initInput(this.input.trigger)
                        }
                    },
                    validateAll: function() {
                        for (var t in this.input)
                            this.validate(t)
                    },
                    back: function(t) {
                        t.preventDefault(),
                        this.scrollAndResize(0)
                    },
                    reset: function(t) {
                        t.preventDefault(),
                        this.initForm(),
                        this.scrollAndResize(0)
                    },
                    submit: function(e) {
                        var n = this;
                        switch (e.preventDefault(),
                        this.step) {
                        case 0:
                            this.validateAll(),
                            this.isValid ? this.scrollAndResize(1) : (0,
                            o.default)(this.$el, 1e3, t.resize());
                            break;
                        case 1:
                            var r = new XMLHttpRequest
                              , i = document.querySelector("#entry-form-contents")
                              , a = new FormData(i);
                            r.addEventListener("load", function(t) {
                                n.scrollAndResize(2),
                                console.log(r.responseText)
                            }),
                            r.addEventListener("error", function(t) {}),
                            r.open("POST", "/career/entry/sendmail.php"),
                            r.send(a)
                        }
                    },
                    scrollAndResize: function(e) {
                        var n = this;
                        (0,
                        o.default)(this.targetId, 1e3, function() {
                            n.step = e,
                            setTimeout(function() {
                                t.resize()
                            }, 1e3)
                        })
                    }
                }
            })
        }
        ;
        var i = r(t("vue/dist/vue.min"))
          , a = r(t("js-util/Hover.js"))
          , o = r(t("./scrollInnerPage.js"))
    }
    , {
        "./scrollInnerPage.js": 77,
        "js-util/Hover.js": 4,
        "vue/dist/vue.min": 35
    }],
    65: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function(t) {
            return new i.default({
                el: "#global-navi-pc",
                data: {
                    items: null,
                    currentId: 0,
                    currentPath: "",
                    showChildrenId: -1,
                    maxHeight: window.innerHeight - 141,
                    clients: t.client,
                    works: t.works
                },
                mounted: function() {
                    this.items = this.$el.querySelectorAll(".p-global-navi-pc__item-children-in2"),
                    this.currentPath = location.pathname;
                    for (var t = 0; t < this.items.length; t++)
                        a.default.initialize(this.items[t], {
                            suppressScrollX: !0
                        })
                },
                methods: {
                    showChildren: function(t) {
                        this.showChildrenId = t;
                        for (var e = 0; e < this.items.length; e++)
                            a.default.update(this.items[e])
                    },
                    hideChildren: function() {
                        this.showChildrenId = -1
                    },
                    getJSON: function() {
                        var t = this
                          , e = new XMLHttpRequest;
                        e.onreadystatechange = function() {
                            if (4 == e.readyState && 200 == e.status) {
                                var n = JSON.parse(e.responseText);
                                t.jsonData = n
                            }
                        }
                        ,
                        e.open("GET", "/api/get_all_posts/", !1),
                        e.send(null)
                    },
                    resize: function(t) {
                        this.maxHeight = t - 141;
                        for (var e = 0; e < this.items.length; e++)
                            a.default.update(this.items[e])
                    }
                }
            })
        }
        ;
        var i = r(t("vue/dist/vue.min"))
          , a = r(t("perfect-scrollbar"))
    }
    , {
        "perfect-scrollbar": 14,
        "vue/dist/vue.min": 35
    }],
    66: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function() {
            return new i.default({
                el: "#global-navi-sp",
                data: {
                    items: null,
                    children: {},
                    currentId: 0,
                    currentPath: "",
                    isOpenedNavi: !1,
                    isOpenedChildren: {
                        business: !1,
                        company: !1,
                        career: !1,
                        client: !1
                    },
                    fixBody: new o.default
                },
                mounted: function() {
                    var t = this;
                    this.items = this.$el.querySelector(".p-global-navi-sp__items"),
                    this.currentPath = location.pathname,
                    a.default.initialize(this.items);
                    for (var e = this.$el.querySelectorAll(".p-global-navi-sp__item-children"), n = 0; n < e.length; n++) {
                        var r = e[n].dataset.key;
                        this.children[r] = {
                            wrap: e[n],
                            inner: e[n].querySelector(".p-global-navi-sp__item-children-in")
                        },
                        e[n].addEventListener("transitionend", function() {
                            a.default.update(t.items)
                        })
                    }
                },
                methods: {
                    toggleNavi: function() {
                        this.isOpenedNavi = !this.isOpenedNavi,
                        this.isOpenedNavi ? this.fixBody.set() : this.fixBody.cancel()
                    },
                    closeNavi: function() {
                        this.isOpenedNavi = !1,
                        this.fixBody.cancel()
                    },
                    toggleChildren: function(t, e) {
                        this.isOpenedChildren[e] = !this.isOpenedChildren[e],
                        this.isOpenedChildren[e] ? this.children[e].wrap.style.height = this.children[e].inner.clientHeight + "px" : this.children[e].wrap.style.height = "0"
                    }
                }
            })
        }
        ;
        var i = r(t("vue/dist/vue.min"))
          , a = r(t("perfect-scrollbar"))
          , o = r(t("js-util/FixBody"))
    }
    , {
        "js-util/FixBody": 3,
        "perfect-scrollbar": 14,
        "vue/dist/vue.min": 35
    }],
    67: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function(t) {
            return new i.default({
                el: "#latest-post",
                data: {
                    clients: t.client.slice(0, 4),
                    news: t.news
                },
                mounted: function() {
                    var t = this;
                    setTimeout(function() {
                        for (var e = t.$el.querySelectorAll(".js-hover"), n = 0; n < e.length; n++)
                            new a.default(e[n])
                    }, 100)
                },
                methods: {}
            })
        }
        ;
        var i = r(t("vue/dist/vue.min"))
          , a = r(t("js-util/Hover.js"))
    }
    , {
        "js-util/Hover.js": 4,
        "vue/dist/vue.min": 35
    }],
    68: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function(t) {
            return new i.default({
                el: "#sitemap",
                data: {
                    clients: t.client,
                    news: t.news,
                    works: t.works
                },
                mounted: function() {
                    var t = this;
                    setTimeout(function() {
                        for (var e = t.$el.querySelectorAll(".js-hover"), n = 0; n < e.length; n++)
                            new a.default(e[n])
                    }, 100)
                },
                methods: {}
            })
        }
        ;
        var i = r(t("vue/dist/vue.min"))
          , a = r(t("js-util/Hover.js"))
    }
    , {
        "js-util/Hover.js": 4,
        "vue/dist/vue.min": 35
    }],
    69: [function(t, e, n) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function() {
            return new r.default({
                el: "#video-modal",
                data: {
                    video: null,
                    isOpened: !1
                },
                mounted: function() {
                    this.video = this.$el.querySelector("video")
                },
                methods: {
                    open: function() {
                        this.isOpened = !0,
                        this.video.play(),
                        this.video.pause()
                    },
                    close: function() {
                        this.video.currentTime = 0,
                        this.video.pause(),
                        this.isOpened = !1
                    },
                    play: function() {
                        this.isOpened && this.video.play()
                    }
                }
            })
        }
        ;
        var r = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("vue/dist/vue.min"))
    }
    , {
        "vue/dist/vue.min": 35
    }],
    70: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , a = (t("js-util/isEdge"),
        t("js-util/isIE"),
        t("js-util/MathEx"),
        function() {
            function t(e) {
                r(this, t),
                this.elm = e,
                this.path = this.elm.querySelectorAll(".js-draw-text-path"),
                this.pathLengthArr = [],
                this.pathLengthDraw = 0,
                this.index = 0,
                this.speed = 24,
                this.isAnimate = !1,
                this.callback = null,
                this.setPathLength(),
                this.setPathStyle()
            }
            return i(t, [{
                key: "setPathLength",
                value: function() {
                    for (var t = 0; t < this.path.length; t++)
                        this.pathLengthArr[t] = this.path[t].getTotalLength()
                }
            }, {
                key: "setPathStyle",
                value: function() {
                    for (var t = 0; t < this.path.length; t++)
                        this.path[t].style.opacity = 0,
                        this.path[t].style.strokeDashoffset = this.pathLengthArr[t],
                        this.path[t].style.strokeDasharray = this.pathLengthArr[t]
                }
            }, {
                key: "start",
                value: function(t) {
                    this.isAnimate = !0,
                    this.callback = t,
                    this.renderLoop()
                }
            }, {
                key: "render",
                value: function() {
                    this.pathLengthDraw += this.speed,
                    this.path[this.index].style.opacity = 1,
                    this.path[this.index].style.strokeDashoffset = Math.max(this.pathLengthArr[this.index] - this.pathLengthDraw, 0)
                }
            }, {
                key: "renderLoop",
                value: function() {
                    var t = this;
                    !1 !== this.isAnimate && (this.render(),
                    this.pathLengthDraw < this.pathLengthArr[this.index] ? requestAnimationFrame(function() {
                        t.renderLoop()
                    }) : this.index < this.path.length - 1 ? (this.pathLengthDraw = 0,
                    this.index++,
                    requestAnimationFrame(function() {
                        t.renderLoop()
                    })) : (this.isAnimate = !1,
                    this.callback && this.callback()))
                }
            }]),
            t
        }());
        n.default = a
    }
    , {
        "js-util/MathEx": 5,
        "js-util/isEdge": 9,
        "js-util/isIE": 10
    }],
    71: [function(t, e, n) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function(t, e, n, r) {
            var i = [{
                featureType: "all",
                elementType: "labels.text.fill",
                stylers: [{
                    saturation: 36
                }, {
                    color: "#333333"
                }, {
                    lightness: 40
                }]
            }, {
                featureType: "all",
                elementType: "labels.text.stroke",
                stylers: [{
                    visibility: "on"
                }, {
                    color: "#ffffff"
                }, {
                    lightness: 16
                }]
            }, {
                featureType: "all",
                elementType: "labels.icon",
                stylers: [{
                    visibility: "off"
                }]
            }, {
                featureType: "administrative",
                elementType: "geometry.fill",
                stylers: [{
                    color: "#fefefe"
                }, {
                    lightness: 20
                }]
            }, {
                featureType: "administrative",
                elementType: "geometry.stroke",
                stylers: [{
                    color: "#fefefe"
                }, {
                    lightness: 17
                }, {
                    weight: 1.2
                }]
            }, {
                featureType: "landscape",
                elementType: "geometry",
                stylers: [{
                    color: "#f5f5f5"
                }, {
                    lightness: 20
                }]
            }, {
                featureType: "landscape",
                elementType: "labels.text",
                stylers: [{
                    visibility: "off"
                }]
            }, {
                featureType: "poi",
                elementType: "geometry",
                stylers: [{
                    color: "#f5f5f5"
                }, {
                    lightness: 21
                }]
            }, {
                featureType: "poi",
                elementType: "labels.text",
                stylers: [{
                    visibility: "off"
                }]
            }, {
                featureType: "poi.park",
                elementType: "geometry",
                stylers: [{
                    color: "#dedede"
                }, {
                    lightness: 21
                }]
            }, {
                featureType: "road",
                elementType: "labels.text",
                stylers: [{
                    visibility: "off"
                }]
            }, {
                featureType: "road.highway",
                elementType: "geometry.fill",
                stylers: [{
                    color: "#ffffff"
                }, {
                    lightness: 17
                }]
            }, {
                featureType: "road.highway",
                elementType: "geometry.stroke",
                stylers: [{
                    color: "#ffffff"
                }, {
                    lightness: 29
                }, {
                    weight: .2
                }]
            }, {
                featureType: "road.arterial",
                elementType: "geometry",
                stylers: [{
                    color: "#ffffff"
                }, {
                    lightness: 18
                }]
            }, {
                featureType: "road.local",
                elementType: "geometry",
                stylers: [{
                    color: "#ffffff"
                }, {
                    lightness: 16
                }]
            }, {
                featureType: "transit",
                elementType: "geometry",
                stylers: [{
                    color: "#f2f2f2"
                }, {
                    lightness: 19
                }]
            }, {
                featureType: "transit",
                elementType: "labels.text",
                stylers: [{
                    visibility: "off"
                }]
            }, {
                featureType: "water",
                elementType: "geometry",
                stylers: [{
                    color: "#e9e9e9"
                }, {
                    lightness: 17
                }]
            }, {
                featureType: "water",
                elementType: "labels.text",
                stylers: [{
                    visibility: "off"
                }]
            }]
              , a = new google.maps.LatLng(n,r)
              , o = new google.maps.StyledMapType(i,{
                name: "Access"
            })
              , s = {
                zoom: e,
                center: a,
                draggable: !1,
                zoomControl: !0,
                scrollwheel: !1,
                streetViewControl: !1,
                mapTypeControl: !1,
                mapTypeControlOptions: {
                    mapTypeIds: ["map_style"]
                }
            }
              , l = new google.maps.Map(t,s);
            l.mapTypes.set("map_style", o),
            l.setMapTypeId("map_style");
            new google.maps.Marker({
                position: a,
                map: l,
                icon: {
                    url: "/img/common/map_pin.png",
                    size: new google.maps.Size(29,41),
                    origin: new google.maps.Point(0,0),
                    anchor: new google.maps.Point(0,41),
                    scaledSize: new google.maps.Size(29,41)
                },
                title: ""
            });
            google.maps.event.addDomListener(window, "resize", function() {
                var t = l.getCenter();
                google.maps.event.trigger(l, "resize"),
                l.setCenter(t)
            })
        }
    }
    , {}],
    72: [function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function i(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var a = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , o = r(t("./KvSlogan"))
          , s = r(t("./KvBg"))
          , l = t("three")
          , c = t("js-util/isiOS")
          , u = t("js-util/isAndroid")
          , h = t("js-util/isSmartphone")
          , d = function() {
            function t(e) {
                i(this, t),
                this.scrollManager = e,
                this.wrap = document.querySelector(".js-index-kv-wrap"),
                this.canvas = document.querySelector(".js-index-kv"),
                this.renderer = new l.WebGLRenderer({
                    canvas: this.canvas,
                    antialias: !1,
                    alpha: !0
                }),
                this.scene = new l.Scene,
                this.camera = new l.OrthographicCamera(0,0,0,0,0,1e4),
                this.clock = new l.Clock,
                this.loader = new l.TextureLoader,
                this.sloganImages = [["../img/index/no_compress/kv_slogan_tex_01.png", -238], ["../img/index/no_compress/kv_slogan_tex_02.png", -177], ["../img/index/no_compress/kv_slogan_tex_03.png", -120], ["../img/index/no_compress/kv_slogan_tex_04.png", -65], ["../img/index/no_compress/kv_slogan_tex_05.png", 10], ["../img/index/no_compress/kv_slogan_tex_06.png", 97], ["../img/index/no_compress/kv_slogan_tex_07.png", 182], ["../img/index/no_compress/kv_slogan_tex_08.png", 238]],
                this.slogans = [],
                this.bg = new s.default,
                this.isRendering = !1,
                this.elmTitleJa = document.querySelector(".p-index-kv__title-ja"),
                this.elmBtn = document.querySelector(".p-index-kv__btn"),
                this.callbackPreload = null
            }
            return a(t, [{
                key: "init",
                value: function(t) {
                    this.callbackPreload = t,
                    this.renderer.setPixelRatio(c() || u() ? 2 : 1),
                    this.initSlogan()
                }
            }, {
                key: "initSlogan",
                value: function() {
                    for (var t = this, e = this.sloganImages.length, n = 0, r = 0; r < e; r++)
                        !function() {
                            var i = r
                              , a = h() ? 48 : 108
                              , s = 0 === r || 2 === r || 7 === r ? a / 2 : a
                              , l = a
                              , c = t.sloganImages[i][1];
                            h() && (c *= 48 / 108),
                            t.loader.load(t.sloganImages[i][0], function(r) {
                                t.slogans[i] = new o.default(s,l,c,r,.1 * i),
                                ++n >= e && t.initBg()
                            })
                        }()
                }
            }, {
                key: "initBg",
                value: function() {
                    var t = this;
                    this.bg.init(function() {
                        t.initScene(),
                        t.resize()
                    })
                }
            }, {
                key: "initScene",
                value: function() {
                    for (var t = 0; t < this.slogans.length; t++)
                        this.scene.add(this.slogans[t].obj);
                    this.scene.add(this.bg.obj),
                    this.camera.position.set(0, 0, 1e3),
                    this.callbackPreload()
                }
            }, {
                key: "start",
                value: function() {
                    this.clock.start(),
                    this.isRendering = !0
                }
            }, {
                key: "reset",
                value: function() {
                    this.wrap.style.height = ""
                }
            }, {
                key: "resize",
                value: function() {
                    this.wrap.style.height = this.scrollManager.resolution.y + "px",
                    this.canvas.style.width = "",
                    this.canvas.style.height = "";
                    var t = this.canvas.clientWidth
                      , e = this.canvas.clientHeight;
                    this.camera.left = -.5 * t,
                    this.camera.right = .5 * t,
                    this.camera.top = .5 * e,
                    this.camera.bottom = -.5 * e,
                    this.camera.updateProjectionMatrix(),
                    this.canvas.width = t,
                    this.canvas.height = e,
                    this.renderer.setSize(t, e),
                    this.bg.resize(t, e);
                    for (var n = 0; n < this.slogans.length; n++)
                        this.slogans[n].resize(e)
                }
            }, {
                key: "render",
                value: function() {
                    if (this.renderer.setClearColor(15658734, 1),
                    this.isRendering) {
                        for (var t = this.clock.getDelta(), e = 0; e < this.slogans.length; e++)
                            this.slogans[e].render(t);
                        this.bg.render(t),
                        this.bg.uniforms.timeShown.value >= -.5 && !this.elmTitleJa.classList.contains("is-shown") && (this.elmTitleJa.classList.add("is-shown"),
                        this.elmBtn.classList.add("is-shown"))
                    }
                    this.renderer.render(this.scene, this.camera)
                }
            }]),
            t
        }();
        n.default = d
    }
    , {
        "./KvBg": 73,
        "./KvSlogan": 74,
        "js-util/isAndroid": 8,
        "js-util/isSmartphone": 11,
        "js-util/isiOS": 12,
        three: 34
    }],
    73: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , a = t("three")
          , o = t("glslify")
          , s = t("js-util/isSmartphone")
          , l = function() {
            function t(e, n) {
                r(this, t),
                this.loader = new a.TextureLoader,
                this.images = ["../img/index/kv01.jpg", "../img/index/kv02.jpg", "../img/index/kv03.jpg", "../img/index/kv04.jpg", "../img/index/kv05.jpg", "../img/index/kv06.jpg"],
                this.imagesSp = ["../img/index/kv01_sp.jpg", "../img/index/kv02_sp.jpg", "../img/index/kv03_sp.jpg", "../img/index/kv04_sp.jpg", "../img/index/kv05_sp.jpg", "../img/index/kv06_sp.jpg"],
                this.textures = [],
                this.durationShown = 4,
                this.durationInterval = 4,
                this.uniforms = {
                    timeShown: {
                        type: "f",
                        value: -2
                    },
                    timeInterval: {
                        type: "f",
                        value: 0
                    },
                    durationShown: {
                        type: "f",
                        value: this.durationShown
                    },
                    durationInterval: {
                        type: "f",
                        value: this.durationInterval
                    },
                    resolution: {
                        type: "v2",
                        value: new a.Vector2
                    },
                    imageResolution: {
                        type: "v2",
                        value: new a.Vector2(1800,1200)
                    },
                    texture1: {
                        type: "t",
                        value: null
                    },
                    texture2: {
                        type: "t",
                        value: null
                    }
                },
                this.index1 = 0,
                this.index2 = 1,
                this.obj = null
            }
            return i(t, [{
                key: "init",
                value: function(t) {
                    var e = this
                      , n = s() ? this.imagesSp : this.images
                      , r = n.length;
                    s() && this.uniforms.imageResolution.value.set(750, 1334);
                    for (var i = 0, o = 0; o < r; o++)
                        !function() {
                            var s = o;
                            e.loader.load(n[s], function(n) {
                                n.minFilter = a.LinearFilter,
                                n.magFilter = a.LinearFilter,
                                e.textures[s] = n,
                                ++i >= r && (e.uniforms.texture1.value = e.textures[e.index1],
                                e.uniforms.texture2.value = e.textures[e.index2],
                                e.obj = e.createObj(),
                                e.obj.position.set(0, 0, -10),
                                t())
                            })
                        }()
                }
            }, {
                key: "createObj",
                value: function() {
                    return new a.Mesh(new a.PlaneBufferGeometry(2,2,32,32),new a.RawShaderMaterial({
                        uniforms: this.uniforms,
                        vertexShader: o(["#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 modelMatrix;\nuniform vec2 resolution;\n\nvarying vec3 vPosition;\nvarying vec2 vUv;\n\nvoid main(void) {\n  vec3 updatePosition = position * vec3(resolution / 2.0, 1.0);\n\n  vPosition = updatePosition;\n  vUv = uv;\n\n  gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(updatePosition, 1.0);\n}\n"]),
                        fragmentShader: o(["precision highp float;\n#define GLSLIFY 1\n\nuniform float timeShown;\nuniform float timeInterval;\nuniform float durationShown;\nuniform float durationInterval;\nuniform vec2 resolution;\nuniform vec2 imageResolution;\nuniform sampler2D texture1;\nuniform sampler2D texture2;\n\nvarying vec3 vPosition;\nvarying vec2 vUv;\n\nfloat circularOut(float t) {\n  return sqrt((2.0 - t) * t);\n}\n\nvoid main(void) {\n  // for Shown preload.\n  float stepShown = clamp(timeShown / durationShown, 0.0, 1.0);\n  float stepShownEase = circularOut(stepShown);\n  float stepInterval = clamp(timeInterval / durationInterval, 0.0, 1.0);\n  float stepIntervalEase = circularOut(stepInterval);\n\n  // for Interval Images\n  vec2 ratio = vec2(\n      min((resolution.x / resolution.y) / (imageResolution.x / imageResolution.y), 1.0),\n      min((resolution.y / resolution.x) / (imageResolution.y / imageResolution.x), 1.0)\n    );\n  vec2 uv1 = vec2(\n      (vUv.x - (((vUv.x * 2.0) - 1.0) * stepShown * 0.0333) - (((vUv.x * 2.0) - 1.0) * stepInterval * 0.0333)) * ratio.x + (1.0 - ratio.x) * 0.5,\n      (vUv.y - (((vUv.y * 2.0) - 1.0) * stepShown * 0.0333) - (((vUv.y * 2.0) - 1.0) * stepInterval * 0.0333)) * ratio.y + (1.0 - ratio.y) * 0.5\n    );\n  vec2 uv2 = vec2(\n      (vUv.x - (((vUv.x * 2.0) - 1.0) * stepInterval * 0.0333)) * ratio.x + (1.0 - ratio.x) * 0.5,\n      (vUv.y - (((vUv.y * 2.0) - 1.0) * stepInterval * 0.0333)) * ratio.y + (1.0 - ratio.y) * 0.5\n    );\n  vec4 texColor1 = texture2D(texture1, uv1);\n  vec4 texColor2 = texture2D(texture2, uv2);\n\n  // calcurate mask\n  float maskBase =\n    ((\n      sin(vPosition.y / 616.3) * 2.0\n      + cos(vPosition.x / 489.2 - 200.0) * 2.0\n      + sin(vPosition.x / 128.3) * 0.5\n      + cos(vPosition.y / 214.2) * 0.5\n    ) / 5.0 + 1.0) / 2.0;\n  float maskShown = clamp(maskBase + (stepShownEase * 2.0 - 1.0), 0.0, 1.0);\n  maskShown = smoothstep(0.2, 0.8, maskShown);\n  float maskInterval = clamp(maskBase + (stepIntervalEase * 2.0 - 1.0), 0.0, 1.0);\n  float maskInterval1 = 1.0 - smoothstep(0.4, 1.0, maskInterval);\n  float maskInterval2 = smoothstep(0.0, 0.6, maskInterval);\n\n  // add color\n  vec4 color = vec4(vec3(1.0), 1.0) * (1.0 - maskShown) + texColor1 * maskShown * maskInterval1 + texColor2 * maskInterval2;\n\n  gl_FragColor = color;\n}\n"]),
                        transparent: !0
                    }))
                }
            }, {
                key: "resize",
                value: function(t, e) {
                    this.uniforms.resolution.value.set(t, e)
                }
            }, {
                key: "render",
                value: function(t) {
                    this.uniforms.timeShown.value < this.durationShown ? this.uniforms.timeShown.value = Math.min(this.uniforms.timeShown.value + t, this.durationShown) : (this.uniforms.timeInterval.value = Math.min(this.uniforms.timeInterval.value + t, this.durationInterval),
                    this.uniforms.timeInterval.value === this.durationInterval && (this.index1 = this.index1 + 1 === this.images.length ? 0 : this.index1 + 1,
                    this.index2 = this.index2 + 1 === this.images.length ? 0 : this.index2 + 1,
                    this.uniforms.texture1.value = this.textures[this.index1],
                    this.uniforms.texture2.value = this.textures[this.index2],
                    this.uniforms.timeInterval.value = 0))
                }
            }]),
            t
        }();
        n.default = l
    }
    , {
        glslify: 2,
        "js-util/isSmartphone": 11,
        three: 34
    }],
    74: [function(t, e, n) {
        "use strict";
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var i = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    Object.defineProperty(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , a = t("three")
          , o = t("glslify")
          , s = t("js-util/isSmartphone")
          , l = function() {
            function t(e, n, i, a, o) {
                r(this, t),
                this.width = e,
                this.height = n,
                this.uniforms = {
                    time: {
                        type: "f",
                        value: 0
                    },
                    texture: {
                        type: "t",
                        value: a
                    },
                    delay: {
                        type: "f",
                        value: o
                    }
                },
                this.obj = this.createObj(),
                this.obj.position.set(i, 0, 0)
            }
            return i(t, [{
                key: "createObj",
                value: function() {
                    var t = new a.PlaneBufferGeometry(this.width,this.height,4,4);
                    return new a.Mesh(t,new a.RawShaderMaterial({
                        uniforms: this.uniforms,
                        vertexShader: o(["#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 modelMatrix;\nuniform float time;\nuniform float delay;\n\nvarying vec3 vPosition;\nvarying vec2 vUv;\n\nfloat exponentialInOut(float t) {\n  return t == 0.0 || t == 1.0\n    ? t\n    : t < 0.5\n      ? +0.5 * pow(2.0, (20.0 * t) - 10.0)\n      : -0.5 * pow(2.0, 10.0 - (t * 20.0)) + 1.0;\n}\n\nmat4 computeScaleMat(vec3 scale) {\n  return mat4(\n    scale.x, 0.0, 0.0, 0.0,\n    0.0, scale.y, 0.0, 0.0,\n    0.0, 0.0, scale.z, 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 computeRotateMatX(float radian) {\n  return mat4(\n    1.0, 0.0, 0.0, 0.0,\n    0.0, cos(radian), -sin(radian), 0.0,\n    0.0, sin(radian), cos(radian), 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 computeRotateMatY(float radian) {\n  return mat4(\n    cos(radian), 0.0, sin(radian), 0.0,\n    0.0, 1.0, 0.0, 0.0,\n    -sin(radian), 0.0, cos(radian), 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 computeRotateMatZ(float radian) {\n  return mat4(\n    cos(radian), -sin(radian), 0.0, 0.0,\n    sin(radian), cos(radian), 0.0, 0.0,\n    0.0, 0.0, 1.0, 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nmat4 computeRotateMat(float radX, float radY, float radZ) {\n  return computeRotateMatX(radX) * computeRotateMatY(radY) * computeRotateMatZ(radZ);\n}\n\nvoid main() {\n  float stepShown = exponentialInOut(min(time / 1.2 - delay, 1.0));\n  mat4 scaleMat = computeScaleMat(vec3(stepShown * 0.4 + 0.6));\n  mat4 rotateMat = computeRotateMat(\n      (1.0 - stepShown) * position.x * 0.4 + (1.0 - stepShown) * time,\n      (1.0 - stepShown) * position.y * 0.4 + (1.0 - stepShown) * time,\n      (1.0 - stepShown) * position.z * 0.4 + (1.0 - stepShown) * time\n    );\n  vec4 updatePosition = scaleMat * rotateMat * vec4(position, 1.0);\n\n  vUv = uv;\n\n  gl_Position = projectionMatrix * viewMatrix * modelMatrix * updatePosition;\n}\n"]),
                        fragmentShader: o(["precision highp float;\n#define GLSLIFY 1\n\nuniform float time;\nuniform sampler2D texture;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vec4 texColor = texture2D(texture, vUv);\n\n  if (texColor.a < 0.28) discard;\n\n  gl_FragColor = texColor;\n}\n"]),
                        transparent: !0,
                        depthTest: !1
                    }))
                }
            }, {
                key: "resize",
                value: function(t) {
                    this.obj.position.y = s() ? t / -2 + this.height / 2 + 145 : 42
                }
            }, {
                key: "render",
                value: function(t) {
                    this.uniforms.time.value += t
                }
            }]),
            t
        }();
        n.default = l
    }
    , {
        glslify: 2,
        "js-util/isSmartphone": 11,
        three: 34
    }],
    75: [function(t, e, n) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function(t, e) {
            for (var n = t.length, r = 0, i = 0; i < n; i++) {
                var a = new Image;
                a.onload = function() {
                    ++r >= n && e()
                }
                ,
                a.src = t[i]
            }
        }
    }
    , {}],
    76: [function(t, e, n) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function(t, e) {
            var n = t.querySelectorAll("img");
            if (n.length > 0) {
                for (var i = [], a = 0; a < n.length; a++)
                    i[a] = n[a].src;
                (0,
                r.default)(i, e)
            } else
                e()
        }
        ;
        var r = function(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(t("./loadImage"))
    }
    , {
        "./loadImage": 75
    }],
    77: [function(t, e, n) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        }),
        n.default = function(t, e, n) {
            var r = function(t) {
                return 0 == t || 1 == t ? t : t < .5 ? .5 * Math.pow(2, 20 * t - 10) : -.5 * Math.pow(2, 10 - 20 * t) + 1
            }
              , i = t
              , a = 0
              , o = 0
              , s = 0
              , l = !1;
            if (!l) {
                var c = i.getBoundingClientRect();
                s = Date.now(),
                l = !0,
                a = window.pageYOffset,
                o = a + c.top,
                function t() {
                    var i = Date.now() - s;
                    window.scrollTo(0, a + (o - a) * Math.min(r(i / e), 1)),
                    i < e ? requestAnimationFrame(t) : (n && n(),
                    l = !1)
                }()
            }
        }
    }
    , {}]
}, {}, [52]);
